{"version":3,"file":"index.31ac5b00.js","sources":["../../vite/modulepreload-polyfill","../../node_modules/ol/events/Event.js","../../node_modules/ol/ObjectEventType.js","../../node_modules/ol/Disposable.js","../../node_modules/ol/array.js","../../node_modules/ol/functions.js","../../node_modules/ol/obj.js","../../node_modules/ol/events/Target.js","../../node_modules/ol/events/EventType.js","../../node_modules/ol/events.js","../../node_modules/ol/Observable.js","../../node_modules/ol/util.js","../../node_modules/ol/Object.js","../../node_modules/ol/AssertionError.js","../../node_modules/ol/CollectionEventType.js","../../node_modules/ol/Collection.js","../../node_modules/ol/has.js","../../node_modules/ol/asserts.js","../../node_modules/ol/transform.js","../../node_modules/ol/extent/Relationship.js","../../node_modules/ol/extent.js","../../node_modules/ol/math.js","../../node_modules/ol/color.js","../../node_modules/ol/style/IconImageCache.js","../../node_modules/ol/layer/Property.js","../../node_modules/ol/layer/Base.js","../../node_modules/ol/render/EventType.js","../../node_modules/ol/layer/Layer.js","../../node_modules/ol/string.js","../../node_modules/ol/coordinate.js","../../node_modules/ol/renderer/Map.js","../../node_modules/ol/render/Event.js","../../node_modules/ol/css.js","../../node_modules/ol/dom.js","../../node_modules/ol/render/canvas.js","../../node_modules/ol/renderer/Composite.js","../../node_modules/ol/layer/Group.js","../../node_modules/ol/MapEvent.js","../../node_modules/ol/MapBrowserEvent.js","../../node_modules/ol/MapBrowserEventType.js","../../node_modules/ol/pointer/EventType.js","../../node_modules/ol/MapBrowserEventHandler.js","../../node_modules/ol/MapEventType.js","../../node_modules/ol/MapProperty.js","../../node_modules/ol/structs/PriorityQueue.js","../../node_modules/ol/TileState.js","../../node_modules/ol/TileQueue.js","../../node_modules/ol/ViewHint.js","../../node_modules/ol/ViewProperty.js","../../node_modules/ol/tilegrid/common.js","../../node_modules/ol/proj/Units.js","../../node_modules/ol/proj/Projection.js","../../node_modules/ol/proj/epsg3857.js","../../node_modules/ol/proj/epsg4326.js","../../node_modules/ol/proj/projections.js","../../node_modules/ol/proj/transforms.js","../../node_modules/ol/sphere.js","../../node_modules/ol/proj.js","../../node_modules/ol/centerconstraint.js","../../node_modules/ol/resolutionconstraint.js","../../node_modules/ol/rotationconstraint.js","../../node_modules/ol/easing.js","../../node_modules/ol/geom/flat/transform.js","../../node_modules/ol/geom/Geometry.js","../../node_modules/ol/geom/SimpleGeometry.js","../../node_modules/ol/geom/flat/closest.js","../../node_modules/ol/geom/flat/deflate.js","../../node_modules/ol/geom/flat/simplify.js","../../node_modules/ol/geom/flat/inflate.js","../../node_modules/ol/geom/flat/area.js","../../node_modules/ol/geom/LinearRing.js","../../node_modules/ol/geom/Point.js","../../node_modules/ol/geom/flat/contains.js","../../node_modules/ol/geom/flat/interiorpoint.js","../../node_modules/ol/geom/flat/segments.js","../../node_modules/ol/geom/flat/intersectsextent.js","../../node_modules/ol/geom/flat/reverse.js","../../node_modules/ol/geom/flat/orient.js","../../node_modules/ol/geom/Polygon.js","../../node_modules/ol/View.js","../../node_modules/ol/control/Control.js","../../node_modules/ol/control/Attribution.js","../../node_modules/ol/control/Rotate.js","../../node_modules/ol/control/Zoom.js","../../node_modules/ol/control/defaults.js","../../node_modules/ol/interaction/Property.js","../../node_modules/ol/interaction/Interaction.js","../../node_modules/ol/interaction/DoubleClickZoom.js","../../node_modules/ol/interaction/Pointer.js","../../node_modules/ol/events/condition.js","../../node_modules/ol/interaction/DragPan.js","../../node_modules/ol/interaction/DragRotate.js","../../node_modules/ol/render/Box.js","../../node_modules/ol/interaction/DragBox.js","../../node_modules/ol/interaction/DragZoom.js","../../node_modules/ol/events/KeyCode.js","../../node_modules/ol/interaction/KeyboardPan.js","../../node_modules/ol/interaction/KeyboardZoom.js","../../node_modules/ol/Kinetic.js","../../node_modules/ol/interaction/MouseWheelZoom.js","../../node_modules/ol/interaction/PinchRotate.js","../../node_modules/ol/interaction/PinchZoom.js","../../node_modules/ol/interaction/defaults.js","../../node_modules/ol/size.js","../../node_modules/ol/Map.js","../../node_modules/ol/Tile.js","../../node_modules/ol/ImageBase.js","../../node_modules/ol/ImageState.js","../../node_modules/ol/Image.js","../../node_modules/ol/ImageTile.js","../../node_modules/ol/reproj/common.js","../../node_modules/ol/reproj/Triangulation.js","../../node_modules/ol/reproj.js","../../node_modules/ol/reproj/Tile.js","../../node_modules/ol/structs/LRUCache.js","../../node_modules/ol/tilecoord.js","../../node_modules/ol/TileCache.js","../../node_modules/ol/source/TileEventType.js","../../node_modules/ol/source/Source.js","../../node_modules/ol/TileRange.js","../../node_modules/ol/tilegrid/TileGrid.js","../../node_modules/ol/tilegrid.js","../../node_modules/ol/source/Tile.js","../../node_modules/ol/tileurlfunction.js","../../node_modules/ol/source/UrlTile.js","../../node_modules/ol/source/TileImage.js","../../node_modules/ol/source/XYZ.js","../../node_modules/ol/source/OSM.js","../../node_modules/ol/Geolocation.js","../../node_modules/ol/Feature.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../../node_modules/ol/structs/RBush.js","../../node_modules/ol/source/VectorEventType.js","../../node_modules/ol/loadingstrategy.js","../../node_modules/ol/featureloader.js","../../node_modules/ol/source/Vector.js","../../node_modules/ol/ImageCanvas.js","../../node_modules/ol/renderer/Layer.js","../../node_modules/ol/renderer/canvas/Layer.js","../../node_modules/ol/renderer/canvas/ImageLayer.js","../../node_modules/ol/layer/TileProperty.js","../../node_modules/ol/layer/BaseTile.js","../../node_modules/ol/renderer/canvas/TileLayer.js","../../node_modules/ol/layer/Tile.js","../../node_modules/ol/style/Fill.js","../../node_modules/ol/geom/flat/interpolate.js","../../node_modules/ol/geom/flat/length.js","../../node_modules/ol/geom/LineString.js","../../node_modules/ol/style/Stroke.js","../../node_modules/ol/style/Image.js","../../node_modules/ol/colorlike.js","../../node_modules/ol/style/RegularShape.js","../../node_modules/ol/style/Circle.js","../../node_modules/ol/style/Style.js","../../node_modules/ol/style/Text.js","../../node_modules/ol/style/IconImage.js","../../node_modules/ol/style/Icon.js","../../node_modules/ol/style/flat.js","../../node_modules/ol/layer/BaseVector.js","../../node_modules/ol/render/canvas/Instruction.js","../../node_modules/ol/render/VectorContext.js","../../node_modules/ol/render/canvas/Builder.js","../../node_modules/ol/render/canvas/ImageBuilder.js","../../node_modules/ol/render/canvas/LineStringBuilder.js","../../node_modules/ol/render/canvas/PolygonBuilder.js","../../node_modules/ol/geom/flat/straightchunk.js","../../node_modules/ol/render/canvas/TextBuilder.js","../../node_modules/ol/render/canvas/BuilderGroup.js","../../node_modules/ol/geom/flat/textpath.js","../../node_modules/ol/render/canvas/Executor.js","../../node_modules/ol/render/canvas/ExecutorGroup.js","../../node_modules/ol/render/canvas/Immediate.js","../../node_modules/ol/render/canvas/hitdetect.js","../../node_modules/ol/renderer/vector.js","../../node_modules/ol/renderer/canvas/VectorLayer.js","../../node_modules/ol/layer/Vector.js","../../node_modules/ol/format/Feature.js","../../node_modules/ol/geom/MultiLineString.js","../../node_modules/ol/geom/MultiPoint.js","../../node_modules/ol/geom/flat/center.js","../../node_modules/ol/geom/MultiPolygon.js","../../node_modules/ol/geom/Circle.js","../../node_modules/ol/geom/GeometryCollection.js","../../node_modules/ol/format/JSONFeature.js","../../node_modules/ol/format/GeoJSON.js","../../node_modules/ol/renderer/canvas/VectorImageLayer.js","../../node_modules/ol/layer/VectorImage.js","../../node_modules/ol/xml.js","../../node_modules/ol/format/XMLFeature.js","../../node_modules/ol/format/xsd.js","../../node_modules/ol/format/GPX.js","../../node_modules/ol/format/TextFeature.js","../../node_modules/ol/format/IGC.js","../../node_modules/ol/format/KML.js","../../node_modules/ol/format/TopoJSON.js","../../node_modules/ol/interaction/DragAndDrop.js","../../node_modules/ol/interaction/DragRotateAndZoom.js","../../node_modules/ol/interaction/Draw.js","../../node_modules/ol/interaction/Modify.js","../../node_modules/ol/interaction/Snap.js","../../node_modules/ol/control/FullScreen.js","../../node_modules/ol/Overlay.js","../../node_modules/ol/control/OverviewMap.js","../../node_modules/ol/control/ScaleLine.js","../../node_modules/ol/control/ZoomSlider.js","../../node_modules/ol/control/ZoomToExtent.js","../../main.js"],"sourcesContent":["__VITE_IS_MODERN__&&(function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n}());","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.1.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output, dimension) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output, dimension) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (dest === undefined) {\n      dest = [size, size];\n    } else {\n      dest[0] = size;\n      dest[1] = size;\n    }\n    return dest;\n  }\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(event.element);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {Map}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {Map}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const targetElement = this.getTargetElement();\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const defaultView = this.getOwnerDocument().defaultView;\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\n      ];\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link module:ol/Map~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../Map.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, tempExtent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      tempTileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    if (!this.tileGrid) {\n      return null;\n    }\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.getInterpolate()\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/Geolocation\n */\nimport BaseEvent from './events/Event.js';\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  identityTransform,\n} from './proj.js';\nimport {toRadians} from './math.js';\n\n/**\n * @enum {string}\n */\nconst Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions',\n};\n\n/**\n * @classdesc\n * Events emitted on Geolocation error.\n */\nclass GeolocationError extends BaseEvent {\n  /**\n   * @param {GeolocationPositionError} error error object.\n   */\n  constructor(error) {\n    super(EventType.ERROR);\n\n    /**\n     * @type {number}\n     */\n    this.code = error.code;\n\n    /**\n     * @type {string}\n     */\n    this.message = error.message;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See https://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:accuracy'|'change:accuracyGeometry'|'change:altitude'|\n *    'change:altitudeAccuracy'|'change:heading'|'change:position'|'change:projection'|'change:speed'|'change:tracking'|\n *    'change:trackingOptions'} GeolocationObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<GeolocationObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'error', GeolocationError, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|GeolocationObjectEventTypes|\n *     'error', Return>} GeolocationOnSignature\n */\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](https://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     const geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires module:ol/events/Event~BaseEvent#event:error\n * @api\n */\nclass Geolocation extends BaseObject {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GeolocationOnSignature<void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    this.addChangeListener(Property.PROJECTION, this.handleProjectionChanged_);\n    this.addChangeListener(Property.TRACKING, this.handleTrackingChanged_);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        projection\n      );\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if ('geolocation' in navigator) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions()\n        );\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPosition} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(\n      Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude\n    );\n    this.set(\n      Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy\n    );\n    this.set(\n      Property.HEADING,\n      coords.heading === null ? undefined : toRadians(coords.heading)\n    );\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition);\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPositionError} error error object.\n   */\n  positionError_(error) {\n    this.dispatchEvent(new GeolocationError(error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return /** @type {?import(\"./geom/Polygon.js\").default} */ (\n      this.get(Property.ACCURACY_GEOMETRY) || null\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (\n      this.get(Property.ALTITUDE_ACCURACY)\n    );\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */ (\n      this.get(Property.PROJECTION)\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See https://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](https://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (\n      this.get(Property.TRACKING_OPTIONS)\n    );\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(Property.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  }\n}\n\nexport default Geolocation;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = function (feature) {\n          this.removeFeatureInternal(feature);\n        }.bind(this);\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.image_.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth)\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight)\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scale =\n      (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scale,\n      scale,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution\n    );\n\n    this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use \"flat\" style object literals instead of\n   * using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.).  See the documentation\n   * for the [flat style types]{@link module:ol/style/flat~FlatStyle} to see what properties are supported.\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/Circle\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      translate(center, 0, center.length, stride, deltaX, deltaY, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), options);\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/renderer/canvas/VectorImageLayer\n */\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\nimport EventType from '../../events/EventType.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ImageState from '../../ImageState.js';\nimport RBush from 'rbush';\nimport ViewHint from '../../ViewHint.js';\nimport {apply, compose, create} from '../../transform.js';\nimport {getHeight, getWidth, isEmpty, scaleFromCenter} from '../../extent.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasVectorImageLayerRenderer extends CanvasImageLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.layerImageRatio_ = layer.getImageRatio();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToVectorPixelTransform_ = create();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.vectorRenderer_.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.vectorRenderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    const vectorPixel = apply(\n      this.coordinateToVectorPixelTransform_,\n      apply(this.renderedPixelToCoordinateTransform_, pixel.slice())\n    );\n    return this.vectorRenderer_.getFeatures(vectorPixel);\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    this.vectorRenderer_.handleFontsChanged();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const hints = frameState.viewHints;\n    const vectorRenderer = this.vectorRenderer_;\n    let renderedExtent = frameState.extent;\n    if (this.layerImageRatio_ !== 1) {\n      renderedExtent = renderedExtent.slice(0);\n      scaleFromCenter(renderedExtent, this.layerImageRatio_);\n    }\n    const width = getWidth(renderedExtent) / viewResolution;\n    const height = getHeight(renderedExtent) / viewResolution;\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      vectorRenderer.useContainer(null, null);\n      const context = vectorRenderer.context;\n      const layerState = frameState.layerStatesArray[frameState.layerIndex];\n      context.globalAlpha = layerState.opacity;\n      const imageLayerState = Object.assign({}, layerState, {opacity: 1});\n      const imageFrameState = /** @type {import(\"../../Map.js\").FrameState} */ (\n        Object.assign({}, frameState, {\n          declutterTree: new RBush(9),\n          extent: renderedExtent,\n          size: [width, height],\n          viewState: /** @type {import(\"../../View.js\").State} */ (\n            Object.assign({}, frameState.viewState, {\n              rotation: 0,\n            })\n          ),\n          layerStatesArray: [imageLayerState],\n          layerIndex: 0,\n        })\n      );\n      let emptyImage = true;\n      const image = new ImageCanvas(\n        renderedExtent,\n        viewResolution,\n        pixelRatio,\n        context.canvas,\n        function (callback) {\n          if (\n            vectorRenderer.prepareFrame(imageFrameState) &&\n            vectorRenderer.replayGroupChanged\n          ) {\n            vectorRenderer.clipping = false;\n            if (vectorRenderer.renderFrame(imageFrameState, null)) {\n              vectorRenderer.renderDeclutter(imageFrameState);\n              emptyImage = false;\n            }\n            callback();\n          }\n        }\n      );\n\n      image.addEventListener(\n        EventType.CHANGE,\n        function () {\n          if (image.getState() !== ImageState.LOADED) {\n            return;\n          }\n          this.image_ = emptyImage ? null : image;\n          const imageResolution = image.getResolution();\n          const imagePixelRatio = image.getPixelRatio();\n          const renderedResolution =\n            (imageResolution * pixelRatio) / imagePixelRatio;\n          this.renderedResolution = renderedResolution;\n          this.coordinateToVectorPixelTransform_ = compose(\n            this.coordinateToVectorPixelTransform_,\n            width / 2,\n            height / 2,\n            1 / renderedResolution,\n            -1 / renderedResolution,\n            0,\n            -viewState.center[0],\n            -viewState.center[1]\n          );\n        }.bind(this)\n      );\n      image.load();\n    }\n\n    if (this.image_) {\n      this.renderedPixelToCoordinateTransform_ =\n        frameState.pixelToCoordinateTransform.slice();\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   */\n  preRender() {}\n\n  /**\n   */\n  postRender() {}\n\n  /**\n   */\n  renderDeclutter() {}\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(\n        coordinate,\n        frameState,\n        hitTolerance,\n        callback,\n        matches\n      );\n    } else {\n      return super.forEachFeatureAtCoordinate(\n        coordinate,\n        frameState,\n        hitTolerance,\n        callback,\n        matches\n      );\n    }\n  }\n}\n\nexport default CanvasVectorImageLayerRenderer;\n","/**\n * @module ol/layer/VectorImage\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text on this layer. The priority is defined\n * by the `zIndex` of the style and the render order of features. Higher z-index means higher priority.\n * Within the same z-index, a feature rendered before another has higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, to an image. This layer type provides great performance\n * during panning and zooming, but point symbols and texts are always rotated with the view and\n * pixels are scaled during zoom animations. For more accurate rendering of vector data, use\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorImageLayerRenderer>}\n * @api\n */\nclass VectorImageLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.imageRatio;\n    super(baseOptions);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.imageRatio_ =\n      options.imageRatio !== undefined ? options.imageRatio : 1;\n  }\n\n  /**\n   * @return {number} Ratio between rendered extent size and viewport extent size.\n   */\n  getImageRatio() {\n    return this.imageRatio_;\n  }\n\n  createRenderer() {\n    return new CanvasVectorImageLayerRenderer(this);\n  }\n}\n\nexport default VectorImageLayer;\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      thisArg !== undefined ? thisArg : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg !== undefined ? thisArg : this,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'xml';\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, options);\n    } else if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    } else {\n      return this.readFeatureFromNode(/** @type {Element} */ (source), options);\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, options) {\n    const features = this.readFeaturesFromDocument(doc, options);\n    if (features.length > 0) {\n      return features[0];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    if (!source) {\n      return [];\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, options);\n    } else if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    } else {\n      return this.readFeaturesFromNode(\n        /** @type {Element} */ (source),\n        options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), options)\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, options);\n    } else if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    } else {\n      return this.readGeometryFromNode(\n        /** @type {Element} */ (source),\n        options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readProjectionFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, options) {\n    const node = this.writeFeatureNode(feature, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, options) {\n    const node = this.writeFeaturesNode(features, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, options) {\n    const node = this.writeGeometryNode(geometry, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  makeArrayPusher,\n  makeArraySerializer,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readDateTime,\n  readDecimal,\n  readPositiveInteger,\n  readString,\n  writeDateTimeTextNode,\n  writeDecimalTextNode,\n  writeNonNegativeIntegerTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.topografix.com/GPX/1/1 ' +\n  'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType'),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt),\n});\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ] HasZ.\n * @property {boolean} [hasM] HasM.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node): void|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [this.getReadOptions(node, options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS, node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      } else {\n        return [];\n      }\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}),\n      GPX_SERIALIZERS,\n      GPX_NODE_FACTORY,\n      features,\n      [options]\n    );\n    return gpx;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readPositiveInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n});\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'rtept',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType)),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'trkseg',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg)),\n});\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'ele',\n  'time',\n  'magvar',\n  'geoidheight',\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'sym',\n  'type',\n  'fix',\n  'sat',\n  'hdop',\n  'vdop',\n  'pdop',\n  'ageofdgpsdata',\n  'dgpsid',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk',\n};\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, nodeName) {\n  const geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat'))\n  );\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>} [ends] Ends.\n * @return {import(\"../geom/Geometry.js\").GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n  let layout = 'XY';\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = 'XYZM';\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = 'XYZ';\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = 'XYM';\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = (flatCoordinates.length / 4) * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = (ends[i] / 4) * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      rteValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      rteValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      trkValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      trkValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'layoutOptions': {},\n    },\n    RTE_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'ends': [],\n      'layoutOptions': {},\n    },\n    TRK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    link,\n    objectStack,\n    LINK_SEQUENCE\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case 'XYZM':\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n    // fall through\n    case 'XYZ':\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case 'XYM':\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n    // pass\n  }\n  const orderedKeys =\n    node.nodeName == 'rtept'\n      ? RTEPT_TYPE_SEQUENCE[namespaceURI]\n      : WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'LineString') {\n    const lineString = /** @type {LineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    RTE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'MultiLineString') {\n    const multiLineString = /** @type {MultiLineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    TRK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(\n    context,\n    TRKSEG_SERIALIZERS,\n    TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(),\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'Point') {\n    const point = /** @type {Point} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\nexport default GPX;\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'text';\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return this.writeFeatureText(feature, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return this.writeFeaturesText(features, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\nexport default TextFeature;\n","/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {'barometric' | 'gps' | 'none'} IGCZ\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n */\n\n/**\n * @const\n * @type {RegExp}\n */\nconst B_RECORD_RE =\n  /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nconst NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nclass IGC extends TextFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {IGCZ}\n     */\n    this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : 'none';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const altitudeMode = this.altitudeMode_;\n    const lines = text.split(NEWLINE_RE);\n    /** @type {Object<string, string>} */\n    const properties = {};\n    const flatCoordinates = [];\n    let year = 2000;\n    let month = 0;\n    let day = 1;\n    let lastDateTime = -1;\n    let i, ii;\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      let m;\n      if (line.charAt(0) == 'B') {\n        m = B_RECORD_RE.exec(line);\n        if (m) {\n          const hour = parseInt(m[1], 10);\n          const minute = parseInt(m[2], 10);\n          const second = parseInt(m[3], 10);\n          let y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n          if (m[6] == 'S') {\n            y = -y;\n          }\n          let x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n          if (m[9] == 'W') {\n            x = -x;\n          }\n          flatCoordinates.push(x, y);\n          if (altitudeMode != 'none') {\n            let z;\n            if (altitudeMode == 'gps') {\n              z = parseInt(m[11], 10);\n            } else if (altitudeMode == 'barometric') {\n              z = parseInt(m[12], 10);\n            } else {\n              z = 0;\n            }\n            flatCoordinates.push(z);\n          }\n          let dateTime = Date.UTC(year, month, day, hour, minute, second);\n          // Detect UTC midnight wrap around.\n          if (dateTime < lastDateTime) {\n            dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n          }\n          flatCoordinates.push(dateTime / 1000);\n          lastDateTime = dateTime;\n        }\n      } else if (line.charAt(0) == 'H') {\n        m = HFDTE_RECORD_RE.exec(line);\n        if (m) {\n          day = parseInt(m[1], 10);\n          month = parseInt(m[2], 10) - 1;\n          year = 2000 + parseInt(m[3], 10);\n        } else {\n          m = H_RECORD_RE.exec(line);\n          if (m) {\n            properties[m[1]] = m[2].trim();\n          }\n        }\n      }\n    }\n    if (flatCoordinates.length === 0) {\n      return null;\n    }\n    const layout = altitudeMode == 'none' ? 'XYM' : 'XYZM';\n    const lineString = new LineString(flatCoordinates, layout);\n    const feature = new Feature(\n      transformGeometryWithOptions(lineString, false, options)\n    );\n    feature.setProperties(properties, true);\n    return feature;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  }\n}\n\nexport default IGC;\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport Icon from '../style/Icon.js';\nimport ImageState from '../ImageState.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeCDATASection,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {toRadians} from '../math.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} yunits Units of Y.\n * @property {import(\"../style/Icon.js\").IconOrigin} [origin] Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<Array<number>>} coordinates Coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/Icon.js\").IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': 'fraction',\n  'pixels': 'pixels',\n  'insetPixels': 'pixels',\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill|null}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill|null} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {import(\"../style/Image.js\").default|null}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default|null} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke|null}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke|null} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text|null}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text|null} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style|null}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style|null} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>|null} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n/**\n * Function that returns the scale needed to normalize an icon image to 32 pixels.\n * @param {import(\"../size.js\").Size} size Image size.\n * @return {number} Scale.\n */\nfunction scaleForSize(size) {\n  return 32 / Math.min(size[0], size[1]);\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2];\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: 'bottom-left',\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n\n    this.supportedMediaTypes = ['application/vnd.google-earth.kml+xml'];\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n      objectStack[0]\n    );\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, options),\n    ]);\n    if (feature) {\n      return feature;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        return features;\n      } else {\n        return [];\n      }\n    } else if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (feature) {\n        return [feature];\n      } else {\n        return [];\n      }\n    } else if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readNameFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source))\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n))\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [options],\n      orderedKeys,\n      this\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  /** @type {CanvasTextAlign} */\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    const imageSize = imageStyle.getSize();\n    if (imageSize && imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      const anchor = imageStyle.getAnchor();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = imageScale[0] * (imageSize[0] - anchor[0]);\n      textOffset[1] = imageScale[1] * (imageSize[1] / 2 - anchor[1]);\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          if (geometry instanceof GeometryCollection) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return type === 'Point' || type === 'MultiPoint';\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            const type = geometry.getType();\n            drawName = type === 'Point' || type === 'MultiPoint';\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && /&[^&]+;/.test(name)) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re =\n    /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  /** @type {import('../style/Icon.js').IconOrigin} */\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-left';\n    } else {\n      origin = 'top-left';\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-right';\n    } else {\n      origin = 'top-right';\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  /** @type {import('../style/Icon.js').IconOrigin|undefined} */\n  let anchorOrigin = 'bottom-left';\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (/^https?:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    // Google hotspots from https://kml4earth.appspot.com/icons.html#notes\n    if (src.includes('pushpin')) {\n      anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('arrow-reverse')) {\n      anchor = [54, 42];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('paddle')) {\n      anchor = [32, 1];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  const scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: 'bottom-left',\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n\n    const imageScale = imageStyle.getScaleArray()[0];\n    const imageSize = imageStyle.getSize();\n    if (imageSize === null) {\n      const imageState = imageStyle.getImageState();\n      if (imageState === ImageState.IDLE || imageState === ImageState.LOADING) {\n        const listener = function () {\n          const imageState = imageStyle.getImageState();\n          if (\n            !(\n              imageState === ImageState.IDLE ||\n              imageState === ImageState.LOADING\n            )\n          ) {\n            const imageSize = imageStyle.getSize();\n            if (imageSize && imageSize.length == 2) {\n              const resizeScale = scaleForSize(imageSize);\n              imageStyle.setScale(imageScale * resizeScale);\n            }\n            imageStyle.unlistenImageChange(listener);\n          }\n        };\n        imageStyle.listenImageChange(listener);\n        if (imageState === ImageState.IDLE) {\n          imageStyle.load();\n        }\n      }\n    } else if (imageSize.length == 2) {\n      const resizeScale = scaleForSize(imageSize);\n      imageStyle.setScale(imageScale * resizeScale);\n    }\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const coordinates = gxTrackObject.coordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n    /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    coordinates.push([x, y, z]);\n  } else {\n    coordinates.push([]);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      coordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = [];\n  const coordinates = gxTrackObject.coordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(coordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    if (coordinates[i].length == 3) {\n      flatCoordinates.push(\n        coordinates[i][0],\n        coordinates[i][1],\n        coordinates[i][2],\n        whens[i]\n      );\n    }\n  }\n  return new LineString(flatCoordinates, 'XYZM');\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, 'XYZ');\n    lineString.setProperties(properties, true);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, 'XYZ', [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == 'Point') {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'LineString') {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'Polygon') {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'GeometryCollection') {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, 'XYZ');\n    point.setProperties(properties, true);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, 'XYZ', ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    (\n      'fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE\n    );\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = styleObject['imageStyle'];\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    (\n      'textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE\n    );\n  const strokeStyle =\n    /** @type {Stroke} */\n    (\n      'strokeStyle' in styleObject\n        ? styleObject['strokeStyle']\n        : DEFAULT_STROKE_STYLE\n    );\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type !== 'Polygon' && type !== 'MultiPolygon';\n                })\n            );\n          } else if (type !== 'Polygon' && type !== 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Polygon' || type === 'MultiPolygon';\n                })\n            );\n          } else if (type === 'Polygon' || type === 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  // KML spec only allows one LinearRing  per innerBoundaryIs, but Google Earth\n  // allows multiple, so we parse multiple here too.\n  'LinearRing': makeArrayPusher(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  const innerBoundaryFlatLinearRings = pushParseAndPop(\n    /** @type {Array<Array<number>>} */ ([]),\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (innerBoundaryFlatLinearRings.length > 0) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(...innerBoundaryFlatLinearRings);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == 'XY' || layout == 'XYM') {\n    dimension = 2;\n  } else if (layout == 'XYZ' || layout == 'XYZM') {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName']\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value']\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value']\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Element} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h'])\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  })\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + nodeName);\n};\n\n/**\n * @param {Element} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: 'pixels',\n          y: size[1] - anchor[1],\n          yunits: 'pixels',\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  let scale = style.getScaleArray()[0];\n  let imageSize = size;\n  if (imageSize === null) {\n    imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n  }\n  if (imageSize.length == 2) {\n    const resizeScale = scaleForSize(imageSize);\n    scale = scale / resizeScale;\n  }\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ]\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === 'GeometryCollection') {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === 'MultiPoint') {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints()\n          );\n        } else if (type === 'MultiLineString') {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings()\n          );\n        } else if (type === 'MultiPolygon') {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons()\n          );\n        } else if (\n          type === 'Point' ||\n          type === 'LineString' ||\n          type === 'Polygon'\n        ) {\n          geometries.push(geometry);\n        } else {\n          assert(false, 39); // Unknown geometry type\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === 'MultiPoint') {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === 'MultiLineString') {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === 'MultiPolygon') {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === 'GeometryCollection') {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Point' || type === 'MultiPoint';\n                }).length;\n            }\n            return type === 'Point' || type === 'MultiPoint';\n          }\n        });\n        ('Point');\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'LineString' || type === 'MultiLineString';\n                  }).length;\n              }\n              return type === 'LineString' || type === 'MultiLineString';\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'Polygon' || type === 'MultiPolygon';\n                  }).length;\n              }\n              return type === 'Polygon' || type === 'MultiPolygon';\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Element} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nclass TopoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.layerName_ = options.layerName;\n\n    /**\n     * @private\n     * @type {?Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    if (object.type == 'Topology') {\n      const topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n      let transform,\n        scale = null,\n        translate = null;\n      if (topoJSONTopology['transform']) {\n        transform = topoJSONTopology['transform'];\n        scale = transform['scale'];\n        translate = transform['translate'];\n      }\n      const arcs = topoJSONTopology['arcs'];\n      if (transform) {\n        transformArcs(arcs, scale, translate);\n      }\n      /** @type {Array<Feature>} */\n      const features = [];\n      const topoJSONFeatures = topoJSONTopology['objects'];\n      const property = this.layerName_;\n      let feature;\n      for (const objectName in topoJSONFeatures) {\n        if (this.layers_ && !this.layers_.includes(objectName)) {\n          continue;\n        }\n        if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n          feature = /** @type {TopoJSONGeometryCollection} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push.apply(\n            features,\n            readFeaturesFromGeometryCollection(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options\n            )\n          );\n        } else {\n          feature = /** @type {TopoJSONGeometry} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push(\n            readFeatureFromGeometry(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options\n            )\n          );\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return this.dataProjection;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n};\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n  const coordinates = [];\n  let index;\n  for (let i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      const arc = arcs[index];\n      for (let j = 0, jj = arc.length; j < jj; ++j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    } else {\n      // reverse arc\n      const arc = arcs[~index];\n      for (let j = arc.length - 1; j >= 0; --j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    }\n  }\n  return coordinates;\n}\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  const coordinates = concatenateArcs(object['arcs'], arcs);\n  return new LineString(coordinates);\n}\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    // for each polygon\n    const polyArray = object['arcs'][i];\n    const ringCoords = [];\n    for (let j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Array<Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(\n  collection,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options\n) {\n  const geometries = collection['geometries'];\n  const features = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i],\n      arcs,\n      scale,\n      translate,\n      property,\n      name,\n      options\n    );\n  }\n  return features;\n}\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Feature} Feature.\n */\nfunction readFeatureFromGeometry(\n  object,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options\n) {\n  let geometry = null;\n  const type = object.type;\n  if (type) {\n    const geometryReader = GEOMETRY_READERS[type];\n    if (type === 'Point' || type === 'MultiPoint') {\n      geometry = geometryReader(object, scale, translate);\n    } else {\n      geometry = geometryReader(object, arcs);\n    }\n    geometry = transformGeometryWithOptions(geometry, false, options);\n  }\n  const feature = new Feature({geometry: geometry});\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  let properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties, true);\n  }\n  return feature;\n}\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (let i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  let x = 0;\n  let y = 0;\n  for (let i = 0, ii = arc.length; i < ii; ++i) {\n    const vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\nexport default TopoJSON;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {get as getProjection, getUserProjection} from '../proj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nexport class DragAndDropEvent extends Event {\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   */\n  constructor(type, file, features, projection) {\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = projection;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\n */\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      handleEvent: TRUE,\n    });\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragAndDropOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.readAsBuffer_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n    this.formats_ = [];\n    const formatConstructors = options.formatConstructors\n      ? options.formatConstructors\n      : [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      let format = formatConstructors[i];\n      if (typeof format === 'function') {\n        format = new format();\n      }\n      this.formats_.push(format);\n      this.readAsBuffer_ =\n        this.readAsBuffer_ || format.getType() === 'arraybuffer';\n    }\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection\n      ? getProjection(options.projection)\n      : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.target = options.target ? options.target : null;\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      projection = getUserProjection();\n      if (!projection) {\n        const view = map.getView();\n        projection = view.getProjection();\n      }\n    }\n\n    let text;\n    const formats = this.formats_;\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\n      const format = formats[i];\n      let input = result;\n      if (this.readAsBuffer_ && format.getType() !== 'arraybuffer') {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n        input = text;\n      }\n      const features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection,\n      });\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(\n          new DragAndDropEvent(\n            DragAndDropEventType.ADD_FEATURES,\n            file,\n            features,\n            projection\n          )\n        );\n        break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n        listen(dropArea, EventType.DROP, this.handleStop, this),\n      ];\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        (format.readFeatures(text, options))\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleDrop(event) {\n    const files = event.dataTransfer.files;\n    for (let i = 0, ii = files.length; i < ii; ++i) {\n      const file = files.item(i);\n      const reader = new FileReader();\n      reader.addEventListener(\n        EventType.LOAD,\n        this.handleResult_.bind(this, file)\n      );\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n}\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport {mouseOnly, shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n        ? options.maxPoints\n        : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(\n      function () {\n        this.handlePointerMove_(\n          new MapBrowserEvent(\n            MapBrowserEventType.POINTERMOVE,\n            event.map,\n            event.originalEvent,\n            false,\n            event.frameState\n          )\n        );\n      }.bind(this),\n      this.dragVertexDelay_\n    );\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout()\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates()\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry)\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {import(\"../Feature\").FeatureLike} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<import(\"../Feature\").FeatureLike>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, features, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<import(\"../Feature\").FeatureLike>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<import(\"../Feature\").FeatureLike>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    /** @type {Collection<Feature>} */\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this)\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this)\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer'\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").FeatureLike>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this)\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this)\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && !features.includes(feature)) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of candidate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      }\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(evt.element);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    this.removeFeature_(evt.element);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<import(\"../Feature\").FeatureLike>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (!features.includes(feature)) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (!geometries.includes(geometry)) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case 'Point':\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'MultiPoint':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'LineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiLineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Polygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiPolygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Circle':\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection)\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === 'Circle' &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          if (\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            let coordinates = segmentDataMatch.geometry.getCoordinates();\n            switch (segmentDataMatch.geometry.getType()) {\n              // prevent dragging closed linestrings by the connecting node\n              case 'LineString':\n              case 'MultiLineString':\n                continue;\n              // if dragging the first vertex of a polygon, ensure the other segment\n              // belongs to the closing vertex of the linear ring\n              case 'MultiPolygon':\n                coordinates = coordinates[depth[1]];\n              /* falls through */\n              case 'Polygon':\n                if (\n                  segmentDataMatch.index !==\n                  coordinates[depth[0]].length - 2\n                ) {\n                  continue;\n                }\n                break;\n              default:\n              // pass\n            }\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === 'Circle') {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../Map.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, coordinate) {\n    const pixelCoordinate = coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          geometry =\n            geometry ||\n            /** @type {import(\"../geom/SimpleGeometry\").default} */ (\n              feature.getGeometry()\n            );\n          if (\n            geometry.getType() === 'Point' &&\n            this.features_.getArray().includes(feature)\n          ) {\n            hitPointGeometry = geometry;\n            const coordinate = geometry.getFlatCoordinates().slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter}\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === 'Circle' &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case 'MultiLineString':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'Polygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'MultiPolygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'LineString':\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYEND,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case 'MultiLineString':\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'LineString':\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'MultiPolygon':\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case 'Polygon':\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      }\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === 'Circle') {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n          circleGeometry.clone().transform(userProjection, projection)\n        );\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection)\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === 'Circle' &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection)\n      ),\n      projection\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  squaredDistance,\n} from '../coordinate.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n} from '../proj.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Result\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  } else if (\n    /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element\n  ) {\n    return /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element;\n  }\n}\n\nconst tempSegment = [];\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @type {import(\"../source/Vector.js\").default|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(Array<Array<import('../coordinate.js').Coordinate>>, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.GEOMETRY_SEGMENTERS_ = {\n      'Point': this.segmentPointGeometry_.bind(this),\n      'LineString': this.segmentLineStringGeometry_.bind(this),\n      'LinearRing': this.segmentLineStringGeometry_.bind(this),\n      'Polygon': this.segmentPolygonGeometry_.bind(this),\n      'MultiPoint': this.segmentMultiPointGeometry_.bind(this),\n      'MultiLineString': this.segmentMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.segmentMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.segmentGeometryCollectionGeometry_.bind(this),\n      'Circle': this.segmentCircleGeometry_.bind(this),\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [register] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, register) {\n    register = register !== undefined ? register : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometry.getType()];\n      if (segmenter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(\n          createEmpty()\n        );\n        const segments =\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ ([]);\n        segmenter(segments, geometry);\n        if (segments.length === 1) {\n          this.rBush_.insert(boundingExtent(segments[0]), {\n            feature: feature,\n            segment: segments[0],\n          });\n        } else if (segments.length > 1) {\n          const extents = segments.map((s) => boundingExtent(s));\n          const segmentsData = segments.map((segment) => ({\n            feature: feature,\n            segment: segment,\n          }));\n          this.rBush_.load(extents, segmentsData);\n        }\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  forEachFeatureAdd_(feature) {\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  forEachFeatureRemove_(feature) {\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    /** @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} */\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = Object.values(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, unlisten) {\n    const unregister = unlisten !== undefined ? unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (\n      this.getFeatures_()\n    );\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../Map.js\").default} map Map.\n   * @return {Result|null} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const lowerLeft = map.getCoordinateFromPixel([\n      pixel[0] - this.pixelTolerance_,\n      pixel[1] + this.pixelTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      pixel[0] + this.pixelTolerance_,\n      pixel[1] - this.pixelTolerance_,\n    ]);\n    const box = boundingExtent([lowerLeft, upperRight]);\n\n    const segments = this.rBush_.getInExtent(box);\n\n    const segmentsLength = segments.length;\n    if (segmentsLength === 0) {\n      return null;\n    }\n\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    let closestVertex;\n    let minSquaredDistance = Infinity;\n\n    const squaredPixelTolerance = this.pixelTolerance_ * this.pixelTolerance_;\n    const getResult = () => {\n      if (closestVertex) {\n        const vertexPixel = map.getPixelFromCoordinate(closestVertex);\n        const squaredPixelDistance = squaredDistance(pixel, vertexPixel);\n        if (squaredPixelDistance <= squaredPixelTolerance) {\n          return {\n            vertex: closestVertex,\n            vertexPixel: [\n              Math.round(vertexPixel[0]),\n              Math.round(vertexPixel[1]),\n            ],\n          };\n        }\n      }\n      return null;\n    };\n\n    if (this.vertex_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() !== 'Circle') {\n          segmentData.segment.forEach((vertex) => {\n            const tempVertexCoord = fromUserCoordinate(vertex, projection);\n            const delta = squaredDistance(projectedCoordinate, tempVertexCoord);\n            if (delta < minSquaredDistance) {\n              closestVertex = vertex;\n              minSquaredDistance = delta;\n            }\n          });\n        }\n      }\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    if (this.edge_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        let vertex = null;\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() === 'Circle') {\n          let circleGeometry = segmentData.feature.getGeometry();\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circleGeometry = circleGeometry\n              .clone()\n              .transform(userProjection, projection);\n          }\n          vertex = toUserCoordinate(\n            closestOnCircle(\n              projectedCoordinate,\n              /** @type {import(\"../geom/Circle.js\").default} */ (\n                circleGeometry\n              )\n            ),\n            projection\n          );\n        } else {\n          const [segmentStart, segmentEnd] = segmentData.segment;\n          // points have only one coordinate\n          if (segmentEnd) {\n            tempSegment[0] = fromUserCoordinate(segmentStart, projection);\n            tempSegment[1] = fromUserCoordinate(segmentEnd, projection);\n            vertex = closestOnSegment(projectedCoordinate, tempSegment);\n          }\n        }\n        if (vertex) {\n          const delta = squaredDistance(projectedCoordinate, vertex);\n          if (delta < minSquaredDistance) {\n            closestVertex = vertex;\n            minSquaredDistance = delta;\n          }\n        }\n      }\n\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentCircleGeometry_(segments, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentGeometryCollectionGeometry_(segments, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometries[i].getType()];\n      if (segmenter) {\n        segmenter(segments, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentLineStringGeometry_(segments, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiLineStringGeometry_(segments, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPointGeometry_(segments, geometry) {\n    geometry.getCoordinates().forEach((point) => {\n      segments.push([point]);\n    });\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPolygonGeometry_(segments, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          segments.push(coordinates.slice(i, i + 2));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPointGeometry_(segments, geometry) {\n    segments.push([geometry.getCoordinates()]);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPolygonGeometry_(segments, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n}\n\nexport default Snap;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n    this.button_.title = tipLabel;\n    this.button_.setAttribute('type', 'button');\n    this.button_.appendChild(this.labelNode_);\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n    this.setClassName_(this.button_, this.isInFullscreen_);\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    if (fullscreen) {\n      element.classList.remove(...this.inactiveClassName_);\n      element.classList.add(...this.activeClassName_);\n    } else {\n      element.classList.remove(...this.activeClassName_);\n      element.classList.add(...this.inactiveClassName_);\n    }\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this)\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(doc['webkitIsFullScreen'] || doc.fullscreenElement);\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport View from '../View.js';\nimport ViewProperty from '../ViewProperty.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {\n  containsExtent,\n  equals as equalsExtent,\n  getBottomRight,\n  getTopLeft,\n  scaleFromCenter,\n} from '../extent.js';\nimport {listen, listenOnce} from '../events.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {replaceNode} from '../dom.js';\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='‹'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='›'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Base.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Base.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n  /**\n   * @param {Options} [options] OverviewMap options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u2039';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u203A';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    this.view_ = options.view;\n\n    const ovmap = new Map({\n      view: options.view,\n      controls: new Collection(),\n      interactions: new Collection(),\n    });\n\n    /**\n     * @type {Map}\n     * @private\n     */\n    this.ovmap_ = ovmap;\n\n    if (options.layers) {\n      options.layers.forEach(function (layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: 'center-center',\n      element: box,\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function (mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY,\n      };\n    };\n\n    const move = function (event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinateInternal(\n        /** @type {MouseEvent} */ (position)\n      );\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function (event) {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      scope.getMap().getView().setCenterInternal(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function () {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(\n        listen(\n          map,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleMapPropertyChange_,\n          this\n        )\n      );\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n\n      if (!this.ovmap_.isRendered()) {\n        this.updateBoxAfterOvmapIsRendered_();\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (\n        event.oldValue\n      );\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    } else if (\n      !this.ovmap_.isRendered() &&\n      (event.key === MapProperty.TARGET || event.key === MapProperty.SIZE)\n    ) {\n      this.ovmap_.updateSize();\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      const newView = new View({\n        projection: view.getProjection(),\n      });\n      this.ovmap_.setView(newView);\n    }\n\n    view.addChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n    // Sync once with the new view\n    this.handleRotationChanged_();\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (\n      ovmap.getSize()\n    );\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel = ovmap.getPixelFromCoordinateInternal(\n      getTopLeft(extent)\n    );\n    const bottomRightPixel = ovmap.getPixelFromCoordinateInternal(\n      getBottomRight(extent)\n    );\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (\n      boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO\n    ) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenterInternal();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = (mapSize[0] * resolution) / ovresolution;\n    const height = (mapSize[1] * resolution) / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateBoxAfterOvmapIsRendered_() {\n    if (this.ovmapPostrenderKey_) {\n      return;\n    }\n    this.ovmapPostrenderKey_ = listenOnce(\n      this.ovmap_,\n      MapEventType.POSTRENDER,\n      function (event) {\n        delete this.ovmapPostrenderKey_;\n        this.updateBox_();\n      },\n      this\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      this.updateBoxAfterOvmapIsRendered_();\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../Map.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n\n  /**\n   * Update the overview map element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n  }\n}\n\nexport default OverviewMap;\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm'\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {clamp} from '../math.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n  /**\n   * @param {Options} [options] Zoom slider options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n    });\n\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(\n      PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERUP,\n      this.handleDraggerEnd_.bind(this),\n      false\n    );\n\n    containerElement.addEventListener(\n      EventType.CLICK,\n      this.handleContainerClick_.bind(this),\n      false\n    );\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    let containerWidth = container.offsetWidth;\n    let containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return (this.sliderInitialized_ = false);\n    }\n\n    const containerStyle = getComputedStyle(container);\n    containerWidth -=\n      parseFloat(containerStyle['paddingRight']) +\n      parseFloat(containerStyle['paddingLeft']);\n    containerHeight -=\n      parseFloat(containerStyle['paddingTop']) +\n      parseFloat(containerStyle['paddingBottom']);\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const thumbStyle = getComputedStyle(thumb);\n    const thumbWidth =\n      thumb.offsetWidth +\n      parseFloat(thumbStyle['marginRight']) +\n      parseFloat(thumbStyle['marginLeft']);\n    const thumbHeight =\n      thumb.offsetHeight +\n      parseFloat(thumbStyle['marginTop']) +\n      parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return (this.sliderInitialized_ = true);\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2\n    );\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (\n        this.element.firstElementChild\n      );\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        const doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\n          listen(doc, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ =\n        this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    const res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent|null}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : this.extent;\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","/***\n * Library Import\n */\n\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport OSM from 'ol/source/OSM';\nimport TileImage from 'ol/source/TileImage';\nimport Geolocation from 'ol/Geolocation';\n\nimport { Vector as VectorSource } from 'ol/source';\nimport { \n  Vector as VectorLayer, \n  VectorImage as VectorImageLayer\n} from 'ol/layer';\n\nimport {GPX, GeoJSON, IGC, KML, TopoJSON} from 'ol/format';\n\nimport { \n  Draw, Snap, Modify, \n  DragAndDrop, DragRotateAndZoom, \n  defaults as defaultInteractions,\n} from 'ol/interaction';\n\nimport {\n  Tile as TileLayer, Group as LayerGroup\n } from 'ol/layer';\n\nimport { \n  ZoomToExtent, OverviewMap, ZoomSlider, FullScreen, ScaleLine, \n  defaults as defaultControls\n} from 'ol/control';\nimport { fromLonLat, transform } from 'ol/proj';\n\n/***\n * Program\n */\n\n// Data formats\nconst dragAndDropInteraction = new DragAndDrop({\n  formatConstructors: [GPX, GeoJSON, IGC, KML, TopoJSON],\n});\n\nconst source = new VectorSource({wrapX: false});\n// Create a vector variable to interact with later\nconst vector = new VectorLayer({\n  source: source,\n  style: {\n    'fill-color': 'rgba(255, 255, 255, 0.2)',\n    'stroke-color': '#3333ff',\n    'stroke-width': 2,\n    'circle-radius': 6,\n    'circle-fill-color': '#ff3333',\n  }\n});\n\nconst overviewMapControl = new OverviewMap({\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n  ],\n});\n\n// Create map variable to init ol\nvar map = new Map({\n  controls: defaultControls().extend([\n    overviewMapControl,\n    new ScaleLine(),\n    new FullScreen(),\n    new ZoomSlider(),\n    new ZoomToExtent({\n      extent: [\n        4895700.028417149, 5331463.936836658, \n        5050045.865083950, 5300463.201395324,\n      ],\n    }),\n  ]),\n  interactions: defaultInteractions().extend([\n    new DragRotateAndZoom(),\n    dragAndDropInteraction,\n  ]),\n  // layers: [raster, vector],\n  target: 'map',\n  view: new View({\n    center: [500000, 6000000],\n    zoom: 7,\n  }),\n});\n\nconst typeSelect = document.getElementById('type');\n\nconst modify = new Modify({source: source});\nmap.addInteraction(modify);\n\nlet draw, snap; // Global to remove it later\n\nfunction addInteraction() {\n  const value = typeSelect.value;\n  if (value !== 'None') {\n    draw = new Draw({\n      source: source,\n      type: value,\n    });\n    map.addInteraction(draw);\n    snap = new Snap({\n      source: source\n    });\n    map.addInteraction(snap);\n  }\n};\n\n// Drag&Drop function\ndragAndDropInteraction.on('addfeatures', function (event) {\n  const vectorSource = new VectorSource({\n    features: event.features,\n  });\n  map.addLayer(\n    new VectorImageLayer({\n      source: vectorSource,\n    })\n  );\n  map.getView().fit(vectorSource.getExtent());\n});\n\n// Onchange function\ntypeSelect.onchange = function () {\n  map.removeInteraction(draw);\n  map.removeInteraction(snap);\n  addInteraction();\n};\n\naddInteraction();\n\n// OSM Layer\nconst OSMap = new TileLayer({\n  title: 'OSMStandart',\n  source: new OSM(),\n});\n\n// Google Layer\nconst GoogleMap = new TileLayer({\n  title: \"GoogleTerrainRoads\",\n  source: new TileImage({ \n    url: 'http://mt1.google.com/vt/lyrs=m&hl=ru&x={x}&y={y}&z={z}'\n  }),\n  visible: false\n});\n\n// A group of layers to change layers among themselves\nconst layerGroup = new LayerGroup({\n  layers: [\n    OSMap,\n    GoogleMap,\n  ]\n});\n\n// Add Layer Group\nmap.addLayer(layerGroup);\n// Add Vector Layer\nmap.addLayer(vector);\n\nconst baseLayerElements = document.querySelectorAll('.btn-group-vertical > input[type=radio]')\nfor(let baseLayerElement of baseLayerElements) {\n  baseLayerElement.addEventListener('change', function() {\n    let baseLayerValue = this.value;\n    layerGroup.getLayers().forEach(\n      function(element) {\n        let baseLayerTitle = element.get('title');\n        element.setVisible(baseLayerTitle === baseLayerValue);\n    })\n  })\n};\n\n// Enable Geolocation\nvar geolocation = new Geolocation({\n  // enableHighAccuracy must be set to true to have the heading value.\n  trackingOptions: {\n    enableHighAccuracy: true,\n  },\n});\n\nwindow.onload = function() {\n  geolocation.setTracking(this);\n}\n\n// MyLocation function\ndocument.getElementById('myLocation').addEventListener('click', function() {\n  map.setView(\n    new View({\n      center: fromLonLat(geolocation.getPosition()),\n      zoom: 19\n    })\n  );\n});\n\nmap.on('click', function(e) {\n  let coordinates = Array(1).fill(transform(e.coordinate, 'EPSG:3857', 'EPSG:4326'));\n\n  // marksCoords.push(coordinates)\n  // console.log(marksCoords)\n\n  document.getElementById('lon').innerText = 'LON: ' + coordinates[0][0].toFixed(10);\n  document.getElementById('lat').innerText = 'LAT: ' + coordinates[0][1].toFixed(10);\n});"],"names":["relList","link","processPreload","mutations","mutation","node","getFetchOpts","script","fetchOpts","BaseEvent","type","stopPropagation","evt","ObjectEventType","Disposable","Disposable$1","binarySearch","haystack","needle","comparator","mid","cmp","numberSafeCompareFunction","low","high","found","a","b","linearFindNearest","arr","target","direction","n","i","reverseSubArray","begin","end","tmp","extend","data","extension","length","equals","arr1","arr2","len1","isSorted","func","strict","compare","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","called","lastResult","lastArgs","lastThis","nextArgs","arrayEquals","clear","object","property","isEmpty","Target","listener","listeners","listenersForType","event","isString","Event","dispatching","pendingRemovals","propagate","ii","pr","EventTarget","EventType","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","len","keys","unByKey","Observable$1","abstract","uidCounter_","getUid","obj","ObjectEvent","oldValue","BaseObject","values","value","eventType","silent","source","BaseObject$1","messages","AssertionError","code","message","AssertionError$1","CollectionEventType","Property","CollectionEvent","element","Collection","array","options","f","elem","prev","except","Collection$1","ua","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","WORKER_OFFSCREEN_CANVAS","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","passive","assert","assertion","errorCode","create","set","transform","c","d","e","setFromArray","transform1","transform2","apply","coordinate","x","y","makeScale","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","makeInverse","det","determinant","mat","transformStringDiv","toString","transformString","Relationship","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","dest","clone","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","wrapX","projection","projectionExtent","worldWidth","wrapAndSliceX","clamp","min","max","squaredSegmentDistance","t","squaredDistance","solveLinearSystem","maxRow","maxEl","r","absValue","j","coef","k","l","m","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","floor","ceil","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","rgb","fromString","cache","cacheSize","s","fromStringInternal_","asArray","g","hasAlpha","normalize","IconImageCache","iconImage","src","crossOrigin","getKey","maxCacheSize","colorString","shared","LayerProperty","BaseLayer","properties","managed","state","zIndex","states","background","maxResolution","minResolution","maxZoom","minZoom","opacity","visible","zindex","BaseLayer$1","RenderEventType","Layer","baseOptions","pixel","resolve","frameState","layerRenderer","map","layerStatesArray","layerState","arrayLayerState","inView","viewState","zoom","Layer$1","padNumber","number","width","precision","numberString","decimal","add","delta","closestOnCircle","circle","closestOnSegment","segment","along","coordinate1","coordinate2","rotate","cosAngle","sinAngle","scale","coord1","coord2","distance","squaredDistanceToSegment","worldsAway","getWorldsAway","sourceExtentWidth","MapRenderer","coordinateToPixelTransform","pixelToCoordinateTransform","composeTransform","hitTolerance","checkWrapped","layerFilter","thisArg2","result","forEachFeatureAtCoordinate","feature","layer","geometry","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","order","iconImageCache","expireIconCache","MapRenderer$1","RenderEvent","inversePixelTransform","context","RenderEvent$1","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","fontRegExMatchIndex","getFontParameters","fontSpec","match","style","createCanvasContext2D","height","canvasPool","settings","canvas","releaseCanvas","outerWidth","outerHeight","replaceNode","newNode","oldNode","parent","removeNode","removeChildren","replaceChildren","children","oldChildren","oldChild","newChild","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","measureFont","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","families","family","measureTextHeight","measureElement","metrics","measureText","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","lineHeight","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","w","h","executeLabelInstructions","label","contextInstructions","CompositeMapRenderer","container","declutterLayers","previousElement","sourceState","CompositeMapRenderer$1","GroupEvent","LayerGroup","layers","id","layersArray","listenerKeys","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","LayerGroup$1","MapEvent","MapEvent$1","MapBrowserEvent","originalEvent","dragging","activePointers","MapBrowserEvent$1","MapBrowserEventType","PointerEventType","MapBrowserEventHandler","moveTolerance","pointerEvent","newEvent","pointerId","doc","MapBrowserEventHandler$1","MapEventType","MapProperty","DROP","PriorityQueue","priorityFunction","keyFunction","elements","priorities","elementKey","priority","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","PriorityQueue$1","TileState","TileQueue","tilePriorityFunction","tileChangeCallback","added","tile","tileKey","maxTotalLoading","maxNewLoads","newLoads","TileQueue$1","getTilePriority","tileSourceKey","tileCenter","tileResolution","ViewHint","ViewProperty","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","METERS_PER_UNIT","Projection","global","tileGrid","worldExtent","Projection$1","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","point","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","EPSG4326Projection","axisOrientation","get","transforms","destination","transformFn","sourceCode","destinationCode","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","bearing","lon1","dByR","lat","lon","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","getPointResolution","units","pointResolution","getter","metersPerUnit","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","fromLonLat","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","userProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","easeIn","easeOut","inAndOut","linear","transform2D","anchor","anchorX","anchorY","translate","tmpTransform","createTransform","Geometry","revision","squaredTolerance","closestPoint","minSquaredDistance","coord","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","Geometry$1","SimpleGeometry","simplifiedGeometry","layout","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","SimpleGeometry$1","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","jj","deflateMultiCoordinatesArray","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","linearRingss","LinearRing","linearRingArea","LinearRing$1","Point","Point$1","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","forEach","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","Polygon","polygon","linearRingsArea","flatCenter","Polygon$1","circular","sphereRadius","sphereOffset","fromExtent","fromCircle","sides","arrayLength","makeRegular","startAngle","DEFAULT_MIN_ZOOM","View","resolutionConstraintInfo","createResolutionConstraint","centerConstraint","createCenterConstraint","resolutionConstraint","rotationConstraint","createRotationConstraint","padding","oldPadding","newPadding","offsetX","offsetY","newOptions","var_args","args","animationCount","animationCallback","series","animation","isNoopAnimation","now","more","seriesComplete","elapsed","fraction","progress","constrainedResolution","constrainedRotation","currentCenter","rotateCoordinate","addCoordinate","currentResolution","hints","enabled","logPower","reducedSize","calculateCenterOn","zoomFactor","nearest","baseLevel","geometryOrExtent","polygonFromExtent","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","position","shiftedCenter","deltaCoordinates","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","duration","resolutionDirection","targetCenter","targetResolution","targetZoom","targetRes","returnValue","centerNone","multiWorld","projExtent","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","constrainRotation","rotationNone","coordinatesEqual","View$1","Control","mapEvent","Control$1","Attribution","className","tipLabel","expandClassName","collapseLabel","collapseClassName","activeLabel","cssClasses","lookup","visibleAttributions","collapsible","attributionGetter","attributions","collapsed","Attribution$1","Rotate","compassClassName","button","view","contains","Rotate$1","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","currentZoom","newZoom","Zoom$1","defaults","controls","InteractionProperty","Interaction","mapBrowserEvent","active","pan","zoomByDelta","Interaction$1","DoubleClickZoom","stopEvent","browserEvent","DoubleClickZoom$1","PointerInteraction","handledUp","handled","centroid","pointerEvents","clientX","clientY","PointerInteraction$1","all","conditions","pass","altKeyOnly","altShiftKeysOnly","focus","targetElement","activeElement","focusWithTabindex","always","mouseActionButton","never","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","DragPan","condition","targetPointers","centroidFromPointers","scaleCoordinate","centerpx","DragPan$1","DragRotate","DragRotate$1","RenderBox","startPixel","endPixel","px","RenderBox$1","DragBoxEventType","DragBoxEvent","DragBox","completeBox","DragBox$1","DragZoom","DragZoom$1","KeyCode","KeyboardPan","keyEvent","keyCode","mapUnitsDelta","KeyboardPan$1","KeyboardZoom","charCode","KeyboardZoom$1","Kinetic","decay","minVelocity","delay","lastIndex","firstIndex","Kinetic$1","MouseWheelZoom","wheelEvent","timeLeft","useAnchor","MouseWheelZoom$1","PinchRotate","pointerOptions","rotationDelta","touch0","touch1","viewportPosition","PinchRotate$1","PinchZoom","scaleDelta","PinchZoom$1","interactions","kinetic","hasArea","toSize","removeLayerMapProperty","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","defaultControls","defaultInteractions","viewOptions","control","interaction","overlay","features","addLayersFrom","layerGroup","eventPosition","applyTransform","group","renderer","viewCoordinate","rootNode","interactionsArray","tileQueue","lowOnFrameBudget","postRenderFunctions","defaultView","keyboardEventTarget","time","previousFrameState","viewHints","oldLayerGroup","computedStyle","overlays","Map$1","Tile","tileCoord","Tile$1","ImageBase","pixelRatio","ImageBase$1","ImageState","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","error","ImageTile","tileLoadFunction","getBlankImage","ctx","ImageTile$1","ERROR_THRESHOLD","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","transformInvCache","transformInv","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","leftBound","triangle","newTriangle","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","Triangulation$1","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","calculateSourceResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","render","triangulation","sources","gutter","renderEdges","interpolate","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","step","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","sourceRange","srcX","srcY","renderReprojected","leftToLoad","sourceListenKey","ReprojTile$1","LRUCache","highWaterMark","keep","entry","LRUCache$1","getKeyZXY","fromKey","hash","withinExtentAndZ","tileRange","TileCache","usedTiles","TileCache$1","TileEventType","Source","adaptAttributions","self","reject","attributionLike","Source$1","TileRange","TileRange$1","tmpTileCoord","DECIMALS","TileGrid","restrictedTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","tileCoordZ","tileCoordX","tileCoordY","origin","tileSize","opt_tileCoord","reverseIntersectionPolicy","createOrUpdateTileCoord","opt_direction","viewport","fullTileRanges","TileGrid$1","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","TileSource","tileCache","covered","tileCoordKey","getTileGridForProjection","tilePixelRatio","scaleSize","tileCount","TileSourceEvent","TileSource$1","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","expandUrl","url","urls","startCharCode","stopCharCode","stop","UrlTile","uid","tileState","tileUrlFunction","UrlTile$1","TileImage","defaultTileLoadFunction","usedTileCache","thisProj","projKey","urlTileCoord","tileUrl","newTile","interimTile","tilegrid","proj","imageTile","TileImage$1","XYZ","XYZ$1","ATTRIBUTION","OSM","OSM$1","GeolocationError","Geolocation","tracking","projectedPosition","circularPolygon","Geolocation$1","Feature","geometryOrProperties","createStyleFunction","name","styles","Feature$1","quickselect","left","quickselectStep","defaultCompare","sd","newLeft","newRight","swap","RBush","maxEntries","bbox","toBBox","nodesToSearch","child","childBBox","tmpNode","item","createNode","equalsFn","path","indexes","goingUp","findItem","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","level","minArea","minEnlargement","targetNode","bboxArea","enlargement","enlargedArea","isNode","insertPath","splitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","RBush_","extents","rbush","RBush$1","VectorEventType","withCredentials","loadFeaturesXhr","format","success","failure","xhr","dataProjection","VectorSourceEvent","VectorSource","allStrategy","useSpatialIndex","featureKey","valid","newFeatures","geometryFeatures","modifyingCollection","fast","featureId","removeAndIgnoreReturn","clearEvent","anExtent","filter","closestFeature","previousMinSquaredDistance","minDistance","sid","loadedExtentsRtree","extentsToLoad","extentToLoad","featureChangeKeys","removed","loader","VectorSource$1","ImageCanvas","err","ImageCanvas$1","LayerRenderer","tiles","imageState","LayerRenderer$1","pixelContext","createPixelContext","CanvasLayerRenderer","col","row","backgroundColor","layerClassName","topLeft","topRight","bottomRight","bottomLeft","inverted","CanvasLayerRenderer$1","CanvasImageLayerRenderer","imageLayer","viewResolution","imageSource","renderedExtent","layerExtent","imageExtent","imageMapWidth","imageMapHeight","imageResolution","imagePixelRatio","viewCenter","canvasTransform","toTransformString","clipped","intersectsExtent","dw","dh","previousAlpha","CanvasImageLayerRenderer$1","TileProperty","BaseTileLayer","preload","useInterimTilesOnError","BaseTileLayer$1","CanvasTileLayerRenderer","tileLayer","tileOrigin","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpExtent","tmpTileRange","inTransition","childTileRange","canvasScale","zs","clips","clipZs","currentClip","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","transition","contextSaved","clip","alpha","alphaChanged","postRenderFunction","tileCallback","wantedTiles","CanvasTileLayerRenderer$1","TileLayer","TileLayer$1","Fill","Fill$1","interpolatePoint","o","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","m1","lineStringsCoordinateAtM","lineStringLength","LineString","lineString","LineString$1","Stroke","lineCap","lineDash","lineDashOffset","lineJoin","miterLimit","Stroke$1","ImageStyle","displacement","rotateWithView","ImageStyle$1","asColorLike","RegularShape","fill","renderOptions","stroke","strokeWidth","r1","r2","points","miterRatio","bevelAdd","aa","bb","dd","innerMiterRatio","innerLength","strokeStyle","maxRadius","radius2","angle0","radiusC","RegularShape$1","CircleStyle","Circle$2","Style","defaultGeometryFunction","toFunction","styleFunction","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","Style$1","DEFAULT_FILL_COLOR","Text","overflow","maxAngle","placement","textAlign","justify","textBaseline","Text$1","taintedTestContext","IconImage","Icon","getIconImage","iconImageSize","Icon$1","toStyle","flatStyle","getFill","getStroke","getText","getImage","prefix","iconSrc","iconImg","shapePoints","circleRadius","Circle","BaseVectorLayer","renderOrder","styleLike","toStyleFunction","BaseVectorLayer$1","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasInstruction","VectorContext","hitDetectionRenderer","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","fillStyle","imageStyle","declutterImageWithText","textStyle","VectorContext$1","CanvasBuilder","dashArray","dash","myEnd","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","builderEnds","builderEnd","builderBegin","builderEndss","myEnds","hitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","endGeometryInstruction","Builder","CanvasImageBuilder","myBegin","sharedData","ImageBuilder","CanvasLineStringBuilder","moveToLineToInstruction","LineStringBuilder","CanvasPolygonBuilder","numEnds","circleInstruction","PolygonBuilder","matchingChunk","chunkStart","chunkEnd","chunkM","acos","m12","m23","x12","y12","x23","y23","TEXT_ALIGN","CanvasTextBuilder","instructions","fillState","strokeState","textState","geometryType","flatOffset","flatEnd","oo","geometryWidths","beg","p0","p1","p2","p3","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","TextBuilder","BuilderGroup","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","CanvasBuilderGroup","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","reverse","flat","PI","singleSegment","previousAngle","iStart","charLength","chars","p4","getDeclutterBox","replayImageOrLabelArgs","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","textIsArray","renderWidth","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","previousFont","fillStrokeArgs","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","featureCallback","hitExtent","declutterTree","pixelCoordinates","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","declutterMode","labelWithAnchor","backgroundFill","backgroundStroke","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","Executor$1","ORDER","ExecutorGroup","allInstructions","renderBuffer","flatClipCoords","executors","instructionByZindex","candidates","declutteredFeatures","contextSize","newContext","getPixelIndexArray","imageData","idx","executor","builderTypes","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","pixelIndex","CanvasExecutorGroup","CanvasImmediateRenderer","userTransform","localTransform","close","geometries","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","CanvasImmediateRenderer$1","HIT_DETECT_RESOLUTION","createHitDetectionImageData","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","declutterBuilderGroup","circleReplay","textReplay","renderFeature","replayGroup","loading","renderFeatureInternal","renderGeometry","geometryRenderer","lineStringReplay","polygonReplay","imageBuilderGroup","imageReplay","textBuilderGroup","CanvasVectorLayerRenderer","vectorLayer","executorGroup","vectorSource","endWorld","world","compositionContext","transformToString","declutterExecutorGroup","executorGroups","animating","interacting","updateWhileAnimating","updateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","getRenderTolerance","getSquaredRenderTolerance","ready","dirty","userExtent","replayGroupInstructions","CanvasVectorLayerRenderer$1","VectorLayer","VectorLayer$1","FeatureFormat","transformGeometryWithOptions","write","featureProjection","transformed","equivalentProjection","MultiLineString","lineStrings","multiLineString","midpoints","midpoint","MultiLineString$1","MultiPoint","multiPoint","MultiPoint$1","MultiPolygon","thisLayout","polygons","thisEndss","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","prevEnds","lastEnds","MultiPolygon$1","circleExtent","Circle$1","GeometryCollection","geometryCollection","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","clonedGeometries","GeometryCollection$1","JSONFeature","getObject","JSONFeature$1","GeoJSON","geoJSONFeature","readGeometry","geoJSONObject","geoJSONFeatureCollection","geoJSONFeatures","crs","writeGeometry","objects","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","GeoJSON$1","CanvasVectorImageLayerRenderer","vectorPixel","vectorRenderer","imageLayerState","imageFrameState","emptyImage","renderedResolution","CanvasVectorImageLayerRenderer$1","VectorImageLayer","VectorImageLayer$1","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getDocument","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","isDocument","parse","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","fixedNodeName","fixedNamespaceURI","newNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","structureNS","parseNode","parsersNS","parsers","parser","pushParseAndPop","pushSerializeAndPop","xmlSerializer_","getXMLSerializer","document_","XMLFeature","XMLFeature$1","readBoolean","readBooleanString","string","readDateTime","dateTime","readDecimal","readDecimalString","readPositiveInteger","readNonNegativeIntegerString","readString","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","writeDateTimeTextNode","date","writeDecimalTextNode","writeNonNegativeIntegerTextNode","nonNegativeInteger","NAMESPACE_URIS","SCHEMA_LOCATION","FEATURE_READER","readRte","readTrk","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","writeRte","writeTrk","writeWpt","GPX","extensionsNode","featureReader","gpx","xmlnsUri","GPX_NODE_FACTORY","RTE_PARSERS","parseLink","parseExtensions","parseRtePt","RTEPT_PARSERS","TRK_PARSERS","parseTrkSeg","TRKSEG_PARSERS","parseTrkPt","TRKPT_PARSERS","WPT_PARSERS","LINK_SEQUENCE","LINK_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","writeTrkSeg","TRKSEG_NODE_FACTORY","TRKSEG_SERIALIZERS","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","parentNode","appendCoordinate","layoutOptions","applyLayoutOptions","href","rteValues","trkValues","GPX$1","TextFeature","TextFeature$1","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","IGC","altitudeMode","lines","year","month","day","lastDateTime","hour","minute","second","IGC$1","GX_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","PLACEMARK_PARSERS","extendedDataParser","regionParser","readMultiGeometry","readLineString","readLinearRing","readPoint","readPolygon","readStyle","placemarkStyleMapParser","readStyleURL","readGxMultiTrack","readGxTrack","NETWORK_LINK_PARSERS","linkParser","readURI","REGION_PARSERS","latLonAltBoxParser","lodParser","KML_SEQUENCE","KML_SERIALIZERS","writeDocument","writePlacemark","DEFAULT_COLOR","DEFAULT_FILL_STYLE","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","scaleForSize","createStyleDefaults","TEXTAREA","defaultIconUrlFunction","KML","styleUrl","createFeatureStyleFunction","styleUri","baseURI","styleMapValue","readStyleMapValue","localName","fs","networkLinks","regions","kml","createNameStyleFunction","foundStyle","textOffset","defaultStyle","sharedStyles","showPointNames","drawName","multiGeometryPoints","featureStyle","findStyle","nameStyle","styleValue","readColor","hexColor","readFlatCoordinates","re","readVec2","xunits","yunits","readScale","STYLE_MAP_PARSERS","pairDataParser","ICON_STYLE_PARSERS","readIcon","iconStyleParser","styleObject","IconObject","drawIcon","anchorXUnits","anchorYUnits","anchorOrigin","hotSpot","heading","resizeScale","LABEL_STYLE_PARSERS","labelStyleParser","LINE_STYLE_PARSERS","lineStyleParser","POLY_STYLE_PARSERS","polyStyleParser","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","gxCoordParser","GX_MULTITRACK_GEOMETRY_PARSERS","GX_TRACK_PARSERS","whenParser","gxTrackObject","whens","ICON_PARSERS","iconObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIsParser","outerBoundaryIsParser","flatLinearRings","STYLE_PARSERS","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DATA_PARSERS","dataParser","featureObject","EXTENDED_DATA_PARSERS","schemaDataParser","PAIR_PARSERS","pairObject","placemarkObject","SCHEMA_DATA_PARSERS","simpleDataParser","LAT_LON_ALT_BOX_PARSERS","regionObject","LOD_PARSERS","lodObject","INNER_BOUNDARY_IS_PARSERS","innerBoundaryFlatLinearRings","OUTER_BOUNDARY_IS_PARSERS","flatLinearRing","when","writeColorTextNode","rgba","abgr","hex","writeCoordinatesTextNode","EXTENDEDDATA_NODE_SERIALIZERS","writeDataNode","writeDataNodeValue","writeDataNodeName","pair","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","DATA_NODE_FACTORY","writeExtendedData","namesAndValues","names","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","writeIcon","icon","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","writeVec2","writeScaleTextNode","writeIconStyle","iconProperties","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","writeLabelStyle","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","writeLineStyle","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","writeStyle","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","v","styleArray","pointStyles","lineStyles","polyStyles","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLY_STYLE_SEQUENCE","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","outerRing","POLY_STYLE_SERIALIZERS","writePolyStyle","STYLE_SEQUENCE","STYLE_SERIALIZERS","vec2","KML$1","TopoJSON","topoJSONTopology","arcs","transformArcs","topoJSONFeatures","objectName","readFeaturesFromGeometryCollection","readFeatureFromGeometry","GEOMETRY_READERS","concatenateArcs","indices","arc","transformVertex","polyArray","ringCoords","geometryReader","transformArc","vertex","TopoJSON$1","DragAndDropEventType","DragAndDropEvent","file","DragAndDrop","formatConstructors","formats","dropArea","files","reader","DragAndDrop$1","DragRotateAndZoom","magnitude","angleDelta","DragRotateAndZoom$1","DrawEventType","DrawEvent","getTraceTargets","targets","appendGeometryTraceTargets","getSquaredDistance","getCoordinate","getCumulativeSquaredDistance","endIndex","lowIndex","highIndex","lowWholeIndex","highWholeIndex","interpolateCoordinate","appendTraceTarget","polys","sharedUpdateInfo","getTraceTargetUpdate","traceState","snapTolerance","closestTargetDistance","newTargetIndex","newEndIndex","targetIndex","minSegmentDistance","coordinateIndex","rel","getPointSegmentRelationship","newTarget","considerBothDirections","newCoordinate","forwardDistance","reverseDistance","ring","sharedRel","py","Draw","getMode","geometryFunction","mode","squaredLength","squaredCoordinateDistance","getDefaultStyleFunction","trace","move","lowerLeft","upperRight","previouslyForward","currentlyForward","fromIndex","toIndex","remove","updatedTraceTarget","oldTarget","tracing","startingToDraw","downPx","clickPx","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","sketchLineGeom","sketchFeature","newDrawing","ending","sketchFeatures","overlaySource","Draw$1","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","tempSegment","ModifyEventType","ModifyEvent","Modify","writer","segments","ss","rBush","nodesToRemove","nodeToRemove","segmentData","rings","centerSegmentData","circumferenceSegmentData","featureSegments","vertexFeature","dragSegment","depth","coordinateDistance","pixelCoordinate","insertVertices","vertexExtent","segmentDataMatches","componentSegments","compareIndexes","segmentDataMatch","closestVertex","closestOnSegmentData","sortByDistance","projectedDistanceToSegmentDataSquared","nodes","hitPointGeometry","viewExtent","bufferExtent","closestSegment","vertexPixel","dist","vertexSegments","pixel1","pixel2","squaredDist1","squaredDist2","geometryUid","rTree","newSegmentData","newSegmentData2","dragSegments","segmentsByFeature","deleted","component","newIndex","pointCoordinates","distanceToCenterSquared","distanceToCircumference","Modify$1","getFeatureFromEvent","Snap","register","feature_uid","segmenter","segmentsData","featuresToUpdate","unlisten","unregister","currentMap","segmentsLength","projectedCoordinate","squaredPixelTolerance","getResult","tempVertexCoord","segmentStart","segmentEnd","Snap$1","events","FullScreenEventType","FullScreen","labelActive","isFullScreenSupported","isFullScreen","exitFullScreen","requestFullScreenWithKeys","requestFullScreen","wasInFullscreen","fullscreen","oldMap","body","FullScreen$1","Overlay","panIntoViewOptions","mapRect","overlayRect","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","positioning","mapSize","posX","posY","Overlay$1","MAX_RATIO","MIN_RATIO","OverviewMap","ovmap","scope","overlayBox","computeDesiredMousePosition","mousePosition","endMoving","oldView","newView","equalsExtent","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","ovview","ovresolution","OverviewMap$1","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","ScaleLine","dpi","pointResolutionUnits","minWidth","maxWidth","nominalCount","suffix","metersPerDegree","decimalCount","previousCount","previousWidth","previousDecimalCount","html","resolutionScale","mapScale","stepWidth","scaleSteps","cls","isLast","lengthString","inchesPerMeter","ScaleLine$1","Direction","ZoomSlider","thumbElement","containerElement","containerWidth","containerHeight","containerStyle","thumb","thumbStyle","thumbWidth","thumbHeight","relativePosition","drag","amount","ZoomSlider$1","ZoomToExtent","ZoomToExtent$1","dragAndDropInteraction","vector","overviewMapControl","typeSelect","modify","draw","addInteraction","OSMap","GoogleMap","baseLayerElements","baseLayerElement","baseLayerValue","baseLayerTitle","geolocation"],"mappings":"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"}