{
  "version": 3,
  "sources": ["../../ol/rotationconstraint.js"],
  "sourcesContent": ["/**\r\n * @module ol/rotationconstraint\r\n */\r\nimport {toRadians} from './math.js';\r\n\r\n/**\r\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\r\n */\r\n\r\n/**\r\n * @param {number|undefined} rotation Rotation.\r\n * @return {number|undefined} Rotation.\r\n */\r\nexport function disable(rotation) {\r\n  if (rotation !== undefined) {\r\n    return 0;\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {number|undefined} rotation Rotation.\r\n * @return {number|undefined} Rotation.\r\n */\r\nexport function none(rotation) {\r\n  if (rotation !== undefined) {\r\n    return rotation;\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {number} n N.\r\n * @return {Type} Rotation constraint.\r\n */\r\nexport function createSnapToN(n) {\r\n  const theta = (2 * Math.PI) / n;\r\n  return (\r\n    /**\r\n     * @param {number|undefined} rotation Rotation.\r\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\r\n     * @return {number|undefined} Rotation.\r\n     */\r\n    function (rotation, isMoving) {\r\n      if (isMoving) {\r\n        return rotation;\r\n      }\r\n\r\n      if (rotation !== undefined) {\r\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\r\n        return rotation;\r\n      } else {\r\n        return undefined;\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n/**\r\n * @param {number} [tolerance] Tolerance.\r\n * @return {Type} Rotation constraint.\r\n */\r\nexport function createSnapToZero(tolerance) {\r\n  tolerance = tolerance || toRadians(5);\r\n  return (\r\n    /**\r\n     * @param {number|undefined} rotation Rotation.\r\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\r\n     * @return {number|undefined} Rotation.\r\n     */\r\n    function (rotation, isMoving) {\r\n      if (isMoving) {\r\n        return rotation;\r\n      }\r\n\r\n      if (rotation !== undefined) {\r\n        if (Math.abs(rotation) <= tolerance) {\r\n          return 0;\r\n        } else {\r\n          return rotation;\r\n        }\r\n      } else {\r\n        return undefined;\r\n      }\r\n    }\r\n  );\r\n}\r\n"],
  "mappings": ";;;;;AAaO,SAAS,QAAQ,UAAU;AAChC,MAAI,aAAa,QAAW;AAC1B,WAAO;AAAA,EACT,OAAO;AACL,WAAO;AAAA,EACT;AACF;AAMO,SAAS,KAAK,UAAU;AAC7B,MAAI,aAAa,QAAW;AAC1B,WAAO;AAAA,EACT,OAAO;AACL,WAAO;AAAA,EACT;AACF;AAMO,SAAS,cAAc,GAAG;AAC/B,QAAM,QAAS,IAAI,KAAK,KAAM;AAC9B,SAME,SAAU,UAAU,UAAU;AAC5B,QAAI,UAAU;AACZ,aAAO;AAAA,IACT;AAEA,QAAI,aAAa,QAAW;AAC1B,iBAAW,KAAK,MAAM,WAAW,QAAQ,GAAG,IAAI;AAChD,aAAO;AAAA,IACT,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF;AAEJ;AAMO,SAAS,iBAAiB,WAAW;AAC1C,cAAY,aAAa,UAAU,CAAC;AACpC,SAME,SAAU,UAAU,UAAU;AAC5B,QAAI,UAAU;AACZ,aAAO;AAAA,IACT;AAEA,QAAI,aAAa,QAAW;AAC1B,UAAI,KAAK,IAAI,QAAQ,KAAK,WAAW;AACnC,eAAO;AAAA,MACT,OAAO;AACL,eAAO;AAAA,MACT;AAAA,IACF,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF;AAEJ;",
  "names": []
}
