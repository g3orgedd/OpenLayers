{
  "version": 3,
  "sources": ["../../ieee754/index.js", "../../pbf/index.js", "../../ol/format/Feature.js", "../../ol/format/JSONFeature.js", "../../ol/format/GeoJSON.js", "../../ol/format/MVT.js", "../../ol/render/Feature.js"],
  "sourcesContent": ["/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\r\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\r\n  var e, m\r\n  var eLen = (nBytes * 8) - mLen - 1\r\n  var eMax = (1 << eLen) - 1\r\n  var eBias = eMax >> 1\r\n  var nBits = -7\r\n  var i = isLE ? (nBytes - 1) : 0\r\n  var d = isLE ? -1 : 1\r\n  var s = buffer[offset + i]\r\n\r\n  i += d\r\n\r\n  e = s & ((1 << (-nBits)) - 1)\r\n  s >>= (-nBits)\r\n  nBits += eLen\r\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n  m = e & ((1 << (-nBits)) - 1)\r\n  e >>= (-nBits)\r\n  nBits += mLen\r\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n  if (e === 0) {\r\n    e = 1 - eBias\r\n  } else if (e === eMax) {\r\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\r\n  } else {\r\n    m = m + Math.pow(2, mLen)\r\n    e = e - eBias\r\n  }\r\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\r\n}\r\n\r\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\r\n  var e, m, c\r\n  var eLen = (nBytes * 8) - mLen - 1\r\n  var eMax = (1 << eLen) - 1\r\n  var eBias = eMax >> 1\r\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\r\n  var i = isLE ? 0 : (nBytes - 1)\r\n  var d = isLE ? 1 : -1\r\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\r\n\r\n  value = Math.abs(value)\r\n\r\n  if (isNaN(value) || value === Infinity) {\r\n    m = isNaN(value) ? 1 : 0\r\n    e = eMax\r\n  } else {\r\n    e = Math.floor(Math.log(value) / Math.LN2)\r\n    if (value * (c = Math.pow(2, -e)) < 1) {\r\n      e--\r\n      c *= 2\r\n    }\r\n    if (e + eBias >= 1) {\r\n      value += rt / c\r\n    } else {\r\n      value += rt * Math.pow(2, 1 - eBias)\r\n    }\r\n    if (value * c >= 2) {\r\n      e++\r\n      c /= 2\r\n    }\r\n\r\n    if (e + eBias >= eMax) {\r\n      m = 0\r\n      e = eMax\r\n    } else if (e + eBias >= 1) {\r\n      m = ((value * c) - 1) * Math.pow(2, mLen)\r\n      e = e + eBias\r\n    } else {\r\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\r\n      e = 0\r\n    }\r\n  }\r\n\r\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\r\n\r\n  e = (e << mLen) | m\r\n  eLen += mLen\r\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\r\n\r\n  buffer[offset + i - d] |= s * 128\r\n}\r\n", "'use strict';\r\n\r\nmodule.exports = Pbf;\r\n\r\nvar ieee754 = require('ieee754');\r\n\r\nfunction Pbf(buf) {\r\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\r\n    this.pos = 0;\r\n    this.type = 0;\r\n    this.length = this.buf.length;\r\n}\r\n\r\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\r\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\r\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\r\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\r\n\r\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\r\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\r\n\r\n// Threshold chosen based on both benchmarking and knowledge about browser string\r\n// data structures (which currently switch structure types at 12 bytes or more)\r\nvar TEXT_DECODER_MIN_LENGTH = 12;\r\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\r\n\r\nPbf.prototype = {\r\n\r\n    destroy: function() {\r\n        this.buf = null;\r\n    },\r\n\r\n    // === READING =================================================================\r\n\r\n    readFields: function(readField, result, end) {\r\n        end = end || this.length;\r\n\r\n        while (this.pos < end) {\r\n            var val = this.readVarint(),\r\n                tag = val >> 3,\r\n                startPos = this.pos;\r\n\r\n            this.type = val & 0x7;\r\n            readField(tag, result, this);\r\n\r\n            if (this.pos === startPos) this.skip(val);\r\n        }\r\n        return result;\r\n    },\r\n\r\n    readMessage: function(readField, result) {\r\n        return this.readFields(readField, result, this.readVarint() + this.pos);\r\n    },\r\n\r\n    readFixed32: function() {\r\n        var val = readUInt32(this.buf, this.pos);\r\n        this.pos += 4;\r\n        return val;\r\n    },\r\n\r\n    readSFixed32: function() {\r\n        var val = readInt32(this.buf, this.pos);\r\n        this.pos += 4;\r\n        return val;\r\n    },\r\n\r\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\r\n\r\n    readFixed64: function() {\r\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\r\n        this.pos += 8;\r\n        return val;\r\n    },\r\n\r\n    readSFixed64: function() {\r\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\r\n        this.pos += 8;\r\n        return val;\r\n    },\r\n\r\n    readFloat: function() {\r\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\r\n        this.pos += 4;\r\n        return val;\r\n    },\r\n\r\n    readDouble: function() {\r\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\r\n        this.pos += 8;\r\n        return val;\r\n    },\r\n\r\n    readVarint: function(isSigned) {\r\n        var buf = this.buf,\r\n            val, b;\r\n\r\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\r\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\r\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\r\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\r\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\r\n\r\n        return readVarintRemainder(val, isSigned, this);\r\n    },\r\n\r\n    readVarint64: function() { // for compatibility with v2.0.1\r\n        return this.readVarint(true);\r\n    },\r\n\r\n    readSVarint: function() {\r\n        var num = this.readVarint();\r\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\r\n    },\r\n\r\n    readBoolean: function() {\r\n        return Boolean(this.readVarint());\r\n    },\r\n\r\n    readString: function() {\r\n        var end = this.readVarint() + this.pos;\r\n        var pos = this.pos;\r\n        this.pos = end;\r\n\r\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\r\n            // longer strings are fast with the built-in browser TextDecoder API\r\n            return readUtf8TextDecoder(this.buf, pos, end);\r\n        }\r\n        // short strings are fast with our custom implementation\r\n        return readUtf8(this.buf, pos, end);\r\n    },\r\n\r\n    readBytes: function() {\r\n        var end = this.readVarint() + this.pos,\r\n            buffer = this.buf.subarray(this.pos, end);\r\n        this.pos = end;\r\n        return buffer;\r\n    },\r\n\r\n    // verbose for performance reasons; doesn't affect gzipped size\r\n\r\n    readPackedVarint: function(arr, isSigned) {\r\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\r\n        var end = readPackedEnd(this);\r\n        arr = arr || [];\r\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\r\n        return arr;\r\n    },\r\n    readPackedSVarint: function(arr) {\r\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\r\n        var end = readPackedEnd(this);\r\n        arr = arr || [];\r\n        while (this.pos < end) arr.push(this.readSVarint());\r\n        return arr;\r\n    },\r\n    readPackedBoolean: function(arr) {\r\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\r\n        var end = readPackedEnd(this);\r\n        arr = arr || [];\r\n        while (this.pos < end) arr.push(this.readBoolean());\r\n        return arr;\r\n    },\r\n    readPackedFloat: function(arr) {\r\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\r\n        var end = readPackedEnd(this);\r\n        arr = arr || [];\r\n        while (this.pos < end) arr.push(this.readFloat());\r\n        return arr;\r\n    },\r\n    readPackedDouble: function(arr) {\r\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\r\n        var end = readPackedEnd(this);\r\n        arr = arr || [];\r\n        while (this.pos < end) arr.push(this.readDouble());\r\n        return arr;\r\n    },\r\n    readPackedFixed32: function(arr) {\r\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\r\n        var end = readPackedEnd(this);\r\n        arr = arr || [];\r\n        while (this.pos < end) arr.push(this.readFixed32());\r\n        return arr;\r\n    },\r\n    readPackedSFixed32: function(arr) {\r\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\r\n        var end = readPackedEnd(this);\r\n        arr = arr || [];\r\n        while (this.pos < end) arr.push(this.readSFixed32());\r\n        return arr;\r\n    },\r\n    readPackedFixed64: function(arr) {\r\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\r\n        var end = readPackedEnd(this);\r\n        arr = arr || [];\r\n        while (this.pos < end) arr.push(this.readFixed64());\r\n        return arr;\r\n    },\r\n    readPackedSFixed64: function(arr) {\r\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\r\n        var end = readPackedEnd(this);\r\n        arr = arr || [];\r\n        while (this.pos < end) arr.push(this.readSFixed64());\r\n        return arr;\r\n    },\r\n\r\n    skip: function(val) {\r\n        var type = val & 0x7;\r\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\r\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\r\n        else if (type === Pbf.Fixed32) this.pos += 4;\r\n        else if (type === Pbf.Fixed64) this.pos += 8;\r\n        else throw new Error('Unimplemented type: ' + type);\r\n    },\r\n\r\n    // === WRITING =================================================================\r\n\r\n    writeTag: function(tag, type) {\r\n        this.writeVarint((tag << 3) | type);\r\n    },\r\n\r\n    realloc: function(min) {\r\n        var length = this.length || 16;\r\n\r\n        while (length < this.pos + min) length *= 2;\r\n\r\n        if (length !== this.length) {\r\n            var buf = new Uint8Array(length);\r\n            buf.set(this.buf);\r\n            this.buf = buf;\r\n            this.length = length;\r\n        }\r\n    },\r\n\r\n    finish: function() {\r\n        this.length = this.pos;\r\n        this.pos = 0;\r\n        return this.buf.subarray(0, this.length);\r\n    },\r\n\r\n    writeFixed32: function(val) {\r\n        this.realloc(4);\r\n        writeInt32(this.buf, val, this.pos);\r\n        this.pos += 4;\r\n    },\r\n\r\n    writeSFixed32: function(val) {\r\n        this.realloc(4);\r\n        writeInt32(this.buf, val, this.pos);\r\n        this.pos += 4;\r\n    },\r\n\r\n    writeFixed64: function(val) {\r\n        this.realloc(8);\r\n        writeInt32(this.buf, val & -1, this.pos);\r\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\r\n        this.pos += 8;\r\n    },\r\n\r\n    writeSFixed64: function(val) {\r\n        this.realloc(8);\r\n        writeInt32(this.buf, val & -1, this.pos);\r\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\r\n        this.pos += 8;\r\n    },\r\n\r\n    writeVarint: function(val) {\r\n        val = +val || 0;\r\n\r\n        if (val > 0xfffffff || val < 0) {\r\n            writeBigVarint(val, this);\r\n            return;\r\n        }\r\n\r\n        this.realloc(4);\r\n\r\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\r\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\r\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\r\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\r\n    },\r\n\r\n    writeSVarint: function(val) {\r\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\r\n    },\r\n\r\n    writeBoolean: function(val) {\r\n        this.writeVarint(Boolean(val));\r\n    },\r\n\r\n    writeString: function(str) {\r\n        str = String(str);\r\n        this.realloc(str.length * 4);\r\n\r\n        this.pos++; // reserve 1 byte for short string length\r\n\r\n        var startPos = this.pos;\r\n        // write the string directly to the buffer and see how much was written\r\n        this.pos = writeUtf8(this.buf, str, this.pos);\r\n        var len = this.pos - startPos;\r\n\r\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\r\n\r\n        // finally, write the message length in the reserved place and restore the position\r\n        this.pos = startPos - 1;\r\n        this.writeVarint(len);\r\n        this.pos += len;\r\n    },\r\n\r\n    writeFloat: function(val) {\r\n        this.realloc(4);\r\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\r\n        this.pos += 4;\r\n    },\r\n\r\n    writeDouble: function(val) {\r\n        this.realloc(8);\r\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\r\n        this.pos += 8;\r\n    },\r\n\r\n    writeBytes: function(buffer) {\r\n        var len = buffer.length;\r\n        this.writeVarint(len);\r\n        this.realloc(len);\r\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\r\n    },\r\n\r\n    writeRawMessage: function(fn, obj) {\r\n        this.pos++; // reserve 1 byte for short message length\r\n\r\n        // write the message directly to the buffer and see how much was written\r\n        var startPos = this.pos;\r\n        fn(obj, this);\r\n        var len = this.pos - startPos;\r\n\r\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\r\n\r\n        // finally, write the message length in the reserved place and restore the position\r\n        this.pos = startPos - 1;\r\n        this.writeVarint(len);\r\n        this.pos += len;\r\n    },\r\n\r\n    writeMessage: function(tag, fn, obj) {\r\n        this.writeTag(tag, Pbf.Bytes);\r\n        this.writeRawMessage(fn, obj);\r\n    },\r\n\r\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\r\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\r\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\r\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\r\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\r\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\r\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\r\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\r\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\r\n\r\n    writeBytesField: function(tag, buffer) {\r\n        this.writeTag(tag, Pbf.Bytes);\r\n        this.writeBytes(buffer);\r\n    },\r\n    writeFixed32Field: function(tag, val) {\r\n        this.writeTag(tag, Pbf.Fixed32);\r\n        this.writeFixed32(val);\r\n    },\r\n    writeSFixed32Field: function(tag, val) {\r\n        this.writeTag(tag, Pbf.Fixed32);\r\n        this.writeSFixed32(val);\r\n    },\r\n    writeFixed64Field: function(tag, val) {\r\n        this.writeTag(tag, Pbf.Fixed64);\r\n        this.writeFixed64(val);\r\n    },\r\n    writeSFixed64Field: function(tag, val) {\r\n        this.writeTag(tag, Pbf.Fixed64);\r\n        this.writeSFixed64(val);\r\n    },\r\n    writeVarintField: function(tag, val) {\r\n        this.writeTag(tag, Pbf.Varint);\r\n        this.writeVarint(val);\r\n    },\r\n    writeSVarintField: function(tag, val) {\r\n        this.writeTag(tag, Pbf.Varint);\r\n        this.writeSVarint(val);\r\n    },\r\n    writeStringField: function(tag, str) {\r\n        this.writeTag(tag, Pbf.Bytes);\r\n        this.writeString(str);\r\n    },\r\n    writeFloatField: function(tag, val) {\r\n        this.writeTag(tag, Pbf.Fixed32);\r\n        this.writeFloat(val);\r\n    },\r\n    writeDoubleField: function(tag, val) {\r\n        this.writeTag(tag, Pbf.Fixed64);\r\n        this.writeDouble(val);\r\n    },\r\n    writeBooleanField: function(tag, val) {\r\n        this.writeVarintField(tag, Boolean(val));\r\n    }\r\n};\r\n\r\nfunction readVarintRemainder(l, s, p) {\r\n    var buf = p.buf,\r\n        h, b;\r\n\r\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\r\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\r\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\r\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\r\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\r\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\r\n\r\n    throw new Error('Expected varint not more than 10 bytes');\r\n}\r\n\r\nfunction readPackedEnd(pbf) {\r\n    return pbf.type === Pbf.Bytes ?\r\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\r\n}\r\n\r\nfunction toNum(low, high, isSigned) {\r\n    if (isSigned) {\r\n        return high * 0x100000000 + (low >>> 0);\r\n    }\r\n\r\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\r\n}\r\n\r\nfunction writeBigVarint(val, pbf) {\r\n    var low, high;\r\n\r\n    if (val >= 0) {\r\n        low  = (val % 0x100000000) | 0;\r\n        high = (val / 0x100000000) | 0;\r\n    } else {\r\n        low  = ~(-val % 0x100000000);\r\n        high = ~(-val / 0x100000000);\r\n\r\n        if (low ^ 0xffffffff) {\r\n            low = (low + 1) | 0;\r\n        } else {\r\n            low = 0;\r\n            high = (high + 1) | 0;\r\n        }\r\n    }\r\n\r\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\r\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\r\n    }\r\n\r\n    pbf.realloc(10);\r\n\r\n    writeBigVarintLow(low, high, pbf);\r\n    writeBigVarintHigh(high, pbf);\r\n}\r\n\r\nfunction writeBigVarintLow(low, high, pbf) {\r\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\r\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\r\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\r\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\r\n    pbf.buf[pbf.pos]   = low & 0x7f;\r\n}\r\n\r\nfunction writeBigVarintHigh(high, pbf) {\r\n    var lsb = (high & 0x07) << 4;\r\n\r\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\r\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\r\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\r\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\r\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\r\n    pbf.buf[pbf.pos++]  = high & 0x7f;\r\n}\r\n\r\nfunction makeRoomForExtraLength(startPos, len, pbf) {\r\n    var extraLen =\r\n        len <= 0x3fff ? 1 :\r\n        len <= 0x1fffff ? 2 :\r\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\r\n\r\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\r\n    pbf.realloc(extraLen);\r\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\r\n}\r\n\r\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\r\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\r\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\r\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\r\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\r\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\r\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\r\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\r\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\r\n\r\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\r\n\r\nfunction readUInt32(buf, pos) {\r\n    return ((buf[pos]) |\r\n        (buf[pos + 1] << 8) |\r\n        (buf[pos + 2] << 16)) +\r\n        (buf[pos + 3] * 0x1000000);\r\n}\r\n\r\nfunction writeInt32(buf, val, pos) {\r\n    buf[pos] = val;\r\n    buf[pos + 1] = (val >>> 8);\r\n    buf[pos + 2] = (val >>> 16);\r\n    buf[pos + 3] = (val >>> 24);\r\n}\r\n\r\nfunction readInt32(buf, pos) {\r\n    return ((buf[pos]) |\r\n        (buf[pos + 1] << 8) |\r\n        (buf[pos + 2] << 16)) +\r\n        (buf[pos + 3] << 24);\r\n}\r\n\r\nfunction readUtf8(buf, pos, end) {\r\n    var str = '';\r\n    var i = pos;\r\n\r\n    while (i < end) {\r\n        var b0 = buf[i];\r\n        var c = null; // codepoint\r\n        var bytesPerSequence =\r\n            b0 > 0xEF ? 4 :\r\n            b0 > 0xDF ? 3 :\r\n            b0 > 0xBF ? 2 : 1;\r\n\r\n        if (i + bytesPerSequence > end) break;\r\n\r\n        var b1, b2, b3;\r\n\r\n        if (bytesPerSequence === 1) {\r\n            if (b0 < 0x80) {\r\n                c = b0;\r\n            }\r\n        } else if (bytesPerSequence === 2) {\r\n            b1 = buf[i + 1];\r\n            if ((b1 & 0xC0) === 0x80) {\r\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\r\n                if (c <= 0x7F) {\r\n                    c = null;\r\n                }\r\n            }\r\n        } else if (bytesPerSequence === 3) {\r\n            b1 = buf[i + 1];\r\n            b2 = buf[i + 2];\r\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\r\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\r\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\r\n                    c = null;\r\n                }\r\n            }\r\n        } else if (bytesPerSequence === 4) {\r\n            b1 = buf[i + 1];\r\n            b2 = buf[i + 2];\r\n            b3 = buf[i + 3];\r\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\r\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\r\n                if (c <= 0xFFFF || c >= 0x110000) {\r\n                    c = null;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (c === null) {\r\n            c = 0xFFFD;\r\n            bytesPerSequence = 1;\r\n\r\n        } else if (c > 0xFFFF) {\r\n            c -= 0x10000;\r\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\r\n            c = 0xDC00 | c & 0x3FF;\r\n        }\r\n\r\n        str += String.fromCharCode(c);\r\n        i += bytesPerSequence;\r\n    }\r\n\r\n    return str;\r\n}\r\n\r\nfunction readUtf8TextDecoder(buf, pos, end) {\r\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\r\n}\r\n\r\nfunction writeUtf8(buf, str, pos) {\r\n    for (var i = 0, c, lead; i < str.length; i++) {\r\n        c = str.charCodeAt(i); // code point\r\n\r\n        if (c > 0xD7FF && c < 0xE000) {\r\n            if (lead) {\r\n                if (c < 0xDC00) {\r\n                    buf[pos++] = 0xEF;\r\n                    buf[pos++] = 0xBF;\r\n                    buf[pos++] = 0xBD;\r\n                    lead = c;\r\n                    continue;\r\n                } else {\r\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\r\n                    lead = null;\r\n                }\r\n            } else {\r\n                if (c > 0xDBFF || (i + 1 === str.length)) {\r\n                    buf[pos++] = 0xEF;\r\n                    buf[pos++] = 0xBF;\r\n                    buf[pos++] = 0xBD;\r\n                } else {\r\n                    lead = c;\r\n                }\r\n                continue;\r\n            }\r\n        } else if (lead) {\r\n            buf[pos++] = 0xEF;\r\n            buf[pos++] = 0xBF;\r\n            buf[pos++] = 0xBD;\r\n            lead = null;\r\n        }\r\n\r\n        if (c < 0x80) {\r\n            buf[pos++] = c;\r\n        } else {\r\n            if (c < 0x800) {\r\n                buf[pos++] = c >> 0x6 | 0xC0;\r\n            } else {\r\n                if (c < 0x10000) {\r\n                    buf[pos++] = c >> 0xC | 0xE0;\r\n                } else {\r\n                    buf[pos++] = c >> 0x12 | 0xF0;\r\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\r\n                }\r\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\r\n            }\r\n            buf[pos++] = c & 0x3F | 0x80;\r\n        }\r\n    }\r\n    return pos;\r\n}\r\n", "/**\r\n * @module ol/format/Feature\r\n */\r\nimport {abstract} from '../util.js';\r\nimport {\r\n  equivalent as equivalentProjection,\r\n  get as getProjection,\r\n  transformExtent,\r\n} from '../proj.js';\r\n\r\n/**\r\n * @typedef {Object} ReadOptions\r\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\r\n * If not provided, the projection will be derived from the data (where possible) or\r\n * the `dataProjection` of the format is assigned (where set). If the projection\r\n * can not be derived from the data and if no `dataProjection` is set for a format,\r\n * the features will not be reprojected.\r\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\r\n * This is only required when reading data with tile pixels as geometry units. When configured,\r\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\r\n * provided.\r\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\r\n * created by the format reader. If not provided, features will be returned in the\r\n * `dataProjection`.\r\n */\r\n\r\n/**\r\n * @typedef {Object} WriteOptions\r\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\r\n * If not provided, the `dataProjection` of the format is assigned (where set).\r\n * If no `dataProjection` is set for a format, the features will be returned\r\n * in the `featureProjection`.\r\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\r\n * that will be serialized by the format writer. If not provided, geometries are assumed\r\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\r\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\r\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\r\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\r\n * as they are provided at construction.  If `true`, the right-hand rule will\r\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\r\n * exterior and counter-clockwise for interior rings).  Note that not all\r\n * formats support this.  The GeoJSON format does use this property when writing\r\n * geometries.\r\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\r\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\r\n * coordinates with a large number of decimal places, not generally wanted on output.\r\n * Set a number here to round coordinates. Can also be used to ensure that\r\n * coordinates read in can be written back out with the same number of decimals.\r\n * Default is no rounding.\r\n */\r\n\r\n/**\r\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for feature formats.\r\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\r\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\r\n * file formats.  See the documentation for each format for more details.\r\n *\r\n * @abstract\r\n * @api\r\n */\r\nclass FeatureFormat {\r\n  constructor() {\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../proj/Projection.js\").default|undefined}\r\n     */\r\n    this.dataProjection = undefined;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../proj/Projection.js\").default|undefined}\r\n     */\r\n    this.defaultFeatureProjection = undefined;\r\n\r\n    /**\r\n     * A list media types supported by the format in descending order of preference.\r\n     * @type {Array<string>}\r\n     */\r\n    this.supportedMediaTypes = null;\r\n  }\r\n\r\n  /**\r\n   * Adds the data projection to the read options.\r\n   * @param {Document|Element|Object|string} source Source.\r\n   * @param {ReadOptions} [options] Options.\r\n   * @return {ReadOptions|undefined} Options.\r\n   * @protected\r\n   */\r\n  getReadOptions(source, options) {\r\n    if (options) {\r\n      let dataProjection = options.dataProjection\r\n        ? getProjection(options.dataProjection)\r\n        : this.readProjection(source);\r\n      if (\r\n        options.extent &&\r\n        dataProjection &&\r\n        dataProjection.getUnits() === 'tile-pixels'\r\n      ) {\r\n        dataProjection = getProjection(dataProjection);\r\n        dataProjection.setWorldExtent(options.extent);\r\n      }\r\n      options = {\r\n        dataProjection: dataProjection,\r\n        featureProjection: options.featureProjection,\r\n      };\r\n    }\r\n    return this.adaptOptions(options);\r\n  }\r\n\r\n  /**\r\n   * Sets the `dataProjection` on the options, if no `dataProjection`\r\n   * is set.\r\n   * @param {WriteOptions|ReadOptions|undefined} options\r\n   *     Options.\r\n   * @protected\r\n   * @return {WriteOptions|ReadOptions|undefined}\r\n   *     Updated options.\r\n   */\r\n  adaptOptions(options) {\r\n    return Object.assign(\r\n      {\r\n        dataProjection: this.dataProjection,\r\n        featureProjection: this.defaultFeatureProjection,\r\n      },\r\n      options\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {Type} The format type.\r\n   */\r\n  getType() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Read a single feature from a source.\r\n   *\r\n   * @abstract\r\n   * @param {Document|Element|Object|string} source Source.\r\n   * @param {ReadOptions} [options] Read options.\r\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\r\n   */\r\n  readFeature(source, options) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Read all features from a source.\r\n   *\r\n   * @abstract\r\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\r\n   * @param {ReadOptions} [options] Read options.\r\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\r\n   */\r\n  readFeatures(source, options) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Read a single geometry from a source.\r\n   *\r\n   * @abstract\r\n   * @param {Document|Element|Object|string} source Source.\r\n   * @param {ReadOptions} [options] Read options.\r\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n   */\r\n  readGeometry(source, options) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Read the projection from a source.\r\n   *\r\n   * @abstract\r\n   * @param {Document|Element|Object|string} source Source.\r\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\r\n   */\r\n  readProjection(source) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Encode a feature in this format.\r\n   *\r\n   * @abstract\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {WriteOptions} [options] Write options.\r\n   * @return {string|ArrayBuffer} Result.\r\n   */\r\n  writeFeature(feature, options) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Encode an array of features in this format.\r\n   *\r\n   * @abstract\r\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n   * @param {WriteOptions} [options] Write options.\r\n   * @return {string|ArrayBuffer} Result.\r\n   */\r\n  writeFeatures(features, options) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Write a single geometry in this format.\r\n   *\r\n   * @abstract\r\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n   * @param {WriteOptions} [options] Write options.\r\n   * @return {string|ArrayBuffer} Result.\r\n   */\r\n  writeGeometry(geometry, options) {\r\n    return abstract();\r\n  }\r\n}\r\n\r\nexport default FeatureFormat;\r\n\r\n/**\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {boolean} write Set to true for writing, false for reading.\r\n * @param {WriteOptions|ReadOptions} [options] Options.\r\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\r\n */\r\nexport function transformGeometryWithOptions(geometry, write, options) {\r\n  const featureProjection = options\r\n    ? getProjection(options.featureProjection)\r\n    : null;\r\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\r\n\r\n  let transformed;\r\n  if (\r\n    featureProjection &&\r\n    dataProjection &&\r\n    !equivalentProjection(featureProjection, dataProjection)\r\n  ) {\r\n    transformed = (write ? geometry.clone() : geometry).transform(\r\n      write ? featureProjection : dataProjection,\r\n      write ? dataProjection : featureProjection\r\n    );\r\n  } else {\r\n    transformed = geometry;\r\n  }\r\n  if (\r\n    write &&\r\n    options &&\r\n    /** @type {WriteOptions} */ (options).decimals !== undefined\r\n  ) {\r\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\r\n    // if decimals option on write, round each coordinate appropriately\r\n    /**\r\n     * @param {Array<number>} coordinates Coordinates.\r\n     * @return {Array<number>} Transformed coordinates.\r\n     */\r\n    const transform = function (coordinates) {\r\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\r\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\r\n      }\r\n      return coordinates;\r\n    };\r\n    if (transformed === geometry) {\r\n      transformed = geometry.clone();\r\n    }\r\n    transformed.applyTransform(transform);\r\n  }\r\n  return transformed;\r\n}\r\n\r\n/**\r\n * @param {import(\"../extent.js\").Extent} extent Extent.\r\n * @param {ReadOptions} [options] Read options.\r\n * @return {import(\"../extent.js\").Extent} Transformed extent.\r\n */\r\nexport function transformExtentWithOptions(extent, options) {\r\n  const featureProjection = options\r\n    ? getProjection(options.featureProjection)\r\n    : null;\r\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\r\n\r\n  if (\r\n    featureProjection &&\r\n    dataProjection &&\r\n    !equivalentProjection(featureProjection, dataProjection)\r\n  ) {\r\n    return transformExtent(extent, dataProjection, featureProjection);\r\n  } else {\r\n    return extent;\r\n  }\r\n}\r\n", "/**\r\n * @module ol/format/JSONFeature\r\n */\r\nimport FeatureFormat from './Feature.js';\r\nimport {abstract} from '../util.js';\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for JSON feature formats.\r\n *\r\n * @abstract\r\n */\r\nclass JSONFeature extends FeatureFormat {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"./Feature.js\").Type} Format.\r\n   */\r\n  getType() {\r\n    return 'json';\r\n  }\r\n\r\n  /**\r\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\r\n   * read a feature collection.\r\n   *\r\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\r\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\r\n   * @return {import(\"../Feature.js\").default} Feature.\r\n   * @api\r\n   */\r\n  readFeature(source, options) {\r\n    return this.readFeatureFromObject(\r\n      getObject(source),\r\n      this.getReadOptions(source, options)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Read all features.  Works with both a single feature and a feature\r\n   * collection.\r\n   *\r\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\r\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\r\n   * @return {Array<import(\"../Feature.js\").default>} Features.\r\n   * @api\r\n   */\r\n  readFeatures(source, options) {\r\n    return this.readFeaturesFromObject(\r\n      getObject(source),\r\n      this.getReadOptions(source, options)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Object} object Object.\r\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\r\n   * @protected\r\n   * @return {import(\"../Feature.js\").default} Feature.\r\n   */\r\n  readFeatureFromObject(object, options) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Object} object Object.\r\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\r\n   * @protected\r\n   * @return {Array<import(\"../Feature.js\").default>} Features.\r\n   */\r\n  readFeaturesFromObject(object, options) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Read a geometry.\r\n   *\r\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\r\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\r\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n   * @api\r\n   */\r\n  readGeometry(source, options) {\r\n    return this.readGeometryFromObject(\r\n      getObject(source),\r\n      this.getReadOptions(source, options)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Object} object Object.\r\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\r\n   * @protected\r\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n   */\r\n  readGeometryFromObject(object, options) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Read the projection.\r\n   *\r\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\r\n   * @return {import(\"../proj/Projection.js\").default} Projection.\r\n   * @api\r\n   */\r\n  readProjection(source) {\r\n    return this.readProjectionFromObject(getObject(source));\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Object} object Object.\r\n   * @protected\r\n   * @return {import(\"../proj/Projection.js\").default} Projection.\r\n   */\r\n  readProjectionFromObject(object) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Encode a feature as string.\r\n   *\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\r\n   * @return {string} Encoded feature.\r\n   * @api\r\n   */\r\n  writeFeature(feature, options) {\r\n    return JSON.stringify(this.writeFeatureObject(feature, options));\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\r\n   * @return {Object} Object.\r\n   */\r\n  writeFeatureObject(feature, options) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Encode an array of features as string.\r\n   *\r\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\r\n   * @return {string} Encoded features.\r\n   * @api\r\n   */\r\n  writeFeatures(features, options) {\r\n    return JSON.stringify(this.writeFeaturesObject(features, options));\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\r\n   * @return {Object} Object.\r\n   */\r\n  writeFeaturesObject(features, options) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Encode a geometry as string.\r\n   *\r\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\r\n   * @return {string} Encoded geometry.\r\n   * @api\r\n   */\r\n  writeGeometry(geometry, options) {\r\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\r\n   * @return {Object} Object.\r\n   */\r\n  writeGeometryObject(geometry, options) {\r\n    return abstract();\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Document|Element|Object|string} source Source.\r\n * @return {Object} Object.\r\n */\r\nfunction getObject(source) {\r\n  if (typeof source === 'string') {\r\n    const object = JSON.parse(source);\r\n    return object ? /** @type {Object} */ (object) : null;\r\n  } else if (source !== null) {\r\n    return source;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default JSONFeature;\r\n", "/**\r\n * @module ol/format/GeoJSON\r\n */\r\n\r\nimport Feature from '../Feature.js';\r\nimport GeometryCollection from '../geom/GeometryCollection.js';\r\nimport JSONFeature from './JSONFeature.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nimport {assert} from '../asserts.js';\r\nimport {get as getProjection} from '../proj.js';\r\nimport {isEmpty} from '../obj.js';\r\nimport {transformGeometryWithOptions} from './Feature.js';\r\n\r\n/**\r\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\r\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\r\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\r\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\r\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\r\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\r\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\r\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\r\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\r\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\r\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\r\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\r\n * written by the format.  Options passed to read or write methods will take precedence.\r\n * @property {string} [geometryName] Geometry name to use when creating features.\r\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\r\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\r\n * will look for that field to set the geometry name. If both this field is set to `true`\r\n * and a `geometryName` is provided, the `geometryName` will take precedence.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the GeoJSON format.\r\n *\r\n * @api\r\n */\r\nclass GeoJSON extends JSONFeature {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    super();\r\n\r\n    /**\r\n     * @type {import(\"../proj/Projection.js\").default}\r\n     */\r\n    this.dataProjection = getProjection(\r\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\r\n    );\r\n\r\n    if (options.featureProjection) {\r\n      /**\r\n       * @type {import(\"../proj/Projection.js\").default}\r\n       */\r\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\r\n    }\r\n\r\n    /**\r\n     * Name of the geometry attribute for features.\r\n     * @type {string|undefined}\r\n     * @private\r\n     */\r\n    this.geometryName_ = options.geometryName;\r\n\r\n    /**\r\n     * Look for the geometry name in the feature GeoJSON\r\n     * @type {boolean|undefined}\r\n     * @private\r\n     */\r\n    this.extractGeometryName_ = options.extractGeometryName;\r\n\r\n    this.supportedMediaTypes = [\r\n      'application/geo+json',\r\n      'application/vnd.geo+json',\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * @param {Object} object Object.\r\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\r\n   * @protected\r\n   * @return {import(\"../Feature.js\").default} Feature.\r\n   */\r\n  readFeatureFromObject(object, options) {\r\n    /**\r\n     * @type {GeoJSONFeature}\r\n     */\r\n    let geoJSONFeature = null;\r\n    if (object['type'] === 'Feature') {\r\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\r\n    } else {\r\n      geoJSONFeature = {\r\n        'type': 'Feature',\r\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\r\n        'properties': null,\r\n      };\r\n    }\r\n\r\n    const geometry = readGeometry(geoJSONFeature['geometry'], options);\r\n    const feature = new Feature();\r\n    if (this.geometryName_) {\r\n      feature.setGeometryName(this.geometryName_);\r\n    } else if (\r\n      this.extractGeometryName_ &&\r\n      'geometry_name' in geoJSONFeature !== undefined\r\n    ) {\r\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\r\n    }\r\n    feature.setGeometry(geometry);\r\n\r\n    if ('id' in geoJSONFeature) {\r\n      feature.setId(geoJSONFeature['id']);\r\n    }\r\n\r\n    if (geoJSONFeature['properties']) {\r\n      feature.setProperties(geoJSONFeature['properties'], true);\r\n    }\r\n    return feature;\r\n  }\r\n\r\n  /**\r\n   * @param {Object} object Object.\r\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\r\n   * @protected\r\n   * @return {Array<Feature>} Features.\r\n   */\r\n  readFeaturesFromObject(object, options) {\r\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\r\n    /** @type {Array<import(\"../Feature.js\").default>} */\r\n    let features = null;\r\n    if (geoJSONObject['type'] === 'FeatureCollection') {\r\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\r\n        object\r\n      );\r\n      features = [];\r\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\r\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\r\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], options));\r\n      }\r\n    } else {\r\n      features = [this.readFeatureFromObject(object, options)];\r\n    }\r\n    return features;\r\n  }\r\n\r\n  /**\r\n   * @param {GeoJSONGeometry} object Object.\r\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\r\n   * @protected\r\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n   */\r\n  readGeometryFromObject(object, options) {\r\n    return readGeometry(object, options);\r\n  }\r\n\r\n  /**\r\n   * @param {Object} object Object.\r\n   * @protected\r\n   * @return {import(\"../proj/Projection.js\").default} Projection.\r\n   */\r\n  readProjectionFromObject(object) {\r\n    const crs = object['crs'];\r\n    let projection;\r\n    if (crs) {\r\n      if (crs['type'] == 'name') {\r\n        projection = getProjection(crs['properties']['name']);\r\n      } else if (crs['type'] === 'EPSG') {\r\n        projection = getProjection('EPSG:' + crs['properties']['code']);\r\n      } else {\r\n        assert(false, 36); // Unknown SRS type\r\n      }\r\n    } else {\r\n      projection = this.dataProjection;\r\n    }\r\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\r\n  }\r\n\r\n  /**\r\n   * Encode a feature as a GeoJSON Feature object.\r\n   *\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\r\n   * @return {GeoJSONFeature} Object.\r\n   * @api\r\n   */\r\n  writeFeatureObject(feature, options) {\r\n    options = this.adaptOptions(options);\r\n\r\n    /** @type {GeoJSONFeature} */\r\n    const object = {\r\n      'type': 'Feature',\r\n      geometry: null,\r\n      properties: null,\r\n    };\r\n\r\n    const id = feature.getId();\r\n    if (id !== undefined) {\r\n      object.id = id;\r\n    }\r\n\r\n    if (!feature.hasProperties()) {\r\n      return object;\r\n    }\r\n\r\n    const properties = feature.getProperties();\r\n    const geometry = feature.getGeometry();\r\n    if (geometry) {\r\n      object.geometry = writeGeometry(geometry, options);\r\n\r\n      delete properties[feature.getGeometryName()];\r\n    }\r\n\r\n    if (!isEmpty(properties)) {\r\n      object.properties = properties;\r\n    }\r\n\r\n    return object;\r\n  }\r\n\r\n  /**\r\n   * Encode an array of features as a GeoJSON object.\r\n   *\r\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\r\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\r\n   * @api\r\n   */\r\n  writeFeaturesObject(features, options) {\r\n    options = this.adaptOptions(options);\r\n    const objects = [];\r\n    for (let i = 0, ii = features.length; i < ii; ++i) {\r\n      objects.push(this.writeFeatureObject(features[i], options));\r\n    }\r\n    return {\r\n      type: 'FeatureCollection',\r\n      features: objects,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Encode a geometry as a GeoJSON object.\r\n   *\r\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\r\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\r\n   * @api\r\n   */\r\n  writeGeometryObject(geometry, options) {\r\n    return writeGeometry(geometry, this.adaptOptions(options));\r\n  }\r\n}\r\n\r\n/**\r\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\r\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\r\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n */\r\nfunction readGeometry(object, options) {\r\n  if (!object) {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * @type {import(\"../geom/Geometry.js\").default}\r\n   */\r\n  let geometry;\r\n  switch (object['type']) {\r\n    case 'Point': {\r\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\r\n      break;\r\n    }\r\n    case 'LineString': {\r\n      geometry = readLineStringGeometry(\r\n        /** @type {GeoJSONLineString} */ (object)\r\n      );\r\n      break;\r\n    }\r\n    case 'Polygon': {\r\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\r\n      break;\r\n    }\r\n    case 'MultiPoint': {\r\n      geometry = readMultiPointGeometry(\r\n        /** @type {GeoJSONMultiPoint} */ (object)\r\n      );\r\n      break;\r\n    }\r\n    case 'MultiLineString': {\r\n      geometry = readMultiLineStringGeometry(\r\n        /** @type {GeoJSONMultiLineString} */ (object)\r\n      );\r\n      break;\r\n    }\r\n    case 'MultiPolygon': {\r\n      geometry = readMultiPolygonGeometry(\r\n        /** @type {GeoJSONMultiPolygon} */ (object)\r\n      );\r\n      break;\r\n    }\r\n    case 'GeometryCollection': {\r\n      geometry = readGeometryCollectionGeometry(\r\n        /** @type {GeoJSONGeometryCollection} */ (object)\r\n      );\r\n      break;\r\n    }\r\n    default: {\r\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\r\n    }\r\n  }\r\n  return transformGeometryWithOptions(geometry, false, options);\r\n}\r\n\r\n/**\r\n * @param {GeoJSONGeometryCollection} object Object.\r\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\r\n * @return {GeometryCollection} Geometry collection.\r\n */\r\nfunction readGeometryCollectionGeometry(object, options) {\r\n  const geometries = object['geometries'].map(\r\n    /**\r\n     * @param {GeoJSONGeometry} geometry Geometry.\r\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n     */\r\n    function (geometry) {\r\n      return readGeometry(geometry, options);\r\n    }\r\n  );\r\n  return new GeometryCollection(geometries);\r\n}\r\n\r\n/**\r\n * @param {GeoJSONPoint} object Object.\r\n * @return {Point} Point.\r\n */\r\nfunction readPointGeometry(object) {\r\n  return new Point(object['coordinates']);\r\n}\r\n\r\n/**\r\n * @param {GeoJSONLineString} object Object.\r\n * @return {LineString} LineString.\r\n */\r\nfunction readLineStringGeometry(object) {\r\n  return new LineString(object['coordinates']);\r\n}\r\n\r\n/**\r\n * @param {GeoJSONMultiLineString} object Object.\r\n * @return {MultiLineString} MultiLineString.\r\n */\r\nfunction readMultiLineStringGeometry(object) {\r\n  return new MultiLineString(object['coordinates']);\r\n}\r\n\r\n/**\r\n * @param {GeoJSONMultiPoint} object Object.\r\n * @return {MultiPoint} MultiPoint.\r\n */\r\nfunction readMultiPointGeometry(object) {\r\n  return new MultiPoint(object['coordinates']);\r\n}\r\n\r\n/**\r\n * @param {GeoJSONMultiPolygon} object Object.\r\n * @return {MultiPolygon} MultiPolygon.\r\n */\r\nfunction readMultiPolygonGeometry(object) {\r\n  return new MultiPolygon(object['coordinates']);\r\n}\r\n\r\n/**\r\n * @param {GeoJSONPolygon} object Object.\r\n * @return {Polygon} Polygon.\r\n */\r\nfunction readPolygonGeometry(object) {\r\n  return new Polygon(object['coordinates']);\r\n}\r\n\r\n/**\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writeGeometry(geometry, options) {\r\n  geometry = transformGeometryWithOptions(geometry, true, options);\r\n  const type = geometry.getType();\r\n\r\n  /** @type {GeoJSONGeometry} */\r\n  let geoJSON;\r\n  switch (type) {\r\n    case 'Point': {\r\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), options);\r\n      break;\r\n    }\r\n    case 'LineString': {\r\n      geoJSON = writeLineStringGeometry(\r\n        /** @type {LineString} */ (geometry),\r\n        options\r\n      );\r\n      break;\r\n    }\r\n    case 'Polygon': {\r\n      geoJSON = writePolygonGeometry(\r\n        /** @type {Polygon} */ (geometry),\r\n        options\r\n      );\r\n      break;\r\n    }\r\n    case 'MultiPoint': {\r\n      geoJSON = writeMultiPointGeometry(\r\n        /** @type {MultiPoint} */ (geometry),\r\n        options\r\n      );\r\n      break;\r\n    }\r\n    case 'MultiLineString': {\r\n      geoJSON = writeMultiLineStringGeometry(\r\n        /** @type {MultiLineString} */ (geometry),\r\n        options\r\n      );\r\n      break;\r\n    }\r\n    case 'MultiPolygon': {\r\n      geoJSON = writeMultiPolygonGeometry(\r\n        /** @type {MultiPolygon} */ (geometry),\r\n        options\r\n      );\r\n      break;\r\n    }\r\n    case 'GeometryCollection': {\r\n      geoJSON = writeGeometryCollectionGeometry(\r\n        /** @type {GeometryCollection} */ (geometry),\r\n        options\r\n      );\r\n      break;\r\n    }\r\n    case 'Circle': {\r\n      geoJSON = {\r\n        type: 'GeometryCollection',\r\n        geometries: [],\r\n      };\r\n      break;\r\n    }\r\n    default: {\r\n      throw new Error('Unsupported geometry type: ' + type);\r\n    }\r\n  }\r\n  return geoJSON;\r\n}\r\n\r\n/**\r\n * @param {GeometryCollection} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\r\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\r\n */\r\nfunction writeGeometryCollectionGeometry(geometry, options) {\r\n  options = Object.assign({}, options);\r\n  delete options.featureProjection;\r\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\r\n    return writeGeometry(geometry, options);\r\n  });\r\n  return {\r\n    type: 'GeometryCollection',\r\n    geometries: geometries,\r\n  };\r\n}\r\n\r\n/**\r\n * @param {LineString} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writeLineStringGeometry(geometry, options) {\r\n  return {\r\n    type: 'LineString',\r\n    coordinates: geometry.getCoordinates(),\r\n  };\r\n}\r\n\r\n/**\r\n * @param {MultiLineString} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writeMultiLineStringGeometry(geometry, options) {\r\n  return {\r\n    type: 'MultiLineString',\r\n    coordinates: geometry.getCoordinates(),\r\n  };\r\n}\r\n\r\n/**\r\n * @param {MultiPoint} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writeMultiPointGeometry(geometry, options) {\r\n  return {\r\n    type: 'MultiPoint',\r\n    coordinates: geometry.getCoordinates(),\r\n  };\r\n}\r\n\r\n/**\r\n * @param {MultiPolygon} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writeMultiPolygonGeometry(geometry, options) {\r\n  let right;\r\n  if (options) {\r\n    right = options.rightHanded;\r\n  }\r\n  return {\r\n    type: 'MultiPolygon',\r\n    coordinates: geometry.getCoordinates(right),\r\n  };\r\n}\r\n\r\n/**\r\n * @param {Point} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writePointGeometry(geometry, options) {\r\n  return {\r\n    type: 'Point',\r\n    coordinates: geometry.getCoordinates(),\r\n  };\r\n}\r\n\r\n/**\r\n * @param {Polygon} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writePolygonGeometry(geometry, options) {\r\n  let right;\r\n  if (options) {\r\n    right = options.rightHanded;\r\n  }\r\n  return {\r\n    type: 'Polygon',\r\n    coordinates: geometry.getCoordinates(right),\r\n  };\r\n}\r\n\r\nexport default GeoJSON;\r\n", "/**\r\n * @module ol/format/MVT\r\n */\r\n//FIXME Implement projection handling\r\n\r\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport PBF from 'pbf';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nimport Projection from '../proj/Projection.js';\r\nimport RenderFeature from '../render/Feature.js';\r\nimport {assert} from '../asserts.js';\r\nimport {get} from '../proj.js';\r\nimport {inflateEnds} from '../geom/flat/orient.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\r\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\r\n * support at the cost of decreased rendering performance. The default is\r\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\r\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\r\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\r\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\r\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\r\n * layers.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Feature format for reading data in the Mapbox MVT format.\r\n *\r\n * @param {Options} [options] Options.\r\n * @api\r\n */\r\nclass MVT extends FeatureFormat {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    options = options ? options : {};\r\n\r\n    /**\r\n     * @type {Projection}\r\n     */\r\n    this.dataProjection = new Projection({\r\n      code: '',\r\n      units: 'tile-pixels',\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../Feature.js\").FeatureClass}\r\n     */\r\n    this.featureClass_ = options.featureClass\r\n      ? options.featureClass\r\n      : RenderFeature;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|undefined}\r\n     */\r\n    this.geometryName_ = options.geometryName;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<string>|null}\r\n     */\r\n    this.layers_ = options.layers ? options.layers : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.idProperty_ = options.idProperty;\r\n\r\n    this.supportedMediaTypes = [\r\n      'application/vnd.mapbox-vector-tile',\r\n      'application/x-protobuf',\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\r\n   * property.\r\n   * @param {PBF} pbf PBF.\r\n   * @param {Object} feature Raw feature.\r\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\r\n   * @param {Array<number>} ends Array to store ends in.\r\n   * @private\r\n   */\r\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\r\n    pbf.pos = feature.geometry;\r\n\r\n    const end = pbf.readVarint() + pbf.pos;\r\n    let cmd = 1;\r\n    let length = 0;\r\n    let x = 0;\r\n    let y = 0;\r\n    let coordsLen = 0;\r\n    let currentEnd = 0;\r\n\r\n    while (pbf.pos < end) {\r\n      if (!length) {\r\n        const cmdLen = pbf.readVarint();\r\n        cmd = cmdLen & 0x7;\r\n        length = cmdLen >> 3;\r\n      }\r\n\r\n      length--;\r\n\r\n      if (cmd === 1 || cmd === 2) {\r\n        x += pbf.readSVarint();\r\n        y += pbf.readSVarint();\r\n\r\n        if (cmd === 1) {\r\n          // moveTo\r\n          if (coordsLen > currentEnd) {\r\n            ends.push(coordsLen);\r\n            currentEnd = coordsLen;\r\n          }\r\n        }\r\n\r\n        flatCoordinates.push(x, y);\r\n        coordsLen += 2;\r\n      } else if (cmd === 7) {\r\n        if (coordsLen > currentEnd) {\r\n          // close polygon\r\n          flatCoordinates.push(\r\n            flatCoordinates[currentEnd],\r\n            flatCoordinates[currentEnd + 1]\r\n          );\r\n          coordsLen += 2;\r\n        }\r\n      } else {\r\n        assert(false, 59); // Invalid command found in the PBF\r\n      }\r\n    }\r\n\r\n    if (coordsLen > currentEnd) {\r\n      ends.push(coordsLen);\r\n      currentEnd = coordsLen;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PBF} pbf PBF\r\n   * @param {Object} rawFeature Raw Mapbox feature.\r\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\r\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\r\n   */\r\n  createFeature_(pbf, rawFeature, options) {\r\n    const type = rawFeature.type;\r\n    if (type === 0) {\r\n      return null;\r\n    }\r\n\r\n    let feature;\r\n    const values = rawFeature.properties;\r\n\r\n    let id;\r\n    if (!this.idProperty_) {\r\n      id = rawFeature.id;\r\n    } else {\r\n      id = values[this.idProperty_];\r\n      delete values[this.idProperty_];\r\n    }\r\n\r\n    values[this.layerName_] = rawFeature.layer.name;\r\n\r\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\r\n    const ends = /** @type {Array<number>} */ ([]);\r\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\r\n\r\n    const geometryType = getGeometryType(type, ends.length);\r\n\r\n    if (this.featureClass_ === RenderFeature) {\r\n      feature = new this.featureClass_(\r\n        geometryType,\r\n        flatCoordinates,\r\n        ends,\r\n        values,\r\n        id\r\n      );\r\n      feature.transform(options.dataProjection);\r\n    } else {\r\n      let geom;\r\n      if (geometryType == 'Polygon') {\r\n        const endss = inflateEnds(flatCoordinates, ends);\r\n        geom =\r\n          endss.length > 1\r\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\r\n            : new Polygon(flatCoordinates, 'XY', ends);\r\n      } else {\r\n        geom =\r\n          geometryType === 'Point'\r\n            ? new Point(flatCoordinates, 'XY')\r\n            : geometryType === 'LineString'\r\n            ? new LineString(flatCoordinates, 'XY')\r\n            : geometryType === 'MultiPoint'\r\n            ? new MultiPoint(flatCoordinates, 'XY')\r\n            : geometryType === 'MultiLineString'\r\n            ? new MultiLineString(flatCoordinates, 'XY', ends)\r\n            : null;\r\n      }\r\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\r\n        this.featureClass_\r\n      );\r\n      feature = new ctor();\r\n      if (this.geometryName_) {\r\n        feature.setGeometryName(this.geometryName_);\r\n      }\r\n      const geometry = transformGeometryWithOptions(geom, false, options);\r\n      feature.setGeometry(geometry);\r\n      if (id !== undefined) {\r\n        feature.setId(id);\r\n      }\r\n      feature.setProperties(values, true);\r\n    }\r\n\r\n    return feature;\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"./Feature.js\").Type} Format.\r\n   */\r\n  getType() {\r\n    return 'arraybuffer';\r\n  }\r\n\r\n  /**\r\n   * Read all features.\r\n   *\r\n   * @param {ArrayBuffer} source Source.\r\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\r\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\r\n   * @api\r\n   */\r\n  readFeatures(source, options) {\r\n    const layers = this.layers_;\r\n    options = this.adaptOptions(options);\r\n    const dataProjection = get(options.dataProjection);\r\n    dataProjection.setWorldExtent(options.extent);\r\n    options.dataProjection = dataProjection;\r\n\r\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\r\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\r\n    const features = [];\r\n    for (const name in pbfLayers) {\r\n      if (layers && !layers.includes(name)) {\r\n        continue;\r\n      }\r\n      const pbfLayer = pbfLayers[name];\r\n\r\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\r\n      dataProjection.setExtent(extent);\r\n\r\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\r\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\r\n        const feature = this.createFeature_(pbf, rawFeature, options);\r\n        if (feature !== null) {\r\n          features.push(feature);\r\n        }\r\n      }\r\n    }\r\n\r\n    return features;\r\n  }\r\n\r\n  /**\r\n   * Read the projection from the source.\r\n   *\r\n   * @param {Document|Element|Object|string} source Source.\r\n   * @return {import(\"../proj/Projection.js\").default} Projection.\r\n   * @api\r\n   */\r\n  readProjection(source) {\r\n    return this.dataProjection;\r\n  }\r\n\r\n  /**\r\n   * Sets the layers that features will be read from.\r\n   * @param {Array<string>} layers Layers.\r\n   * @api\r\n   */\r\n  setLayers(layers) {\r\n    this.layers_ = layers;\r\n  }\r\n}\r\n\r\n/**\r\n * Reader callback for parsing layers.\r\n * @param {number} tag The tag.\r\n * @param {Object} layers The layers object.\r\n * @param {PBF} pbf The PBF.\r\n */\r\nfunction layersPBFReader(tag, layers, pbf) {\r\n  if (tag === 3) {\r\n    const layer = {\r\n      keys: [],\r\n      values: [],\r\n      features: [],\r\n    };\r\n    const end = pbf.readVarint() + pbf.pos;\r\n    pbf.readFields(layerPBFReader, layer, end);\r\n    layer.length = layer.features.length;\r\n    if (layer.length) {\r\n      layers[layer.name] = layer;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Reader callback for parsing layer.\r\n * @param {number} tag The tag.\r\n * @param {Object} layer The layer object.\r\n * @param {PBF} pbf The PBF.\r\n */\r\nfunction layerPBFReader(tag, layer, pbf) {\r\n  if (tag === 15) {\r\n    layer.version = pbf.readVarint();\r\n  } else if (tag === 1) {\r\n    layer.name = pbf.readString();\r\n  } else if (tag === 5) {\r\n    layer.extent = pbf.readVarint();\r\n  } else if (tag === 2) {\r\n    layer.features.push(pbf.pos);\r\n  } else if (tag === 3) {\r\n    layer.keys.push(pbf.readString());\r\n  } else if (tag === 4) {\r\n    let value = null;\r\n    const end = pbf.readVarint() + pbf.pos;\r\n    while (pbf.pos < end) {\r\n      tag = pbf.readVarint() >> 3;\r\n      value =\r\n        tag === 1\r\n          ? pbf.readString()\r\n          : tag === 2\r\n          ? pbf.readFloat()\r\n          : tag === 3\r\n          ? pbf.readDouble()\r\n          : tag === 4\r\n          ? pbf.readVarint64()\r\n          : tag === 5\r\n          ? pbf.readVarint()\r\n          : tag === 6\r\n          ? pbf.readSVarint()\r\n          : tag === 7\r\n          ? pbf.readBoolean()\r\n          : null;\r\n    }\r\n    layer.values.push(value);\r\n  }\r\n}\r\n\r\n/**\r\n * Reader callback for parsing feature.\r\n * @param {number} tag The tag.\r\n * @param {Object} feature The feature object.\r\n * @param {PBF} pbf The PBF.\r\n */\r\nfunction featurePBFReader(tag, feature, pbf) {\r\n  if (tag == 1) {\r\n    feature.id = pbf.readVarint();\r\n  } else if (tag == 2) {\r\n    const end = pbf.readVarint() + pbf.pos;\r\n    while (pbf.pos < end) {\r\n      const key = feature.layer.keys[pbf.readVarint()];\r\n      const value = feature.layer.values[pbf.readVarint()];\r\n      feature.properties[key] = value;\r\n    }\r\n  } else if (tag == 3) {\r\n    feature.type = pbf.readVarint();\r\n  } else if (tag == 4) {\r\n    feature.geometry = pbf.pos;\r\n  }\r\n}\r\n\r\n/**\r\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\r\n * @param {PBF} pbf PBF.\r\n * @param {Object} layer Raw layer.\r\n * @param {number} i Index of the feature in the raw layer's `features` array.\r\n * @return {Object} Raw feature.\r\n */\r\nfunction readRawFeature(pbf, layer, i) {\r\n  pbf.pos = layer.features[i];\r\n  const end = pbf.readVarint() + pbf.pos;\r\n\r\n  const feature = {\r\n    layer: layer,\r\n    type: 0,\r\n    properties: {},\r\n  };\r\n  pbf.readFields(featurePBFReader, feature, end);\r\n  return feature;\r\n}\r\n\r\n/**\r\n * @param {number} type The raw feature's geometry type\r\n * @param {number} numEnds Number of ends of the flat coordinates of the\r\n * geometry.\r\n * @return {import(\"../geom/Geometry.js\").Type} The geometry type.\r\n */\r\nfunction getGeometryType(type, numEnds) {\r\n  /** @type {import(\"../geom/Geometry.js\").Type} */\r\n  let geometryType;\r\n  if (type === 1) {\r\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\r\n  } else if (type === 2) {\r\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\r\n  } else if (type === 3) {\r\n    geometryType = 'Polygon';\r\n    // MultiPolygon not relevant for rendering - winding order determines\r\n    // outer rings of polygons.\r\n  }\r\n  return geometryType;\r\n}\r\n\r\nexport default MVT;\r\n", "/**\r\n * @module ol/render/Feature\r\n */\r\nimport Feature from '../Feature.js';\r\nimport {\r\n  LineString,\r\n  MultiLineString,\r\n  MultiPoint,\r\n  MultiPolygon,\r\n  Point,\r\n  Polygon,\r\n} from '../geom.js';\r\nimport {\r\n  compose as composeTransform,\r\n  create as createTransform,\r\n} from '../transform.js';\r\nimport {\r\n  createOrUpdateFromCoordinate,\r\n  createOrUpdateFromFlatCoordinates,\r\n  getCenter,\r\n  getHeight,\r\n} from '../extent.js';\r\nimport {extend} from '../array.js';\r\nimport {\r\n  getInteriorPointOfArray,\r\n  getInteriorPointsOfMultiArray,\r\n} from '../geom/flat/interiorpoint.js';\r\nimport {get as getProjection} from '../proj.js';\r\nimport {inflateEnds} from '../geom/flat/orient.js';\r\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\r\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\r\nimport {transform2D} from '../geom/flat/transform.js';\r\n\r\n/**\r\n * @type {import(\"../transform.js\").Transform}\r\n */\r\nconst tmpTransform = createTransform();\r\n\r\n/**\r\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\r\n * structure, optimized for vector tile rendering and styling. Geometry access\r\n * through the API is limited to getting the type and extent of the geometry.\r\n */\r\nclass RenderFeature {\r\n  /**\r\n   * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\r\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\r\n   *     to be right-handed for polygons.\r\n   * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\r\n   * @param {Object<string, *>} properties Properties.\r\n   * @param {number|string|undefined} id Feature id.\r\n   */\r\n  constructor(type, flatCoordinates, ends, properties, id) {\r\n    /**\r\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\r\n     */\r\n    this.styleFunction;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../extent.js\").Extent|undefined}\r\n     */\r\n    this.extent_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|string|undefined}\r\n     */\r\n    this.id_ = id;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../geom/Geometry.js\").Type}\r\n     */\r\n    this.type_ = type;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.flatCoordinates_ = flatCoordinates;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.flatInteriorPoints_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.flatMidpoints_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>|Array<Array<number>>}\r\n     */\r\n    this.ends_ = ends;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, *>}\r\n     */\r\n    this.properties_ = properties;\r\n  }\r\n\r\n  /**\r\n   * Get a feature property by its key.\r\n   * @param {string} key Key\r\n   * @return {*} Value for the requested key.\r\n   * @api\r\n   */\r\n  get(key) {\r\n    return this.properties_[key];\r\n  }\r\n\r\n  /**\r\n   * Get the extent of this feature's geometry.\r\n   * @return {import(\"../extent.js\").Extent} Extent.\r\n   * @api\r\n   */\r\n  getExtent() {\r\n    if (!this.extent_) {\r\n      this.extent_ =\r\n        this.type_ === 'Point'\r\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\r\n          : createOrUpdateFromFlatCoordinates(\r\n              this.flatCoordinates_,\r\n              0,\r\n              this.flatCoordinates_.length,\r\n              2\r\n            );\r\n    }\r\n    return this.extent_;\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>} Flat interior points.\r\n   */\r\n  getFlatInteriorPoint() {\r\n    if (!this.flatInteriorPoints_) {\r\n      const flatCenter = getCenter(this.getExtent());\r\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\r\n        this.flatCoordinates_,\r\n        0,\r\n        /** @type {Array<number>} */ (this.ends_),\r\n        2,\r\n        flatCenter,\r\n        0\r\n      );\r\n    }\r\n    return this.flatInteriorPoints_;\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>} Flat interior points.\r\n   */\r\n  getFlatInteriorPoints() {\r\n    if (!this.flatInteriorPoints_) {\r\n      const flatCenters = linearRingssCenter(\r\n        this.flatCoordinates_,\r\n        0,\r\n        /** @type {Array<Array<number>>} */ (this.ends_),\r\n        2\r\n      );\r\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\r\n        this.flatCoordinates_,\r\n        0,\r\n        /** @type {Array<Array<number>>} */ (this.ends_),\r\n        2,\r\n        flatCenters\r\n      );\r\n    }\r\n    return this.flatInteriorPoints_;\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>} Flat midpoint.\r\n   */\r\n  getFlatMidpoint() {\r\n    if (!this.flatMidpoints_) {\r\n      this.flatMidpoints_ = interpolatePoint(\r\n        this.flatCoordinates_,\r\n        0,\r\n        this.flatCoordinates_.length,\r\n        2,\r\n        0.5\r\n      );\r\n    }\r\n    return this.flatMidpoints_;\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>} Flat midpoints.\r\n   */\r\n  getFlatMidpoints() {\r\n    if (!this.flatMidpoints_) {\r\n      this.flatMidpoints_ = [];\r\n      const flatCoordinates = this.flatCoordinates_;\r\n      let offset = 0;\r\n      const ends = /** @type {Array<number>} */ (this.ends_);\r\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n        const end = ends[i];\r\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\r\n        extend(this.flatMidpoints_, midpoint);\r\n        offset = end;\r\n      }\r\n    }\r\n    return this.flatMidpoints_;\r\n  }\r\n\r\n  /**\r\n   * Get the feature identifier.  This is a stable identifier for the feature and\r\n   * is set when reading data from a remote source.\r\n   * @return {number|string|undefined} Id.\r\n   * @api\r\n   */\r\n  getId() {\r\n    return this.id_;\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>} Flat coordinates.\r\n   */\r\n  getOrientedFlatCoordinates() {\r\n    return this.flatCoordinates_;\r\n  }\r\n\r\n  /**\r\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\r\n   * determining the geometry type in style function (see {@link #getType}).\r\n   * @return {RenderFeature} Feature.\r\n   * @api\r\n   */\r\n  getGeometry() {\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @return {RenderFeature} Simplified geometry.\r\n   */\r\n  getSimplifiedGeometry(squaredTolerance) {\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Get a transformed and simplified version of the geometry.\r\n   * @abstract\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\r\n   * @return {RenderFeature} Simplified geometry.\r\n   */\r\n  simplifyTransformed(squaredTolerance, transform) {\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Get the feature properties.\r\n   * @return {Object<string, *>} Feature properties.\r\n   * @api\r\n   */\r\n  getProperties() {\r\n    return this.properties_;\r\n  }\r\n\r\n  /**\r\n   * @return {number} Stride.\r\n   */\r\n  getStride() {\r\n    return 2;\r\n  }\r\n\r\n  /**\r\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\r\n   */\r\n  getStyleFunction() {\r\n    return this.styleFunction;\r\n  }\r\n\r\n  /**\r\n   * Get the type of this feature's geometry.\r\n   * @return {import(\"../geom/Geometry.js\").Type} Geometry type.\r\n   * @api\r\n   */\r\n  getType() {\r\n    return this.type_;\r\n  }\r\n\r\n  /**\r\n   * Transform geometry coordinates from tile pixel space to projected.\r\n   *\r\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\r\n   */\r\n  transform(projection) {\r\n    projection = getProjection(projection);\r\n    const pixelExtent = projection.getExtent();\r\n    const projectedExtent = projection.getWorldExtent();\r\n    if (pixelExtent && projectedExtent) {\r\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\r\n      composeTransform(\r\n        tmpTransform,\r\n        projectedExtent[0],\r\n        projectedExtent[3],\r\n        scale,\r\n        -scale,\r\n        0,\r\n        0,\r\n        0\r\n      );\r\n      transform2D(\r\n        this.flatCoordinates_,\r\n        0,\r\n        this.flatCoordinates_.length,\r\n        2,\r\n        tmpTransform,\r\n        this.flatCoordinates_\r\n      );\r\n    }\r\n  }\r\n  /**\r\n   * @return {Array<number>|Array<Array<number>>} Ends or endss.\r\n   */\r\n  getEnds() {\r\n    return this.ends_;\r\n  }\r\n}\r\n\r\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\r\n\r\n/**\r\n * @return {Array<number>} Flat coordinates.\r\n */\r\nRenderFeature.prototype.getFlatCoordinates =\r\n  RenderFeature.prototype.getOrientedFlatCoordinates;\r\n\r\n/**\r\n * Create a geometry from an `ol/render/Feature`\r\n * @param {RenderFeature} renderFeature\r\n * Render Feature\r\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\r\n * New geometry instance.\r\n * @api\r\n */\r\nexport function toGeometry(renderFeature) {\r\n  const geometryType = renderFeature.getType();\r\n  switch (geometryType) {\r\n    case 'Point':\r\n      return new Point(renderFeature.getFlatCoordinates());\r\n    case 'MultiPoint':\r\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\r\n    case 'LineString':\r\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\r\n    case 'MultiLineString':\r\n      return new MultiLineString(\r\n        renderFeature.getFlatCoordinates(),\r\n        'XY',\r\n        /** @type {Array<number>} */ (renderFeature.getEnds())\r\n      );\r\n    case 'Polygon':\r\n      const flatCoordinates = renderFeature.getFlatCoordinates();\r\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\r\n      const endss = inflateEnds(flatCoordinates, ends);\r\n      return endss.length > 1\r\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\r\n        : new Polygon(flatCoordinates, 'XY', ends);\r\n    default:\r\n      throw new Error('Invalid geometry type:' + geometryType);\r\n  }\r\n}\r\n\r\n/**\r\n * Create an `ol/Feature` from an `ol/render/Feature`\r\n * @param {RenderFeature} renderFeature RenderFeature\r\n * @param {string} [geometryName='geometry'] Geometry name to use\r\n * when creating the Feature.\r\n * @return {Feature} Newly constructed `ol/Feature` with properties,\r\n * geometry, and id copied over.\r\n * @api\r\n */\r\nexport function toFeature(renderFeature, geometryName) {\r\n  const id = renderFeature.getId();\r\n  const geometry = toGeometry(renderFeature);\r\n  const properties = renderFeature.getProperties();\r\n  const feature = new Feature();\r\n  if (geometryName !== undefined) {\r\n    feature.setGeometryName(geometryName);\r\n  }\r\n  feature.setGeometry(geometry);\r\n  if (id !== undefined) {\r\n    feature.setId(id);\r\n  }\r\n  feature.setProperties(properties, true);\r\n  return feature;\r\n}\r\n\r\nexport default RenderFeature;\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA,YAAQ,OAAO,SAAU,QAAQ,QAAQ,MAAM,MAAM,QAAQ;AAC3D,UAAI,GAAG;AACP,UAAI,OAAQ,SAAS,IAAK,OAAO;AACjC,UAAI,QAAQ,KAAK,QAAQ;AACzB,UAAI,QAAQ,QAAQ;AACpB,UAAI,QAAQ;AACZ,UAAI,IAAI,OAAQ,SAAS,IAAK;AAC9B,UAAI,IAAI,OAAO,KAAK;AACpB,UAAI,IAAI,OAAO,SAAS;AAExB,WAAK;AAEL,UAAI,KAAM,KAAM,CAAC,SAAU;AAC3B,YAAO,CAAC;AACR,eAAS;AACT,aAAO,QAAQ,GAAG,IAAK,IAAI,MAAO,OAAO,SAAS,IAAI,KAAK,GAAG,SAAS,GAAG;AAAA,MAAC;AAE3E,UAAI,KAAM,KAAM,CAAC,SAAU;AAC3B,YAAO,CAAC;AACR,eAAS;AACT,aAAO,QAAQ,GAAG,IAAK,IAAI,MAAO,OAAO,SAAS,IAAI,KAAK,GAAG,SAAS,GAAG;AAAA,MAAC;AAE3E,UAAI,MAAM,GAAG;AACX,YAAI,IAAI;AAAA,MACV,WAAW,MAAM,MAAM;AACrB,eAAO,IAAI,OAAQ,IAAI,KAAK,KAAK;AAAA,MACnC,OAAO;AACL,YAAI,IAAI,KAAK,IAAI,GAAG,IAAI;AACxB,YAAI,IAAI;AAAA,MACV;AACA,cAAQ,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI,GAAG,IAAI,IAAI;AAAA,IAChD;AAEA,YAAQ,QAAQ,SAAU,QAAQ,OAAO,QAAQ,MAAM,MAAM,QAAQ;AACnE,UAAI,GAAG,GAAG;AACV,UAAI,OAAQ,SAAS,IAAK,OAAO;AACjC,UAAI,QAAQ,KAAK,QAAQ;AACzB,UAAI,QAAQ,QAAQ;AACpB,UAAI,KAAM,SAAS,KAAK,KAAK,IAAI,GAAG,GAAG,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI;AAC9D,UAAI,IAAI,OAAO,IAAK,SAAS;AAC7B,UAAI,IAAI,OAAO,IAAI;AACnB,UAAI,IAAI,QAAQ,KAAM,UAAU,KAAK,IAAI,QAAQ,IAAK,IAAI;AAE1D,cAAQ,KAAK,IAAI,KAAK;AAEtB,UAAI,MAAM,KAAK,KAAK,UAAU,UAAU;AACtC,YAAI,MAAM,KAAK,IAAI,IAAI;AACvB,YAAI;AAAA,MACN,OAAO;AACL,YAAI,KAAK,MAAM,KAAK,IAAI,KAAK,IAAI,KAAK,GAAG;AACzC,YAAI,SAAS,IAAI,KAAK,IAAI,GAAG,CAAC,CAAC,KAAK,GAAG;AACrC;AACA,eAAK;AAAA,QACP;AACA,YAAI,IAAI,SAAS,GAAG;AAClB,mBAAS,KAAK;AAAA,QAChB,OAAO;AACL,mBAAS,KAAK,KAAK,IAAI,GAAG,IAAI,KAAK;AAAA,QACrC;AACA,YAAI,QAAQ,KAAK,GAAG;AAClB;AACA,eAAK;AAAA,QACP;AAEA,YAAI,IAAI,SAAS,MAAM;AACrB,cAAI;AACJ,cAAI;AAAA,QACN,WAAW,IAAI,SAAS,GAAG;AACzB,eAAM,QAAQ,IAAK,KAAK,KAAK,IAAI,GAAG,IAAI;AACxC,cAAI,IAAI;AAAA,QACV,OAAO;AACL,cAAI,QAAQ,KAAK,IAAI,GAAG,QAAQ,CAAC,IAAI,KAAK,IAAI,GAAG,IAAI;AACrD,cAAI;AAAA,QACN;AAAA,MACF;AAEA,aAAO,QAAQ,GAAG,OAAO,SAAS,KAAK,IAAI,KAAM,KAAK,GAAG,KAAK,KAAK,QAAQ,GAAG;AAAA,MAAC;AAE/E,UAAK,KAAK,OAAQ;AAClB,cAAQ;AACR,aAAO,OAAO,GAAG,OAAO,SAAS,KAAK,IAAI,KAAM,KAAK,GAAG,KAAK,KAAK,QAAQ,GAAG;AAAA,MAAC;AAE9E,aAAO,SAAS,IAAI,MAAM,IAAI;AAAA,IAChC;AAAA;AAAA;;;ACpFA;AAAA;AAAA;AAEA,WAAO,UAAU;AAEjB,QAAI,UAAU;AAEd,aAAS,IAAI,KAAK;AACd,WAAK,MAAM,YAAY,UAAU,YAAY,OAAO,GAAG,IAAI,MAAM,IAAI,WAAW,OAAO,CAAC;AACxF,WAAK,MAAM;AACX,WAAK,OAAO;AACZ,WAAK,SAAS,KAAK,IAAI;AAAA,IAC3B;AAEA,QAAI,SAAU;AACd,QAAI,UAAU;AACd,QAAI,QAAU;AACd,QAAI,UAAU;AAEd,QAAI,iBAAiB,KAAK,OAAO,KAAK;AAAtC,QACI,iBAAiB,IAAI;AAIzB,QAAI,0BAA0B;AAC9B,QAAI,kBAAkB,OAAO,gBAAgB,cAAc,OAAO,IAAI,YAAY,MAAM;AAExF,QAAI,YAAY;AAAA,MAEZ,SAAS,WAAW;AAChB,aAAK,MAAM;AAAA,MACf;AAAA,MAIA,YAAY,SAAS,WAAW,QAAQ,KAAK;AACzC,cAAM,OAAO,KAAK;AAElB,eAAO,KAAK,MAAM,KAAK;AACnB,cAAI,MAAM,KAAK,WAAW,GACtB,MAAM,OAAO,GACb,WAAW,KAAK;AAEpB,eAAK,OAAO,MAAM;AAClB,oBAAU,KAAK,QAAQ,IAAI;AAE3B,cAAI,KAAK,QAAQ;AAAU,iBAAK,KAAK,GAAG;AAAA,QAC5C;AACA,eAAO;AAAA,MACX;AAAA,MAEA,aAAa,SAAS,WAAW,QAAQ;AACrC,eAAO,KAAK,WAAW,WAAW,QAAQ,KAAK,WAAW,IAAI,KAAK,GAAG;AAAA,MAC1E;AAAA,MAEA,aAAa,WAAW;AACpB,YAAI,MAAM,WAAW,KAAK,KAAK,KAAK,GAAG;AACvC,aAAK,OAAO;AACZ,eAAO;AAAA,MACX;AAAA,MAEA,cAAc,WAAW;AACrB,YAAI,MAAM,UAAU,KAAK,KAAK,KAAK,GAAG;AACtC,aAAK,OAAO;AACZ,eAAO;AAAA,MACX;AAAA,MAIA,aAAa,WAAW;AACpB,YAAI,MAAM,WAAW,KAAK,KAAK,KAAK,GAAG,IAAI,WAAW,KAAK,KAAK,KAAK,MAAM,CAAC,IAAI;AAChF,aAAK,OAAO;AACZ,eAAO;AAAA,MACX;AAAA,MAEA,cAAc,WAAW;AACrB,YAAI,MAAM,WAAW,KAAK,KAAK,KAAK,GAAG,IAAI,UAAU,KAAK,KAAK,KAAK,MAAM,CAAC,IAAI;AAC/E,aAAK,OAAO;AACZ,eAAO;AAAA,MACX;AAAA,MAEA,WAAW,WAAW;AAClB,YAAI,MAAM,QAAQ,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,IAAI,CAAC;AACtD,aAAK,OAAO;AACZ,eAAO;AAAA,MACX;AAAA,MAEA,YAAY,WAAW;AACnB,YAAI,MAAM,QAAQ,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,IAAI,CAAC;AACtD,aAAK,OAAO;AACZ,eAAO;AAAA,MACX;AAAA,MAEA,YAAY,SAAS,UAAU;AAC3B,YAAI,MAAM,KAAK,KACX,KAAK;AAET,YAAI,IAAI,KAAK;AAAQ,cAAQ,IAAI;AAAa,YAAI,IAAI;AAAM,iBAAO;AACnE,YAAI,IAAI,KAAK;AAAQ,gBAAQ,IAAI,QAAS;AAAI,YAAI,IAAI;AAAM,iBAAO;AACnE,YAAI,IAAI,KAAK;AAAQ,gBAAQ,IAAI,QAAS;AAAI,YAAI,IAAI;AAAM,iBAAO;AACnE,YAAI,IAAI,KAAK;AAAQ,gBAAQ,IAAI,QAAS;AAAI,YAAI,IAAI;AAAM,iBAAO;AACnE,YAAI,IAAI,KAAK;AAAQ,gBAAQ,IAAI,OAAS;AAE1C,eAAO,oBAAoB,KAAK,UAAU,IAAI;AAAA,MAClD;AAAA,MAEA,cAAc,WAAW;AACrB,eAAO,KAAK,WAAW,IAAI;AAAA,MAC/B;AAAA,MAEA,aAAa,WAAW;AACpB,YAAI,MAAM,KAAK,WAAW;AAC1B,eAAO,MAAM,MAAM,KAAK,MAAM,KAAK,KAAK,MAAM;AAAA,MAClD;AAAA,MAEA,aAAa,WAAW;AACpB,eAAO,QAAQ,KAAK,WAAW,CAAC;AAAA,MACpC;AAAA,MAEA,YAAY,WAAW;AACnB,YAAI,MAAM,KAAK,WAAW,IAAI,KAAK;AACnC,YAAI,MAAM,KAAK;AACf,aAAK,MAAM;AAEX,YAAI,MAAM,OAAO,2BAA2B,iBAAiB;AAEzD,iBAAO,oBAAoB,KAAK,KAAK,KAAK,GAAG;AAAA,QACjD;AAEA,eAAO,SAAS,KAAK,KAAK,KAAK,GAAG;AAAA,MACtC;AAAA,MAEA,WAAW,WAAW;AAClB,YAAI,MAAM,KAAK,WAAW,IAAI,KAAK,KAC/B,SAAS,KAAK,IAAI,SAAS,KAAK,KAAK,GAAG;AAC5C,aAAK,MAAM;AACX,eAAO;AAAA,MACX;AAAA,MAIA,kBAAkB,SAAS,KAAK,UAAU;AACtC,YAAI,KAAK,SAAS,IAAI;AAAO,iBAAO,IAAI,KAAK,KAAK,WAAW,QAAQ,CAAC;AACtE,YAAI,MAAM,cAAc,IAAI;AAC5B,cAAM,OAAO,CAAC;AACd,eAAO,KAAK,MAAM;AAAK,cAAI,KAAK,KAAK,WAAW,QAAQ,CAAC;AACzD,eAAO;AAAA,MACX;AAAA,MACA,mBAAmB,SAAS,KAAK;AAC7B,YAAI,KAAK,SAAS,IAAI;AAAO,iBAAO,IAAI,KAAK,KAAK,YAAY,CAAC;AAC/D,YAAI,MAAM,cAAc,IAAI;AAC5B,cAAM,OAAO,CAAC;AACd,eAAO,KAAK,MAAM;AAAK,cAAI,KAAK,KAAK,YAAY,CAAC;AAClD,eAAO;AAAA,MACX;AAAA,MACA,mBAAmB,SAAS,KAAK;AAC7B,YAAI,KAAK,SAAS,IAAI;AAAO,iBAAO,IAAI,KAAK,KAAK,YAAY,CAAC;AAC/D,YAAI,MAAM,cAAc,IAAI;AAC5B,cAAM,OAAO,CAAC;AACd,eAAO,KAAK,MAAM;AAAK,cAAI,KAAK,KAAK,YAAY,CAAC;AAClD,eAAO;AAAA,MACX;AAAA,MACA,iBAAiB,SAAS,KAAK;AAC3B,YAAI,KAAK,SAAS,IAAI;AAAO,iBAAO,IAAI,KAAK,KAAK,UAAU,CAAC;AAC7D,YAAI,MAAM,cAAc,IAAI;AAC5B,cAAM,OAAO,CAAC;AACd,eAAO,KAAK,MAAM;AAAK,cAAI,KAAK,KAAK,UAAU,CAAC;AAChD,eAAO;AAAA,MACX;AAAA,MACA,kBAAkB,SAAS,KAAK;AAC5B,YAAI,KAAK,SAAS,IAAI;AAAO,iBAAO,IAAI,KAAK,KAAK,WAAW,CAAC;AAC9D,YAAI,MAAM,cAAc,IAAI;AAC5B,cAAM,OAAO,CAAC;AACd,eAAO,KAAK,MAAM;AAAK,cAAI,KAAK,KAAK,WAAW,CAAC;AACjD,eAAO;AAAA,MACX;AAAA,MACA,mBAAmB,SAAS,KAAK;AAC7B,YAAI,KAAK,SAAS,IAAI;AAAO,iBAAO,IAAI,KAAK,KAAK,YAAY,CAAC;AAC/D,YAAI,MAAM,cAAc,IAAI;AAC5B,cAAM,OAAO,CAAC;AACd,eAAO,KAAK,MAAM;AAAK,cAAI,KAAK,KAAK,YAAY,CAAC;AAClD,eAAO;AAAA,MACX;AAAA,MACA,oBAAoB,SAAS,KAAK;AAC9B,YAAI,KAAK,SAAS,IAAI;AAAO,iBAAO,IAAI,KAAK,KAAK,aAAa,CAAC;AAChE,YAAI,MAAM,cAAc,IAAI;AAC5B,cAAM,OAAO,CAAC;AACd,eAAO,KAAK,MAAM;AAAK,cAAI,KAAK,KAAK,aAAa,CAAC;AACnD,eAAO;AAAA,MACX;AAAA,MACA,mBAAmB,SAAS,KAAK;AAC7B,YAAI,KAAK,SAAS,IAAI;AAAO,iBAAO,IAAI,KAAK,KAAK,YAAY,CAAC;AAC/D,YAAI,MAAM,cAAc,IAAI;AAC5B,cAAM,OAAO,CAAC;AACd,eAAO,KAAK,MAAM;AAAK,cAAI,KAAK,KAAK,YAAY,CAAC;AAClD,eAAO;AAAA,MACX;AAAA,MACA,oBAAoB,SAAS,KAAK;AAC9B,YAAI,KAAK,SAAS,IAAI;AAAO,iBAAO,IAAI,KAAK,KAAK,aAAa,CAAC;AAChE,YAAI,MAAM,cAAc,IAAI;AAC5B,cAAM,OAAO,CAAC;AACd,eAAO,KAAK,MAAM;AAAK,cAAI,KAAK,KAAK,aAAa,CAAC;AACnD,eAAO;AAAA,MACX;AAAA,MAEA,MAAM,SAAS,KAAK;AAChB,YAAI,OAAO,MAAM;AACjB,YAAI,SAAS,IAAI;AAAQ,iBAAO,KAAK,IAAI,KAAK,SAAS,KAAM;AAAA,UAAC;AAAA,iBACrD,SAAS,IAAI;AAAO,eAAK,MAAM,KAAK,WAAW,IAAI,KAAK;AAAA,iBACxD,SAAS,IAAI;AAAS,eAAK,OAAO;AAAA,iBAClC,SAAS,IAAI;AAAS,eAAK,OAAO;AAAA;AACtC,gBAAM,IAAI,MAAM,yBAAyB,IAAI;AAAA,MACtD;AAAA,MAIA,UAAU,SAAS,KAAK,MAAM;AAC1B,aAAK,YAAa,OAAO,IAAK,IAAI;AAAA,MACtC;AAAA,MAEA,SAAS,SAAS,KAAK;AACnB,YAAI,SAAS,KAAK,UAAU;AAE5B,eAAO,SAAS,KAAK,MAAM;AAAK,oBAAU;AAE1C,YAAI,WAAW,KAAK,QAAQ;AACxB,cAAI,MAAM,IAAI,WAAW,MAAM;AAC/B,cAAI,IAAI,KAAK,GAAG;AAChB,eAAK,MAAM;AACX,eAAK,SAAS;AAAA,QAClB;AAAA,MACJ;AAAA,MAEA,QAAQ,WAAW;AACf,aAAK,SAAS,KAAK;AACnB,aAAK,MAAM;AACX,eAAO,KAAK,IAAI,SAAS,GAAG,KAAK,MAAM;AAAA,MAC3C;AAAA,MAEA,cAAc,SAAS,KAAK;AACxB,aAAK,QAAQ,CAAC;AACd,mBAAW,KAAK,KAAK,KAAK,KAAK,GAAG;AAClC,aAAK,OAAO;AAAA,MAChB;AAAA,MAEA,eAAe,SAAS,KAAK;AACzB,aAAK,QAAQ,CAAC;AACd,mBAAW,KAAK,KAAK,KAAK,KAAK,GAAG;AAClC,aAAK,OAAO;AAAA,MAChB;AAAA,MAEA,cAAc,SAAS,KAAK;AACxB,aAAK,QAAQ,CAAC;AACd,mBAAW,KAAK,KAAK,MAAM,IAAI,KAAK,GAAG;AACvC,mBAAW,KAAK,KAAK,KAAK,MAAM,MAAM,cAAc,GAAG,KAAK,MAAM,CAAC;AACnE,aAAK,OAAO;AAAA,MAChB;AAAA,MAEA,eAAe,SAAS,KAAK;AACzB,aAAK,QAAQ,CAAC;AACd,mBAAW,KAAK,KAAK,MAAM,IAAI,KAAK,GAAG;AACvC,mBAAW,KAAK,KAAK,KAAK,MAAM,MAAM,cAAc,GAAG,KAAK,MAAM,CAAC;AACnE,aAAK,OAAO;AAAA,MAChB;AAAA,MAEA,aAAa,SAAS,KAAK;AACvB,cAAM,CAAC,OAAO;AAEd,YAAI,MAAM,aAAa,MAAM,GAAG;AAC5B,yBAAe,KAAK,IAAI;AACxB;AAAA,QACJ;AAEA,aAAK,QAAQ,CAAC;AAEd,aAAK,IAAI,KAAK,SAAmB,MAAM,OAAS,MAAM,MAAO,MAAO;AAAI,YAAI,OAAO;AAAM;AACzF,aAAK,IAAI,KAAK,UAAW,SAAS,KAAK,OAAS,MAAM,MAAO,MAAO;AAAI,YAAI,OAAO;AAAM;AACzF,aAAK,IAAI,KAAK,UAAW,SAAS,KAAK,OAAS,MAAM,MAAO,MAAO;AAAI,YAAI,OAAO;AAAM;AACzF,aAAK,IAAI,KAAK,SAAY,QAAQ,IAAK;AAAA,MAC3C;AAAA,MAEA,cAAc,SAAS,KAAK;AACxB,aAAK,YAAY,MAAM,IAAI,CAAC,MAAM,IAAI,IAAI,MAAM,CAAC;AAAA,MACrD;AAAA,MAEA,cAAc,SAAS,KAAK;AACxB,aAAK,YAAY,QAAQ,GAAG,CAAC;AAAA,MACjC;AAAA,MAEA,aAAa,SAAS,KAAK;AACvB,cAAM,OAAO,GAAG;AAChB,aAAK,QAAQ,IAAI,SAAS,CAAC;AAE3B,aAAK;AAEL,YAAI,WAAW,KAAK;AAEpB,aAAK,MAAM,UAAU,KAAK,KAAK,KAAK,KAAK,GAAG;AAC5C,YAAI,MAAM,KAAK,MAAM;AAErB,YAAI,OAAO;AAAM,iCAAuB,UAAU,KAAK,IAAI;AAG3D,aAAK,MAAM,WAAW;AACtB,aAAK,YAAY,GAAG;AACpB,aAAK,OAAO;AAAA,MAChB;AAAA,MAEA,YAAY,SAAS,KAAK;AACtB,aAAK,QAAQ,CAAC;AACd,gBAAQ,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,IAAI,CAAC;AAClD,aAAK,OAAO;AAAA,MAChB;AAAA,MAEA,aAAa,SAAS,KAAK;AACvB,aAAK,QAAQ,CAAC;AACd,gBAAQ,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,IAAI,CAAC;AAClD,aAAK,OAAO;AAAA,MAChB;AAAA,MAEA,YAAY,SAAS,QAAQ;AACzB,YAAI,MAAM,OAAO;AACjB,aAAK,YAAY,GAAG;AACpB,aAAK,QAAQ,GAAG;AAChB,iBAAS,IAAI,GAAG,IAAI,KAAK;AAAK,eAAK,IAAI,KAAK,SAAS,OAAO;AAAA,MAChE;AAAA,MAEA,iBAAiB,SAAS,IAAI,KAAK;AAC/B,aAAK;AAGL,YAAI,WAAW,KAAK;AACpB,WAAG,KAAK,IAAI;AACZ,YAAI,MAAM,KAAK,MAAM;AAErB,YAAI,OAAO;AAAM,iCAAuB,UAAU,KAAK,IAAI;AAG3D,aAAK,MAAM,WAAW;AACtB,aAAK,YAAY,GAAG;AACpB,aAAK,OAAO;AAAA,MAChB;AAAA,MAEA,cAAc,SAAS,KAAK,IAAI,KAAK;AACjC,aAAK,SAAS,KAAK,IAAI,KAAK;AAC5B,aAAK,gBAAgB,IAAI,GAAG;AAAA,MAChC;AAAA,MAEA,mBAAqB,SAAS,KAAK,KAAK;AAAE,YAAI,IAAI;AAAQ,eAAK,aAAa,KAAK,mBAAmB,GAAG;AAAA,MAAK;AAAA,MAC5G,oBAAqB,SAAS,KAAK,KAAK;AAAE,YAAI,IAAI;AAAQ,eAAK,aAAa,KAAK,oBAAoB,GAAG;AAAA,MAAI;AAAA,MAC5G,oBAAqB,SAAS,KAAK,KAAK;AAAE,YAAI,IAAI;AAAQ,eAAK,aAAa,KAAK,oBAAoB,GAAG;AAAA,MAAI;AAAA,MAC5G,kBAAqB,SAAS,KAAK,KAAK;AAAE,YAAI,IAAI;AAAQ,eAAK,aAAa,KAAK,kBAAkB,GAAG;AAAA,MAAM;AAAA,MAC5G,mBAAqB,SAAS,KAAK,KAAK;AAAE,YAAI,IAAI;AAAQ,eAAK,aAAa,KAAK,mBAAmB,GAAG;AAAA,MAAK;AAAA,MAC5G,oBAAqB,SAAS,KAAK,KAAK;AAAE,YAAI,IAAI;AAAQ,eAAK,aAAa,KAAK,oBAAoB,GAAG;AAAA,MAAI;AAAA,MAC5G,qBAAqB,SAAS,KAAK,KAAK;AAAE,YAAI,IAAI;AAAQ,eAAK,aAAa,KAAK,qBAAqB,GAAG;AAAA,MAAG;AAAA,MAC5G,oBAAqB,SAAS,KAAK,KAAK;AAAE,YAAI,IAAI;AAAQ,eAAK,aAAa,KAAK,oBAAoB,GAAG;AAAA,MAAI;AAAA,MAC5G,qBAAqB,SAAS,KAAK,KAAK;AAAE,YAAI,IAAI;AAAQ,eAAK,aAAa,KAAK,qBAAqB,GAAG;AAAA,MAAG;AAAA,MAE5G,iBAAiB,SAAS,KAAK,QAAQ;AACnC,aAAK,SAAS,KAAK,IAAI,KAAK;AAC5B,aAAK,WAAW,MAAM;AAAA,MAC1B;AAAA,MACA,mBAAmB,SAAS,KAAK,KAAK;AAClC,aAAK,SAAS,KAAK,IAAI,OAAO;AAC9B,aAAK,aAAa,GAAG;AAAA,MACzB;AAAA,MACA,oBAAoB,SAAS,KAAK,KAAK;AACnC,aAAK,SAAS,KAAK,IAAI,OAAO;AAC9B,aAAK,cAAc,GAAG;AAAA,MAC1B;AAAA,MACA,mBAAmB,SAAS,KAAK,KAAK;AAClC,aAAK,SAAS,KAAK,IAAI,OAAO;AAC9B,aAAK,aAAa,GAAG;AAAA,MACzB;AAAA,MACA,oBAAoB,SAAS,KAAK,KAAK;AACnC,aAAK,SAAS,KAAK,IAAI,OAAO;AAC9B,aAAK,cAAc,GAAG;AAAA,MAC1B;AAAA,MACA,kBAAkB,SAAS,KAAK,KAAK;AACjC,aAAK,SAAS,KAAK,IAAI,MAAM;AAC7B,aAAK,YAAY,GAAG;AAAA,MACxB;AAAA,MACA,mBAAmB,SAAS,KAAK,KAAK;AAClC,aAAK,SAAS,KAAK,IAAI,MAAM;AAC7B,aAAK,aAAa,GAAG;AAAA,MACzB;AAAA,MACA,kBAAkB,SAAS,KAAK,KAAK;AACjC,aAAK,SAAS,KAAK,IAAI,KAAK;AAC5B,aAAK,YAAY,GAAG;AAAA,MACxB;AAAA,MACA,iBAAiB,SAAS,KAAK,KAAK;AAChC,aAAK,SAAS,KAAK,IAAI,OAAO;AAC9B,aAAK,WAAW,GAAG;AAAA,MACvB;AAAA,MACA,kBAAkB,SAAS,KAAK,KAAK;AACjC,aAAK,SAAS,KAAK,IAAI,OAAO;AAC9B,aAAK,YAAY,GAAG;AAAA,MACxB;AAAA,MACA,mBAAmB,SAAS,KAAK,KAAK;AAClC,aAAK,iBAAiB,KAAK,QAAQ,GAAG,CAAC;AAAA,MAC3C;AAAA,IACJ;AAEA,aAAS,oBAAoB,GAAG,GAAG,GAAG;AAClC,UAAI,MAAM,EAAE,KACR,GAAG;AAEP,UAAI,IAAI,EAAE;AAAQ,WAAM,IAAI,QAAS;AAAI,UAAI,IAAI;AAAM,eAAO,MAAM,GAAG,GAAG,CAAC;AAC3E,UAAI,IAAI,EAAE;AAAQ,YAAM,IAAI,QAAS;AAAI,UAAI,IAAI;AAAM,eAAO,MAAM,GAAG,GAAG,CAAC;AAC3E,UAAI,IAAI,EAAE;AAAQ,YAAM,IAAI,QAAS;AAAI,UAAI,IAAI;AAAM,eAAO,MAAM,GAAG,GAAG,CAAC;AAC3E,UAAI,IAAI,EAAE;AAAQ,YAAM,IAAI,QAAS;AAAI,UAAI,IAAI;AAAM,eAAO,MAAM,GAAG,GAAG,CAAC;AAC3E,UAAI,IAAI,EAAE;AAAQ,YAAM,IAAI,QAAS;AAAI,UAAI,IAAI;AAAM,eAAO,MAAM,GAAG,GAAG,CAAC;AAC3E,UAAI,IAAI,EAAE;AAAQ,YAAM,IAAI,MAAS;AAAI,UAAI,IAAI;AAAM,eAAO,MAAM,GAAG,GAAG,CAAC;AAE3E,YAAM,IAAI,MAAM,wCAAwC;AAAA,IAC5D;AAEA,aAAS,cAAc,KAAK;AACxB,aAAO,IAAI,SAAS,IAAI,QACpB,IAAI,WAAW,IAAI,IAAI,MAAM,IAAI,MAAM;AAAA,IAC/C;AAEA,aAAS,MAAM,KAAK,MAAM,UAAU;AAChC,UAAI,UAAU;AACV,eAAO,OAAO,cAAe,QAAQ;AAAA,MACzC;AAEA,cAAS,SAAS,KAAK,cAAgB,QAAQ;AAAA,IACnD;AAEA,aAAS,eAAe,KAAK,KAAK;AAC9B,UAAI,KAAK;AAET,UAAI,OAAO,GAAG;AACV,cAAQ,MAAM,aAAe;AAC7B,eAAQ,MAAM,aAAe;AAAA,MACjC,OAAO;AACH,cAAO,EAAE,CAAC,MAAM;AAChB,eAAO,EAAE,CAAC,MAAM;AAEhB,YAAI,MAAM,YAAY;AAClB,gBAAO,MAAM,IAAK;AAAA,QACtB,OAAO;AACH,gBAAM;AACN,iBAAQ,OAAO,IAAK;AAAA,QACxB;AAAA,MACJ;AAEA,UAAI,OAAO,uBAAuB,MAAM,sBAAsB;AAC1D,cAAM,IAAI,MAAM,wCAAyC;AAAA,MAC7D;AAEA,UAAI,QAAQ,EAAE;AAEd,wBAAkB,KAAK,MAAM,GAAG;AAChC,yBAAmB,MAAM,GAAG;AAAA,IAChC;AAEA,aAAS,kBAAkB,KAAK,MAAM,KAAK;AACvC,UAAI,IAAI,IAAI,SAAS,MAAM,MAAO;AAAM,eAAS;AACjD,UAAI,IAAI,IAAI,SAAS,MAAM,MAAO;AAAM,eAAS;AACjD,UAAI,IAAI,IAAI,SAAS,MAAM,MAAO;AAAM,eAAS;AACjD,UAAI,IAAI,IAAI,SAAS,MAAM,MAAO;AAAM,eAAS;AACjD,UAAI,IAAI,IAAI,OAAS,MAAM;AAAA,IAC/B;AAEA,aAAS,mBAAmB,MAAM,KAAK;AACnC,UAAI,OAAO,OAAO,MAAS;AAE3B,UAAI,IAAI,IAAI,UAAU,QAAgB,UAAU,KAAK,MAAO;AAAI,UAAI,CAAC;AAAM;AAC3E,UAAI,IAAI,IAAI,SAAU,OAAO,QAAS,UAAU,KAAK,MAAO;AAAI,UAAI,CAAC;AAAM;AAC3E,UAAI,IAAI,IAAI,SAAU,OAAO,QAAS,UAAU,KAAK,MAAO;AAAI,UAAI,CAAC;AAAM;AAC3E,UAAI,IAAI,IAAI,SAAU,OAAO,QAAS,UAAU,KAAK,MAAO;AAAI,UAAI,CAAC;AAAM;AAC3E,UAAI,IAAI,IAAI,SAAU,OAAO,QAAS,UAAU,KAAK,MAAO;AAAI,UAAI,CAAC;AAAM;AAC3E,UAAI,IAAI,IAAI,SAAU,OAAO;AAAA,IACjC;AAEA,aAAS,uBAAuB,UAAU,KAAK,KAAK;AAChD,UAAI,WACA,OAAO,QAAS,IAChB,OAAO,UAAW,IAClB,OAAO,YAAY,IAAI,KAAK,MAAM,KAAK,IAAI,GAAG,KAAK,KAAK,MAAM,EAAE;AAGpE,UAAI,QAAQ,QAAQ;AACpB,eAAS,IAAI,IAAI,MAAM,GAAG,KAAK,UAAU;AAAK,YAAI,IAAI,IAAI,YAAY,IAAI,IAAI;AAAA,IAClF;AAEA,aAAS,kBAAkB,KAAK,KAAO;AAAE,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ;AAAK,YAAI,YAAY,IAAI,EAAE;AAAA,IAAK;AACzG,aAAS,mBAAmB,KAAK,KAAM;AAAE,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ;AAAK,YAAI,aAAa,IAAI,EAAE;AAAA,IAAI;AACzG,aAAS,iBAAiB,KAAK,KAAQ;AAAE,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ;AAAK,YAAI,WAAW,IAAI,EAAE;AAAA,IAAM;AACzG,aAAS,kBAAkB,KAAK,KAAO;AAAE,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ;AAAK,YAAI,YAAY,IAAI,EAAE;AAAA,IAAK;AACzG,aAAS,mBAAmB,KAAK,KAAM;AAAE,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ;AAAK,YAAI,aAAa,IAAI,EAAE;AAAA,IAAI;AACzG,aAAS,mBAAmB,KAAK,KAAM;AAAE,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ;AAAK,YAAI,aAAa,IAAI,EAAE;AAAA,IAAI;AACzG,aAAS,oBAAoB,KAAK,KAAK;AAAE,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ;AAAK,YAAI,cAAc,IAAI,EAAE;AAAA,IAAG;AACzG,aAAS,mBAAmB,KAAK,KAAM;AAAE,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ;AAAK,YAAI,aAAa,IAAI,EAAE;AAAA,IAAI;AACzG,aAAS,oBAAoB,KAAK,KAAK;AAAE,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ;AAAK,YAAI,cAAc,IAAI,EAAE;AAAA,IAAG;AAIzG,aAAS,WAAW,KAAK,KAAK;AAC1B,cAAS,IAAI,OACR,IAAI,MAAM,MAAM,IAChB,IAAI,MAAM,MAAM,MAChB,IAAI,MAAM,KAAK;AAAA,IACxB;AAEA,aAAS,WAAW,KAAK,KAAK,KAAK;AAC/B,UAAI,OAAO;AACX,UAAI,MAAM,KAAM,QAAQ;AACxB,UAAI,MAAM,KAAM,QAAQ;AACxB,UAAI,MAAM,KAAM,QAAQ;AAAA,IAC5B;AAEA,aAAS,UAAU,KAAK,KAAK;AACzB,cAAS,IAAI,OACR,IAAI,MAAM,MAAM,IAChB,IAAI,MAAM,MAAM,OAChB,IAAI,MAAM,MAAM;AAAA,IACzB;AAEA,aAAS,SAAS,KAAK,KAAK,KAAK;AAC7B,UAAI,MAAM;AACV,UAAI,IAAI;AAER,aAAO,IAAI,KAAK;AACZ,YAAI,KAAK,IAAI;AACb,YAAI,IAAI;AACR,YAAI,mBACA,KAAK,MAAO,IACZ,KAAK,MAAO,IACZ,KAAK,MAAO,IAAI;AAEpB,YAAI,IAAI,mBAAmB;AAAK;AAEhC,YAAI,IAAI,IAAI;AAEZ,YAAI,qBAAqB,GAAG;AACxB,cAAI,KAAK,KAAM;AACX,gBAAI;AAAA,UACR;AAAA,QACJ,WAAW,qBAAqB,GAAG;AAC/B,eAAK,IAAI,IAAI;AACb,eAAK,KAAK,SAAU,KAAM;AACtB,iBAAK,KAAK,OAAS,IAAO,KAAK;AAC/B,gBAAI,KAAK,KAAM;AACX,kBAAI;AAAA,YACR;AAAA,UACJ;AAAA,QACJ,WAAW,qBAAqB,GAAG;AAC/B,eAAK,IAAI,IAAI;AACb,eAAK,IAAI,IAAI;AACb,eAAK,KAAK,SAAU,QAAS,KAAK,SAAU,KAAM;AAC9C,iBAAK,KAAK,OAAQ,MAAO,KAAK,OAAS,IAAO,KAAK;AACnD,gBAAI,KAAK,QAAU,KAAK,SAAU,KAAK,OAAS;AAC5C,kBAAI;AAAA,YACR;AAAA,UACJ;AAAA,QACJ,WAAW,qBAAqB,GAAG;AAC/B,eAAK,IAAI,IAAI;AACb,eAAK,IAAI,IAAI;AACb,eAAK,IAAI,IAAI;AACb,eAAK,KAAK,SAAU,QAAS,KAAK,SAAU,QAAS,KAAK,SAAU,KAAM;AACtE,iBAAK,KAAK,OAAQ,MAAQ,KAAK,OAAS,MAAO,KAAK,OAAS,IAAO,KAAK;AACzE,gBAAI,KAAK,SAAU,KAAK,SAAU;AAC9B,kBAAI;AAAA,YACR;AAAA,UACJ;AAAA,QACJ;AAEA,YAAI,MAAM,MAAM;AACZ,cAAI;AACJ,6BAAmB;AAAA,QAEvB,WAAW,IAAI,OAAQ;AACnB,eAAK;AACL,iBAAO,OAAO,aAAa,MAAM,KAAK,OAAQ,KAAM;AACpD,cAAI,QAAS,IAAI;AAAA,QACrB;AAEA,eAAO,OAAO,aAAa,CAAC;AAC5B,aAAK;AAAA,MACT;AAEA,aAAO;AAAA,IACX;AAEA,aAAS,oBAAoB,KAAK,KAAK,KAAK;AACxC,aAAO,gBAAgB,OAAO,IAAI,SAAS,KAAK,GAAG,CAAC;AAAA,IACxD;AAEA,aAAS,UAAU,KAAK,KAAK,KAAK;AAC9B,eAAS,IAAI,GAAG,GAAG,MAAM,IAAI,IAAI,QAAQ,KAAK;AAC1C,YAAI,IAAI,WAAW,CAAC;AAEpB,YAAI,IAAI,SAAU,IAAI,OAAQ;AAC1B,cAAI,MAAM;AACN,gBAAI,IAAI,OAAQ;AACZ,kBAAI,SAAS;AACb,kBAAI,SAAS;AACb,kBAAI,SAAS;AACb,qBAAO;AACP;AAAA,YACJ,OAAO;AACH,kBAAI,OAAO,SAAU,KAAK,IAAI,QAAS;AACvC,qBAAO;AAAA,YACX;AAAA,UACJ,OAAO;AACH,gBAAI,IAAI,SAAW,IAAI,MAAM,IAAI,QAAS;AACtC,kBAAI,SAAS;AACb,kBAAI,SAAS;AACb,kBAAI,SAAS;AAAA,YACjB,OAAO;AACH,qBAAO;AAAA,YACX;AACA;AAAA,UACJ;AAAA,QACJ,WAAW,MAAM;AACb,cAAI,SAAS;AACb,cAAI,SAAS;AACb,cAAI,SAAS;AACb,iBAAO;AAAA,QACX;AAEA,YAAI,IAAI,KAAM;AACV,cAAI,SAAS;AAAA,QACjB,OAAO;AACH,cAAI,IAAI,MAAO;AACX,gBAAI,SAAS,KAAK,IAAM;AAAA,UAC5B,OAAO;AACH,gBAAI,IAAI,OAAS;AACb,kBAAI,SAAS,KAAK,KAAM;AAAA,YAC5B,OAAO;AACH,kBAAI,SAAS,KAAK,KAAO;AACzB,kBAAI,SAAS,KAAK,KAAM,KAAO;AAAA,YACnC;AACA,gBAAI,SAAS,KAAK,IAAM,KAAO;AAAA,UACnC;AACA,cAAI,SAAS,IAAI,KAAO;AAAA,QAC5B;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA;AAAA;;;AC9jBA,IAAM,gBAAN,MAAoB;AAAA,EAClB,cAAc;AAKZ,SAAK,iBAAiB;AAMtB,SAAK,2BAA2B;AAMhC,SAAK,sBAAsB;AAAA,EAC7B;AAAA,EASA,eAAe,QAAQ,SAAS;AAC9B,QAAI,SAAS;AACX,UAAI,iBAAiB,QAAQ,iBACzB,IAAc,QAAQ,cAAc,IACpC,KAAK,eAAe,MAAM;AAC9B,UACE,QAAQ,UACR,kBACA,eAAe,SAAS,MAAM,eAC9B;AACA,yBAAiB,IAAc,cAAc;AAC7C,uBAAe,eAAe,QAAQ,MAAM;AAAA,MAC9C;AACA,gBAAU;AAAA,QACR;AAAA,QACA,mBAAmB,QAAQ;AAAA,MAC7B;AAAA,IACF;AACA,WAAO,KAAK,aAAa,OAAO;AAAA,EAClC;AAAA,EAWA,aAAa,SAAS;AACpB,WAAO,OAAO;AAAA,MACZ;AAAA,QACE,gBAAgB,KAAK;AAAA,QACrB,mBAAmB,KAAK;AAAA,MAC1B;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA,EAMA,UAAU;AACR,WAAO,SAAS;AAAA,EAClB;AAAA,EAUA,YAAY,QAAQ,SAAS;AAC3B,WAAO,SAAS;AAAA,EAClB;AAAA,EAUA,aAAa,QAAQ,SAAS;AAC5B,WAAO,SAAS;AAAA,EAClB;AAAA,EAUA,aAAa,QAAQ,SAAS;AAC5B,WAAO,SAAS;AAAA,EAClB;AAAA,EASA,eAAe,QAAQ;AACrB,WAAO,SAAS;AAAA,EAClB;AAAA,EAUA,aAAa,SAAS,SAAS;AAC7B,WAAO,SAAS;AAAA,EAClB;AAAA,EAUA,cAAc,UAAU,SAAS;AAC/B,WAAO,SAAS;AAAA,EAClB;AAAA,EAUA,cAAc,UAAU,SAAS;AAC/B,WAAO,SAAS;AAAA,EAClB;AACF;AAEA,IAAOA,mBAAQ;AAQR,SAAS,6BAA6B,UAAU,OAAO,SAAS;AACrE,QAAM,oBAAoB,UACtB,IAAc,QAAQ,iBAAiB,IACvC;AACJ,QAAM,iBAAiB,UAAU,IAAc,QAAQ,cAAc,IAAI;AAEzE,MAAI;AACJ,MACE,qBACA,kBACA,CAAC,WAAqB,mBAAmB,cAAc,GACvD;AACA,mBAAe,QAAQ,SAAS,MAAM,IAAI,UAAU;AAAA,MAClD,QAAQ,oBAAoB;AAAA,MAC5B,QAAQ,iBAAiB;AAAA,IAC3B;AAAA,EACF,OAAO;AACL,kBAAc;AAAA,EAChB;AACA,MACE,SACA,WAC6B,QAAS,aAAa,QACnD;AACA,UAAM,QAAQ,KAAK,IAAI,IAAiC,QAAS,QAAQ;AAMzE,UAAM,YAAY,SAAU,aAAa;AACvC,eAAS,IAAI,GAAG,KAAK,YAAY,QAAQ,IAAI,IAAI,EAAE,GAAG;AACpD,oBAAY,KAAK,KAAK,MAAM,YAAY,KAAK,KAAK,IAAI;AAAA,MACxD;AACA,aAAO;AAAA,IACT;AACA,QAAI,gBAAgB,UAAU;AAC5B,oBAAc,SAAS,MAAM;AAAA,IAC/B;AACA,gBAAY,eAAe,SAAS;AAAA,EACtC;AACA,SAAO;AACT;AAOO,SAAS,2BAA2B,QAAQ,SAAS;AAC1D,QAAM,oBAAoB,UACtB,IAAc,QAAQ,iBAAiB,IACvC;AACJ,QAAM,iBAAiB,UAAU,IAAc,QAAQ,cAAc,IAAI;AAEzE,MACE,qBACA,kBACA,CAAC,WAAqB,mBAAmB,cAAc,GACvD;AACA,WAAO,gBAAgB,QAAQ,gBAAgB,iBAAiB;AAAA,EAClE,OAAO;AACL,WAAO;AAAA,EACT;AACF;;;AC7RA,IAAM,cAAN,cAA0BC,iBAAc;AAAA,EACtC,cAAc;AACZ,UAAM;AAAA,EACR;AAAA,EAKA,UAAU;AACR,WAAO;AAAA,EACT;AAAA,EAWA,YAAY,QAAQ,SAAS;AAC3B,WAAO,KAAK;AAAA,MACV,UAAU,MAAM;AAAA,MAChB,KAAK,eAAe,QAAQ,OAAO;AAAA,IACrC;AAAA,EACF;AAAA,EAWA,aAAa,QAAQ,SAAS;AAC5B,WAAO,KAAK;AAAA,MACV,UAAU,MAAM;AAAA,MAChB,KAAK,eAAe,QAAQ,OAAO;AAAA,IACrC;AAAA,EACF;AAAA,EASA,sBAAsB,QAAQ,SAAS;AACrC,WAAO,SAAS;AAAA,EAClB;AAAA,EASA,uBAAuB,QAAQ,SAAS;AACtC,WAAO,SAAS;AAAA,EAClB;AAAA,EAUA,aAAa,QAAQ,SAAS;AAC5B,WAAO,KAAK;AAAA,MACV,UAAU,MAAM;AAAA,MAChB,KAAK,eAAe,QAAQ,OAAO;AAAA,IACrC;AAAA,EACF;AAAA,EASA,uBAAuB,QAAQ,SAAS;AACtC,WAAO,SAAS;AAAA,EAClB;AAAA,EASA,eAAe,QAAQ;AACrB,WAAO,KAAK,yBAAyB,UAAU,MAAM,CAAC;AAAA,EACxD;AAAA,EAQA,yBAAyB,QAAQ;AAC/B,WAAO,SAAS;AAAA,EAClB;AAAA,EAUA,aAAa,SAAS,SAAS;AAC7B,WAAO,KAAK,UAAU,KAAK,mBAAmB,SAAS,OAAO,CAAC;AAAA,EACjE;AAAA,EAQA,mBAAmB,SAAS,SAAS;AACnC,WAAO,SAAS;AAAA,EAClB;AAAA,EAUA,cAAc,UAAU,SAAS;AAC/B,WAAO,KAAK,UAAU,KAAK,oBAAoB,UAAU,OAAO,CAAC;AAAA,EACnE;AAAA,EAQA,oBAAoB,UAAU,SAAS;AACrC,WAAO,SAAS;AAAA,EAClB;AAAA,EAUA,cAAc,UAAU,SAAS;AAC/B,WAAO,KAAK,UAAU,KAAK,oBAAoB,UAAU,OAAO,CAAC;AAAA,EACnE;AAAA,EAQA,oBAAoB,UAAU,SAAS;AACrC,WAAO,SAAS;AAAA,EAClB;AACF;AAMA,SAAS,UAAU,QAAQ;AACzB,MAAI,OAAO,WAAW,UAAU;AAC9B,UAAM,SAAS,KAAK,MAAM,MAAM;AAChC,WAAO,SAAgC,SAAU;AAAA,EACnD,WAAW,WAAW,MAAM;AAC1B,WAAO;AAAA,EACT,OAAO;AACL,WAAO;AAAA,EACT;AACF;AAEA,IAAO,sBAAQ;;;AC/Jf,IAAM,UAAN,cAAsB,oBAAY;AAAA,EAIhC,YAAY,SAAS;AACnB,cAAU,UAAU,UAAU,CAAC;AAE/B,UAAM;AAKN,SAAK,iBAAiB;AAAA,MACpB,QAAQ,iBAAiB,QAAQ,iBAAiB;AAAA,IACpD;AAEA,QAAI,QAAQ,mBAAmB;AAI7B,WAAK,2BAA2B,IAAc,QAAQ,iBAAiB;AAAA,IACzE;AAOA,SAAK,gBAAgB,QAAQ;AAO7B,SAAK,uBAAuB,QAAQ;AAEpC,SAAK,sBAAsB;AAAA,MACzB;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA,EAQA,sBAAsB,QAAQ,SAAS;AAIrC,QAAI,iBAAiB;AACrB,QAAI,OAAO,YAAY,WAAW;AAChC,uBAAgD;AAAA,IAClD,OAAO;AACL,uBAAiB;AAAA,QACf,QAAQ;AAAA,QACR,YAA4C;AAAA,QAC5C,cAAc;AAAA,MAChB;AAAA,IACF;AAEA,UAAM,WAAW,aAAa,eAAe,aAAa,OAAO;AACjE,UAAM,UAAU,IAAI,gBAAQ;AAC5B,QAAI,KAAK,eAAe;AACtB,cAAQ,gBAAgB,KAAK,aAAa;AAAA,IAC5C,WACE,KAAK,wBACL,mBAAmB,mBAAmB,QACtC;AACA,cAAQ,gBAAgB,eAAe,gBAAgB;AAAA,IACzD;AACA,YAAQ,YAAY,QAAQ;AAE5B,QAAI,QAAQ,gBAAgB;AAC1B,cAAQ,MAAM,eAAe,KAAK;AAAA,IACpC;AAEA,QAAI,eAAe,eAAe;AAChC,cAAQ,cAAc,eAAe,eAAe,IAAI;AAAA,IAC1D;AACA,WAAO;AAAA,EACT;AAAA,EAQA,uBAAuB,QAAQ,SAAS;AACtC,UAAM,gBAA8C;AAEpD,QAAI,WAAW;AACf,QAAI,cAAc,YAAY,qBAAqB;AACjD,YAAM,2BACJ;AAEF,iBAAW,CAAC;AACZ,YAAM,kBAAkB,yBAAyB;AACjD,eAAS,IAAI,GAAG,KAAK,gBAAgB,QAAQ,IAAI,IAAI,EAAE,GAAG;AACxD,iBAAS,KAAK,KAAK,sBAAsB,gBAAgB,IAAI,OAAO,CAAC;AAAA,MACvE;AAAA,IACF,OAAO;AACL,iBAAW,CAAC,KAAK,sBAAsB,QAAQ,OAAO,CAAC;AAAA,IACzD;AACA,WAAO;AAAA,EACT;AAAA,EAQA,uBAAuB,QAAQ,SAAS;AACtC,WAAO,aAAa,QAAQ,OAAO;AAAA,EACrC;AAAA,EAOA,yBAAyB,QAAQ;AAC/B,UAAM,MAAM,OAAO;AACnB,QAAI;AACJ,QAAI,KAAK;AACP,UAAI,IAAI,WAAW,QAAQ;AACzB,qBAAa,IAAc,IAAI,cAAc,OAAO;AAAA,MACtD,WAAW,IAAI,YAAY,QAAQ;AACjC,qBAAa,IAAc,UAAU,IAAI,cAAc,OAAO;AAAA,MAChE,OAAO;AACL,eAAO,OAAO,EAAE;AAAA,MAClB;AAAA,IACF,OAAO;AACL,mBAAa,KAAK;AAAA,IACpB;AACA,WAA+D;AAAA,EACjE;AAAA,EAUA,mBAAmB,SAAS,SAAS;AACnC,cAAU,KAAK,aAAa,OAAO;AAGnC,UAAM,SAAS;AAAA,MACb,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY;AAAA,IACd;AAEA,UAAM,KAAK,QAAQ,MAAM;AACzB,QAAI,OAAO,QAAW;AACpB,aAAO,KAAK;AAAA,IACd;AAEA,QAAI,CAAC,QAAQ,cAAc,GAAG;AAC5B,aAAO;AAAA,IACT;AAEA,UAAM,aAAa,QAAQ,cAAc;AACzC,UAAM,WAAW,QAAQ,YAAY;AACrC,QAAI,UAAU;AACZ,aAAO,WAAW,cAAc,UAAU,OAAO;AAEjD,aAAO,WAAW,QAAQ,gBAAgB;AAAA,IAC5C;AAEA,QAAI,CAAC,QAAQ,UAAU,GAAG;AACxB,aAAO,aAAa;AAAA,IACtB;AAEA,WAAO;AAAA,EACT;AAAA,EAUA,oBAAoB,UAAU,SAAS;AACrC,cAAU,KAAK,aAAa,OAAO;AACnC,UAAM,UAAU,CAAC;AACjB,aAAS,IAAI,GAAG,KAAK,SAAS,QAAQ,IAAI,IAAI,EAAE,GAAG;AACjD,cAAQ,KAAK,KAAK,mBAAmB,SAAS,IAAI,OAAO,CAAC;AAAA,IAC5D;AACA,WAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EAUA,oBAAoB,UAAU,SAAS;AACrC,WAAO,cAAc,UAAU,KAAK,aAAa,OAAO,CAAC;AAAA,EAC3D;AACF;AAOA,SAAS,aAAa,QAAQ,SAAS;AACrC,MAAI,CAAC,QAAQ;AACX,WAAO;AAAA,EACT;AAKA,MAAI;AACJ,UAAQ,OAAO;AAAA,SACR,SAAS;AACZ,iBAAW,kBAA+C,MAAO;AACjE;AAAA,IACF;AAAA,SACK,cAAc;AACjB,iBAAW;AAAA,QACyB;AAAA,MACpC;AACA;AAAA,IACF;AAAA,SACK,WAAW;AACd,iBAAW,oBAAmD,MAAO;AACrE;AAAA,IACF;AAAA,SACK,cAAc;AACjB,iBAAW;AAAA,QACyB;AAAA,MACpC;AACA;AAAA,IACF;AAAA,SACK,mBAAmB;AACtB,iBAAW;AAAA,QAC8B;AAAA,MACzC;AACA;AAAA,IACF;AAAA,SACK,gBAAgB;AACnB,iBAAW;AAAA,QAC2B;AAAA,MACtC;AACA;AAAA,IACF;AAAA,SACK,sBAAsB;AACzB,iBAAW;AAAA,QACiC;AAAA,MAC5C;AACA;AAAA,IACF;AAAA,aACS;AACP,YAAM,IAAI,MAAM,+BAA+B,OAAO,OAAO;AAAA,IAC/D;AAAA;AAEF,SAAO,6BAA6B,UAAU,OAAO,OAAO;AAC9D;AAOA,SAAS,+BAA+B,QAAQ,SAAS;AACvD,QAAM,aAAa,OAAO,cAAc;AAAA,IAKtC,SAAU,UAAU;AAClB,aAAO,aAAa,UAAU,OAAO;AAAA,IACvC;AAAA,EACF;AACA,SAAO,IAAI,2BAAmB,UAAU;AAC1C;AAMA,SAAS,kBAAkB,QAAQ;AACjC,SAAO,IAAI,cAAM,OAAO,cAAc;AACxC;AAMA,SAAS,uBAAuB,QAAQ;AACtC,SAAO,IAAI,mBAAW,OAAO,cAAc;AAC7C;AAMA,SAAS,4BAA4B,QAAQ;AAC3C,SAAO,IAAI,wBAAgB,OAAO,cAAc;AAClD;AAMA,SAAS,uBAAuB,QAAQ;AACtC,SAAO,IAAI,mBAAW,OAAO,cAAc;AAC7C;AAMA,SAAS,yBAAyB,QAAQ;AACxC,SAAO,IAAI,qBAAa,OAAO,cAAc;AAC/C;AAMA,SAAS,oBAAoB,QAAQ;AACnC,SAAO,IAAI,gBAAQ,OAAO,cAAc;AAC1C;AAOA,SAAS,cAAc,UAAU,SAAS;AACxC,aAAW,6BAA6B,UAAU,MAAM,OAAO;AAC/D,QAAM,OAAO,SAAS,QAAQ;AAG9B,MAAI;AACJ,UAAQ;AAAA,SACD,SAAS;AACZ,gBAAU,mBAAyC,UAAW,OAAO;AACrE;AAAA,IACF;AAAA,SACK,cAAc;AACjB,gBAAU;AAAA,QACmB;AAAA,QAC3B;AAAA,MACF;AACA;AAAA,IACF;AAAA,SACK,WAAW;AACd,gBAAU;AAAA,QACgB;AAAA,QACxB;AAAA,MACF;AACA;AAAA,IACF;AAAA,SACK,cAAc;AACjB,gBAAU;AAAA,QACmB;AAAA,QAC3B;AAAA,MACF;AACA;AAAA,IACF;AAAA,SACK,mBAAmB;AACtB,gBAAU;AAAA,QACwB;AAAA,QAChC;AAAA,MACF;AACA;AAAA,IACF;AAAA,SACK,gBAAgB;AACnB,gBAAU;AAAA,QACqB;AAAA,QAC7B;AAAA,MACF;AACA;AAAA,IACF;AAAA,SACK,sBAAsB;AACzB,gBAAU;AAAA,QAC2B;AAAA,QACnC;AAAA,MACF;AACA;AAAA,IACF;AAAA,SACK,UAAU;AACb,gBAAU;AAAA,QACR,MAAM;AAAA,QACN,YAAY,CAAC;AAAA,MACf;AACA;AAAA,IACF;AAAA,aACS;AACP,YAAM,IAAI,MAAM,gCAAgC,IAAI;AAAA,IACtD;AAAA;AAEF,SAAO;AACT;AAOA,SAAS,gCAAgC,UAAU,SAAS;AAC1D,YAAU,OAAO,OAAO,CAAC,GAAG,OAAO;AACnC,SAAO,QAAQ;AACf,QAAM,aAAa,SAAS,mBAAmB,EAAE,IAAI,SAAUC,WAAU;AACvE,WAAO,cAAcA,WAAU,OAAO;AAAA,EACxC,CAAC;AACD,SAAO;AAAA,IACL,MAAM;AAAA,IACN;AAAA,EACF;AACF;AAOA,SAAS,wBAAwB,UAAU,SAAS;AAClD,SAAO;AAAA,IACL,MAAM;AAAA,IACN,aAAa,SAAS,eAAe;AAAA,EACvC;AACF;AAOA,SAAS,6BAA6B,UAAU,SAAS;AACvD,SAAO;AAAA,IACL,MAAM;AAAA,IACN,aAAa,SAAS,eAAe;AAAA,EACvC;AACF;AAOA,SAAS,wBAAwB,UAAU,SAAS;AAClD,SAAO;AAAA,IACL,MAAM;AAAA,IACN,aAAa,SAAS,eAAe;AAAA,EACvC;AACF;AAOA,SAAS,0BAA0B,UAAU,SAAS;AACpD,MAAI;AACJ,MAAI,SAAS;AACX,YAAQ,QAAQ;AAAA,EAClB;AACA,SAAO;AAAA,IACL,MAAM;AAAA,IACN,aAAa,SAAS,eAAe,KAAK;AAAA,EAC5C;AACF;AAOA,SAAS,mBAAmB,UAAU,SAAS;AAC7C,SAAO;AAAA,IACL,MAAM;AAAA,IACN,aAAa,SAAS,eAAe;AAAA,EACvC;AACF;AAOA,SAAS,qBAAqB,UAAU,SAAS;AAC/C,MAAI;AACJ,MAAI,SAAS;AACX,YAAQ,QAAQ;AAAA,EAClB;AACA,SAAO;AAAA,IACL,MAAM;AAAA,IACN,aAAa,SAAS,eAAe,KAAK;AAAA,EAC5C;AACF;AAEA,IAAO,kBAAQ;;;ACziBf,iBAAgB;;;AC0BhB,IAAM,eAAe,OAAgB;AAOrC,IAAM,gBAAN,MAAoB;AAAA,EASlB,YAAY,MAAM,iBAAiB,MAAM,YAAY,IAAI;AAIvD,SAAK;AAML,SAAK;AAML,SAAK,MAAM;AAMX,SAAK,QAAQ;AAMb,SAAK,mBAAmB;AAMxB,SAAK,sBAAsB;AAM3B,SAAK,iBAAiB;AAMtB,SAAK,QAAQ;AAMb,SAAK,cAAc;AAAA,EACrB;AAAA,EAQA,IAAI,KAAK;AACP,WAAO,KAAK,YAAY;AAAA,EAC1B;AAAA,EAOA,YAAY;AACV,QAAI,CAAC,KAAK,SAAS;AACjB,WAAK,UACH,KAAK,UAAU,UACX,6BAA6B,KAAK,gBAAgB,IAClD;AAAA,QACE,KAAK;AAAA,QACL;AAAA,QACA,KAAK,iBAAiB;AAAA,QACtB;AAAA,MACF;AAAA,IACR;AACA,WAAO,KAAK;AAAA,EACd;AAAA,EAKA,uBAAuB;AACrB,QAAI,CAAC,KAAK,qBAAqB;AAC7B,YAAM,aAAa,UAAU,KAAK,UAAU,CAAC;AAC7C,WAAK,sBAAsB;AAAA,QACzB,KAAK;AAAA,QACL;AAAA,QAC8B,KAAK;AAAA,QACnC;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AACA,WAAO,KAAK;AAAA,EACd;AAAA,EAKA,wBAAwB;AACtB,QAAI,CAAC,KAAK,qBAAqB;AAC7B,YAAM,cAAc;AAAA,QAClB,KAAK;AAAA,QACL;AAAA,QACqC,KAAK;AAAA,QAC1C;AAAA,MACF;AACA,WAAK,sBAAsB;AAAA,QACzB,KAAK;AAAA,QACL;AAAA,QACqC,KAAK;AAAA,QAC1C;AAAA,QACA;AAAA,MACF;AAAA,IACF;AACA,WAAO,KAAK;AAAA,EACd;AAAA,EAKA,kBAAkB;AAChB,QAAI,CAAC,KAAK,gBAAgB;AACxB,WAAK,iBAAiB;AAAA,QACpB,KAAK;AAAA,QACL;AAAA,QACA,KAAK,iBAAiB;AAAA,QACtB;AAAA,QACA;AAAA,MACF;AAAA,IACF;AACA,WAAO,KAAK;AAAA,EACd;AAAA,EAKA,mBAAmB;AACjB,QAAI,CAAC,KAAK,gBAAgB;AACxB,WAAK,iBAAiB,CAAC;AACvB,YAAM,kBAAkB,KAAK;AAC7B,UAAI,SAAS;AACb,YAAM,OAAqC,KAAK;AAChD,eAAS,IAAI,GAAG,KAAK,KAAK,QAAQ,IAAI,IAAI,EAAE,GAAG;AAC7C,cAAM,MAAM,KAAK;AACjB,cAAM,WAAW,iBAAiB,iBAAiB,QAAQ,KAAK,GAAG,GAAG;AACtE,eAAO,KAAK,gBAAgB,QAAQ;AACpC,iBAAS;AAAA,MACX;AAAA,IACF;AACA,WAAO,KAAK;AAAA,EACd;AAAA,EAQA,QAAQ;AACN,WAAO,KAAK;AAAA,EACd;AAAA,EAKA,6BAA6B;AAC3B,WAAO,KAAK;AAAA,EACd;AAAA,EAQA,cAAc;AACZ,WAAO;AAAA,EACT;AAAA,EAMA,sBAAsB,kBAAkB;AACtC,WAAO;AAAA,EACT;AAAA,EASA,oBAAoB,kBAAkB,WAAW;AAC/C,WAAO;AAAA,EACT;AAAA,EAOA,gBAAgB;AACd,WAAO,KAAK;AAAA,EACd;AAAA,EAKA,YAAY;AACV,WAAO;AAAA,EACT;AAAA,EAKA,mBAAmB;AACjB,WAAO,KAAK;AAAA,EACd;AAAA,EAOA,UAAU;AACR,WAAO,KAAK;AAAA,EACd;AAAA,EAOA,UAAU,YAAY;AACpB,iBAAa,IAAc,UAAU;AACrC,UAAM,cAAc,WAAW,UAAU;AACzC,UAAM,kBAAkB,WAAW,eAAe;AAClD,QAAI,eAAe,iBAAiB;AAClC,YAAM,QAAQ,UAAU,eAAe,IAAI,UAAU,WAAW;AAChE;AAAA,QACE;AAAA,QACA,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB;AAAA,QACA,CAAC;AAAA,QACD;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA;AAAA,QACE,KAAK;AAAA,QACL;AAAA,QACA,KAAK,iBAAiB;AAAA,QACtB;AAAA,QACA;AAAA,QACA,KAAK;AAAA,MACP;AAAA,IACF;AAAA,EACF;AAAA,EAIA,UAAU;AACR,WAAO,KAAK;AAAA,EACd;AACF;AAEA,cAAc,UAAU,WAAW,cAAc,UAAU;AAK3D,cAAc,UAAU,qBACtB,cAAc,UAAU;AA8D1B,IAAOC,mBAAQ;;;ADtWf,IAAM,MAAN,cAAkBC,iBAAc;AAAA,EAI9B,YAAY,SAAS;AACnB,UAAM;AAEN,cAAU,UAAU,UAAU,CAAC;AAK/B,SAAK,iBAAiB,IAAI,mBAAW;AAAA,MACnC,MAAM;AAAA,MACN,OAAO;AAAA,IACT,CAAC;AAMD,SAAK,gBAAgB,QAAQ,eACzB,QAAQ,eACRA;AAMJ,SAAK,gBAAgB,QAAQ;AAM7B,SAAK,aAAa,QAAQ,YAAY,QAAQ,YAAY;AAM1D,SAAK,UAAU,QAAQ,SAAS,QAAQ,SAAS;AAMjD,SAAK,cAAc,QAAQ;AAE3B,SAAK,sBAAsB;AAAA,MACzB;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA,EAWA,iBAAiB,KAAK,SAAS,iBAAiB,MAAM;AACpD,QAAI,MAAM,QAAQ;AAElB,UAAM,MAAM,IAAI,WAAW,IAAI,IAAI;AACnC,QAAI,MAAM;AACV,QAAI,SAAS;AACb,QAAI,IAAI;AACR,QAAI,IAAI;AACR,QAAI,YAAY;AAChB,QAAI,aAAa;AAEjB,WAAO,IAAI,MAAM,KAAK;AACpB,UAAI,CAAC,QAAQ;AACX,cAAM,SAAS,IAAI,WAAW;AAC9B,cAAM,SAAS;AACf,iBAAS,UAAU;AAAA,MACrB;AAEA;AAEA,UAAI,QAAQ,KAAK,QAAQ,GAAG;AAC1B,aAAK,IAAI,YAAY;AACrB,aAAK,IAAI,YAAY;AAErB,YAAI,QAAQ,GAAG;AAEb,cAAI,YAAY,YAAY;AAC1B,iBAAK,KAAK,SAAS;AACnB,yBAAa;AAAA,UACf;AAAA,QACF;AAEA,wBAAgB,KAAK,GAAG,CAAC;AACzB,qBAAa;AAAA,MACf,WAAW,QAAQ,GAAG;AACpB,YAAI,YAAY,YAAY;AAE1B,0BAAgB;AAAA,YACd,gBAAgB;AAAA,YAChB,gBAAgB,aAAa;AAAA,UAC/B;AACA,uBAAa;AAAA,QACf;AAAA,MACF,OAAO;AACL,eAAO,OAAO,EAAE;AAAA,MAClB;AAAA,IACF;AAEA,QAAI,YAAY,YAAY;AAC1B,WAAK,KAAK,SAAS;AACnB,mBAAa;AAAA,IACf;AAAA,EACF;AAAA,EASA,eAAe,KAAK,YAAY,SAAS;AACvC,UAAM,OAAO,WAAW;AACxB,QAAI,SAAS,GAAG;AACd,aAAO;AAAA,IACT;AAEA,QAAI;AACJ,UAAM,SAAS,WAAW;AAE1B,QAAI;AACJ,QAAI,CAAC,KAAK,aAAa;AACrB,WAAK,WAAW;AAAA,IAClB,OAAO;AACL,WAAK,OAAO,KAAK;AACjB,aAAO,OAAO,KAAK;AAAA,IACrB;AAEA,WAAO,KAAK,cAAc,WAAW,MAAM;AAE3C,UAAM,kBAAgD,CAAC;AACvD,UAAM,OAAqC,CAAC;AAC5C,SAAK,iBAAiB,KAAK,YAAY,iBAAiB,IAAI;AAE5D,UAAM,eAAe,gBAAgB,MAAM,KAAK,MAAM;AAEtD,QAAI,KAAK,kBAAkBA,kBAAe;AACxC,gBAAU,IAAI,KAAK;AAAA,QACjB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,cAAQ,UAAU,QAAQ,cAAc;AAAA,IAC1C,OAAO;AACL,UAAI;AACJ,UAAI,gBAAgB,WAAW;AAC7B,cAAM,QAAQ,YAAY,iBAAiB,IAAI;AAC/C,eACE,MAAM,SAAS,IACX,IAAI,qBAAa,iBAAiB,MAAM,KAAK,IAC7C,IAAI,gBAAQ,iBAAiB,MAAM,IAAI;AAAA,MAC/C,OAAO;AACL,eACE,iBAAiB,UACb,IAAI,cAAM,iBAAiB,IAAI,IAC/B,iBAAiB,eACjB,IAAI,mBAAW,iBAAiB,IAAI,IACpC,iBAAiB,eACjB,IAAI,mBAAW,iBAAiB,IAAI,IACpC,iBAAiB,oBACjB,IAAI,wBAAgB,iBAAiB,MAAM,IAAI,IAC/C;AAAA,MACR;AACA,YAAM,OACJ,KAAK;AAEP,gBAAU,IAAI,KAAK;AACnB,UAAI,KAAK,eAAe;AACtB,gBAAQ,gBAAgB,KAAK,aAAa;AAAA,MAC5C;AACA,YAAM,WAAW,6BAA6B,MAAM,OAAO,OAAO;AAClE,cAAQ,YAAY,QAAQ;AAC5B,UAAI,OAAO,QAAW;AACpB,gBAAQ,MAAM,EAAE;AAAA,MAClB;AACA,cAAQ,cAAc,QAAQ,IAAI;AAAA,IACpC;AAEA,WAAO;AAAA,EACT;AAAA,EAKA,UAAU;AACR,WAAO;AAAA,EACT;AAAA,EAUA,aAAa,QAAQ,SAAS;AAC5B,UAAM,SAAS,KAAK;AACpB,cAAU,KAAK,aAAa,OAAO;AACnC,UAAM,iBAAiB,IAAI,QAAQ,cAAc;AACjD,mBAAe,eAAe,QAAQ,MAAM;AAC5C,YAAQ,iBAAiB;AAEzB,UAAM,MAAM,IAAI,WAAAC,QAAgC,MAAO;AACvD,UAAM,YAAY,IAAI,WAAW,iBAAiB,CAAC,CAAC;AACpD,UAAM,WAAW,CAAC;AAClB,eAAW,QAAQ,WAAW;AAC5B,UAAI,UAAU,CAAC,OAAO,SAAS,IAAI,GAAG;AACpC;AAAA,MACF;AACA,YAAM,WAAW,UAAU;AAE3B,YAAM,SAAS,WAAW,CAAC,GAAG,GAAG,SAAS,QAAQ,SAAS,MAAM,IAAI;AACrE,qBAAe,UAAU,MAAM;AAE/B,eAAS,IAAI,GAAG,KAAK,SAAS,QAAQ,IAAI,IAAI,EAAE,GAAG;AACjD,cAAM,aAAa,eAAe,KAAK,UAAU,CAAC;AAClD,cAAM,UAAU,KAAK,eAAe,KAAK,YAAY,OAAO;AAC5D,YAAI,YAAY,MAAM;AACpB,mBAAS,KAAK,OAAO;AAAA,QACvB;AAAA,MACF;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAAA,EASA,eAAe,QAAQ;AACrB,WAAO,KAAK;AAAA,EACd;AAAA,EAOA,UAAU,QAAQ;AAChB,SAAK,UAAU;AAAA,EACjB;AACF;AAQA,SAAS,gBAAgB,KAAK,QAAQ,KAAK;AACzC,MAAI,QAAQ,GAAG;AACb,UAAM,QAAQ;AAAA,MACZ,MAAM,CAAC;AAAA,MACP,QAAQ,CAAC;AAAA,MACT,UAAU,CAAC;AAAA,IACb;AACA,UAAM,MAAM,IAAI,WAAW,IAAI,IAAI;AACnC,QAAI,WAAW,gBAAgB,OAAO,GAAG;AACzC,UAAM,SAAS,MAAM,SAAS;AAC9B,QAAI,MAAM,QAAQ;AAChB,aAAO,MAAM,QAAQ;AAAA,IACvB;AAAA,EACF;AACF;AAQA,SAAS,eAAe,KAAK,OAAO,KAAK;AACvC,MAAI,QAAQ,IAAI;AACd,UAAM,UAAU,IAAI,WAAW;AAAA,EACjC,WAAW,QAAQ,GAAG;AACpB,UAAM,OAAO,IAAI,WAAW;AAAA,EAC9B,WAAW,QAAQ,GAAG;AACpB,UAAM,SAAS,IAAI,WAAW;AAAA,EAChC,WAAW,QAAQ,GAAG;AACpB,UAAM,SAAS,KAAK,IAAI,GAAG;AAAA,EAC7B,WAAW,QAAQ,GAAG;AACpB,UAAM,KAAK,KAAK,IAAI,WAAW,CAAC;AAAA,EAClC,WAAW,QAAQ,GAAG;AACpB,QAAI,QAAQ;AACZ,UAAM,MAAM,IAAI,WAAW,IAAI,IAAI;AACnC,WAAO,IAAI,MAAM,KAAK;AACpB,YAAM,IAAI,WAAW,KAAK;AAC1B,cACE,QAAQ,IACJ,IAAI,WAAW,IACf,QAAQ,IACR,IAAI,UAAU,IACd,QAAQ,IACR,IAAI,WAAW,IACf,QAAQ,IACR,IAAI,aAAa,IACjB,QAAQ,IACR,IAAI,WAAW,IACf,QAAQ,IACR,IAAI,YAAY,IAChB,QAAQ,IACR,IAAI,YAAY,IAChB;AAAA,IACR;AACA,UAAM,OAAO,KAAK,KAAK;AAAA,EACzB;AACF;AAQA,SAAS,iBAAiB,KAAK,SAAS,KAAK;AAC3C,MAAI,OAAO,GAAG;AACZ,YAAQ,KAAK,IAAI,WAAW;AAAA,EAC9B,WAAW,OAAO,GAAG;AACnB,UAAM,MAAM,IAAI,WAAW,IAAI,IAAI;AACnC,WAAO,IAAI,MAAM,KAAK;AACpB,YAAM,MAAM,QAAQ,MAAM,KAAK,IAAI,WAAW;AAC9C,YAAM,QAAQ,QAAQ,MAAM,OAAO,IAAI,WAAW;AAClD,cAAQ,WAAW,OAAO;AAAA,IAC5B;AAAA,EACF,WAAW,OAAO,GAAG;AACnB,YAAQ,OAAO,IAAI,WAAW;AAAA,EAChC,WAAW,OAAO,GAAG;AACnB,YAAQ,WAAW,IAAI;AAAA,EACzB;AACF;AASA,SAAS,eAAe,KAAK,OAAO,GAAG;AACrC,MAAI,MAAM,MAAM,SAAS;AACzB,QAAM,MAAM,IAAI,WAAW,IAAI,IAAI;AAEnC,QAAM,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,EACf;AACA,MAAI,WAAW,kBAAkB,SAAS,GAAG;AAC7C,SAAO;AACT;AAQA,SAAS,gBAAgB,MAAM,SAAS;AAEtC,MAAI;AACJ,MAAI,SAAS,GAAG;AACd,mBAAe,YAAY,IAAI,UAAU;AAAA,EAC3C,WAAW,SAAS,GAAG;AACrB,mBAAe,YAAY,IAAI,eAAe;AAAA,EAChD,WAAW,SAAS,GAAG;AACrB,mBAAe;AAAA,EAGjB;AACA,SAAO;AACT;AAEA,IAAO,cAAQ;",
  "names": ["Feature_default", "Feature_default", "geometry", "Feature_default", "Feature_default", "PBF"]
}
