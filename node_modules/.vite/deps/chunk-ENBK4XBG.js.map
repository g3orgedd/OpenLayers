{
  "version": 3,
  "sources": ["../../ol/format/IIIFInfo.js"],
  "sourcesContent": ["/**\r\n * @module ol/format/IIIFInfo\r\n */\r\n\r\nimport {assert} from '../asserts.js';\r\n\r\n/**\r\n * @typedef {Object} PreferredOptions\r\n * @property {string} [format] Preferred image format. Will be used if the image information\r\n * indicates support for that format.\r\n * @property {string} [quality] IIIF image qualitiy.  Will be used if the image information\r\n * indicates support for that quality.\r\n */\r\n\r\n/**\r\n * @typedef {Object} SupportedFeatures\r\n * @property {Array<string>} [supports] Supported IIIF image size and region\r\n * calculation features.\r\n * @property {Array<string>} [formats] Supported image formats.\r\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\r\n */\r\n\r\n/**\r\n * @typedef {Object} TileInfo\r\n * @property {Array<number>} scaleFactors Supported resolution scaling factors.\r\n * @property {number} width Tile width in pixels.\r\n * @property {number} [height] Tile height in pixels. Same as tile width if height is\r\n * not given.\r\n */\r\n\r\n/**\r\n * @typedef {Object} IiifProfile\r\n * @property {Array<string>} [formats] Supported image formats for the image service.\r\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\r\n * @property {Array<string>} [supports] Supported features.\r\n * @property {number} [maxArea] Maximum area (pixels) available for this image service.\r\n * @property {number} [maxHeight] Maximum height.\r\n * @property {number} [maxWidth] Maximum width.\r\n */\r\n\r\n/**\r\n * @typedef {Object<string,string|number|Array<number|string|IiifProfile|Object<string, number>|TileInfo>>}\r\n *    ImageInformationResponse\r\n */\r\n\r\n/**\r\n * Enum representing the major IIIF Image API versions\r\n * @enum {string}\r\n */\r\nexport const Versions = {\r\n  VERSION1: 'version1',\r\n  VERSION2: 'version2',\r\n  VERSION3: 'version3',\r\n};\r\n\r\n/**\r\n * Supported image formats, qualities and supported region / size calculation features\r\n * for different image API versions and compliance levels\r\n * @const\r\n * @type {Object<string, Object<string, SupportedFeatures>>}\r\n */\r\nconst IIIF_PROFILE_VALUES = {};\r\nIIIF_PROFILE_VALUES[Versions.VERSION1] = {\r\n  'level0': {\r\n    supports: [],\r\n    formats: [],\r\n    qualities: ['native'],\r\n  },\r\n  'level1': {\r\n    supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\r\n    formats: ['jpg'],\r\n    qualities: ['native'],\r\n  },\r\n  'level2': {\r\n    supports: [\r\n      'regionByPx',\r\n      'regionByPct',\r\n      'sizeByW',\r\n      'sizeByH',\r\n      'sizeByPct',\r\n      'sizeByConfinedWh',\r\n      'sizeByWh',\r\n    ],\r\n    formats: ['jpg', 'png'],\r\n    qualities: ['native', 'color', 'grey', 'bitonal'],\r\n  },\r\n};\r\nIIIF_PROFILE_VALUES[Versions.VERSION2] = {\r\n  'level0': {\r\n    supports: [],\r\n    formats: ['jpg'],\r\n    qualities: ['default'],\r\n  },\r\n  'level1': {\r\n    supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\r\n    formats: ['jpg'],\r\n    qualities: ['default'],\r\n  },\r\n  'level2': {\r\n    supports: [\r\n      'regionByPx',\r\n      'regionByPct',\r\n      'sizeByW',\r\n      'sizeByH',\r\n      'sizeByPct',\r\n      'sizeByConfinedWh',\r\n      'sizeByDistortedWh',\r\n      'sizeByWh',\r\n    ],\r\n    formats: ['jpg', 'png'],\r\n    qualities: ['default', 'bitonal'],\r\n  },\r\n};\r\nIIIF_PROFILE_VALUES[Versions.VERSION3] = {\r\n  'level0': {\r\n    supports: [],\r\n    formats: ['jpg'],\r\n    qualities: ['default'],\r\n  },\r\n  'level1': {\r\n    supports: ['regionByPx', 'regionSquare', 'sizeByW', 'sizeByH', 'sizeByWh'],\r\n    formats: ['jpg'],\r\n    qualities: ['default'],\r\n  },\r\n  'level2': {\r\n    supports: [\r\n      'regionByPx',\r\n      'regionSquare',\r\n      'regionByPct',\r\n      'sizeByW',\r\n      'sizeByH',\r\n      'sizeByPct',\r\n      'sizeByConfinedWh',\r\n      'sizeByWh',\r\n    ],\r\n    formats: ['jpg', 'png'],\r\n    qualities: ['default'],\r\n  },\r\n};\r\nIIIF_PROFILE_VALUES['none'] = {\r\n  'none': {\r\n    supports: [],\r\n    formats: [],\r\n    qualities: [],\r\n  },\r\n};\r\n\r\nconst COMPLIANCE_VERSION1 =\r\n  /^https?:\\/\\/library\\.stanford\\.edu\\/iiif\\/image-api\\/(?:1\\.1\\/)?compliance\\.html#level[0-2]$/;\r\nconst COMPLIANCE_VERSION2 =\r\n  /^https?:\\/\\/iiif\\.io\\/api\\/image\\/2\\/level[0-2](?:\\.json)?$/;\r\nconst COMPLIANCE_VERSION3 =\r\n  /(^https?:\\/\\/iiif\\.io\\/api\\/image\\/3\\/level[0-2](?:\\.json)?$)|(^level[0-2]$)/;\r\n\r\nfunction generateVersion1Options(iiifInfo) {\r\n  let levelProfile = iiifInfo.getComplianceLevelSupportedFeatures();\r\n  // Version 1.0 and 1.1 do not require a profile.\r\n  if (levelProfile === undefined) {\r\n    levelProfile = IIIF_PROFILE_VALUES[Versions.VERSION1]['level0'];\r\n  }\r\n  return {\r\n    url:\r\n      iiifInfo.imageInfo['@id'] === undefined\r\n        ? undefined\r\n        : iiifInfo.imageInfo['@id'].replace(/\\/?(?:info\\.json)?$/g, ''),\r\n    supports: levelProfile.supports,\r\n    formats: [\r\n      ...levelProfile.formats,\r\n      iiifInfo.imageInfo.formats === undefined\r\n        ? []\r\n        : iiifInfo.imageInfo.formats,\r\n    ],\r\n    qualities: [\r\n      ...levelProfile.qualities,\r\n      iiifInfo.imageInfo.qualities === undefined\r\n        ? []\r\n        : iiifInfo.imageInfo.qualities,\r\n    ],\r\n    resolutions: iiifInfo.imageInfo.scale_factors,\r\n    tileSize:\r\n      iiifInfo.imageInfo.tile_width !== undefined\r\n        ? iiifInfo.imageInfo.tile_height !== undefined\r\n          ? [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_height]\r\n          : [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_width]\r\n        : iiifInfo.imageInfo.tile_height != undefined\r\n        ? [iiifInfo.imageInfo.tile_height, iiifInfo.imageInfo.tile_height]\r\n        : undefined,\r\n  };\r\n}\r\n\r\nfunction generateVersion2Options(iiifInfo) {\r\n  const levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(),\r\n    additionalProfile =\r\n      Array.isArray(iiifInfo.imageInfo.profile) &&\r\n      iiifInfo.imageInfo.profile.length > 1,\r\n    profileSupports =\r\n      additionalProfile && iiifInfo.imageInfo.profile[1].supports\r\n        ? iiifInfo.imageInfo.profile[1].supports\r\n        : [],\r\n    profileFormats =\r\n      additionalProfile && iiifInfo.imageInfo.profile[1].formats\r\n        ? iiifInfo.imageInfo.profile[1].formats\r\n        : [],\r\n    profileQualities =\r\n      additionalProfile && iiifInfo.imageInfo.profile[1].qualities\r\n        ? iiifInfo.imageInfo.profile[1].qualities\r\n        : [];\r\n  return {\r\n    url: iiifInfo.imageInfo['@id'].replace(/\\/?(?:info\\.json)?$/g, ''),\r\n    sizes:\r\n      iiifInfo.imageInfo.sizes === undefined\r\n        ? undefined\r\n        : iiifInfo.imageInfo.sizes.map(function (size) {\r\n            return [size.width, size.height];\r\n          }),\r\n    tileSize:\r\n      iiifInfo.imageInfo.tiles === undefined\r\n        ? undefined\r\n        : [\r\n            iiifInfo.imageInfo.tiles.map(function (tile) {\r\n              return tile.width;\r\n            })[0],\r\n            iiifInfo.imageInfo.tiles.map(function (tile) {\r\n              return tile.height === undefined ? tile.width : tile.height;\r\n            })[0],\r\n          ],\r\n    resolutions:\r\n      iiifInfo.imageInfo.tiles === undefined\r\n        ? undefined\r\n        : iiifInfo.imageInfo.tiles.map(function (tile) {\r\n            return tile.scaleFactors;\r\n          })[0],\r\n    supports: [...levelProfile.supports, ...profileSupports],\r\n    formats: [...levelProfile.formats, ...profileFormats],\r\n    qualities: [...levelProfile.qualities, ...profileQualities],\r\n  };\r\n}\r\n\r\nfunction generateVersion3Options(iiifInfo) {\r\n  const levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(),\r\n    formats =\r\n      iiifInfo.imageInfo.extraFormats === undefined\r\n        ? levelProfile.formats\r\n        : [...levelProfile.formats, ...iiifInfo.imageInfo.extraFormats],\r\n    preferredFormat =\r\n      iiifInfo.imageInfo.preferredFormats !== undefined &&\r\n      Array.isArray(iiifInfo.imageInfo.preferredFormats) &&\r\n      iiifInfo.imageInfo.preferredFormats.length > 0\r\n        ? iiifInfo.imageInfo.preferredFormats\r\n            .filter(function (format) {\r\n              return ['jpg', 'png', 'gif'].includes(format);\r\n            })\r\n            .reduce(function (acc, format) {\r\n              return acc === undefined && formats.includes(format)\r\n                ? format\r\n                : acc;\r\n            }, undefined)\r\n        : undefined;\r\n  return {\r\n    url: iiifInfo.imageInfo['id'],\r\n    sizes:\r\n      iiifInfo.imageInfo.sizes === undefined\r\n        ? undefined\r\n        : iiifInfo.imageInfo.sizes.map(function (size) {\r\n            return [size.width, size.height];\r\n          }),\r\n    tileSize:\r\n      iiifInfo.imageInfo.tiles === undefined\r\n        ? undefined\r\n        : [\r\n            iiifInfo.imageInfo.tiles.map(function (tile) {\r\n              return tile.width;\r\n            })[0],\r\n            iiifInfo.imageInfo.tiles.map(function (tile) {\r\n              return tile.height;\r\n            })[0],\r\n          ],\r\n    resolutions:\r\n      iiifInfo.imageInfo.tiles === undefined\r\n        ? undefined\r\n        : iiifInfo.imageInfo.tiles.map(function (tile) {\r\n            return tile.scaleFactors;\r\n          })[0],\r\n    supports:\r\n      iiifInfo.imageInfo.extraFeatures === undefined\r\n        ? levelProfile.supports\r\n        : [...levelProfile.supports, ...iiifInfo.imageInfo.extraFeatures],\r\n    formats: formats,\r\n    qualities:\r\n      iiifInfo.imageInfo.extraQualities === undefined\r\n        ? levelProfile.qualities\r\n        : [...levelProfile.qualities, ...iiifInfo.imageInfo.extraQualities],\r\n    preferredFormat: preferredFormat,\r\n  };\r\n}\r\n\r\nconst versionFunctions = {};\r\nversionFunctions[Versions.VERSION1] = generateVersion1Options;\r\nversionFunctions[Versions.VERSION2] = generateVersion2Options;\r\nversionFunctions[Versions.VERSION3] = generateVersion3Options;\r\n\r\n/**\r\n * @classdesc\r\n * Format for transforming IIIF Image API image information responses into\r\n * IIIF tile source ready options\r\n *\r\n * @api\r\n */\r\nclass IIIFInfo {\r\n  /**\r\n   * @param {string|ImageInformationResponse} imageInfo\r\n   * Deserialized image information JSON response object or JSON response as string\r\n   */\r\n  constructor(imageInfo) {\r\n    this.setImageInfo(imageInfo);\r\n  }\r\n\r\n  /**\r\n   * @param {string|ImageInformationResponse} imageInfo\r\n   * Deserialized image information JSON response object or JSON response as string\r\n   * @api\r\n   */\r\n  setImageInfo(imageInfo) {\r\n    if (typeof imageInfo == 'string') {\r\n      this.imageInfo = JSON.parse(imageInfo);\r\n    } else {\r\n      this.imageInfo = imageInfo;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {Versions} Major IIIF version.\r\n   * @api\r\n   */\r\n  getImageApiVersion() {\r\n    if (this.imageInfo === undefined) {\r\n      return;\r\n    }\r\n    let context = this.imageInfo['@context'] || 'ol-no-context';\r\n    if (typeof context == 'string') {\r\n      context = [context];\r\n    }\r\n    for (let i = 0; i < context.length; i++) {\r\n      switch (context[i]) {\r\n        case 'http://library.stanford.edu/iiif/image-api/1.1/context.json':\r\n        case 'http://iiif.io/api/image/1/context.json':\r\n          return Versions.VERSION1;\r\n        case 'http://iiif.io/api/image/2/context.json':\r\n          return Versions.VERSION2;\r\n        case 'http://iiif.io/api/image/3/context.json':\r\n          return Versions.VERSION3;\r\n        case 'ol-no-context':\r\n          // Image API 1.0 has no '@context'\r\n          if (\r\n            this.getComplianceLevelEntryFromProfile(Versions.VERSION1) &&\r\n            this.imageInfo.identifier\r\n          ) {\r\n            return Versions.VERSION1;\r\n          }\r\n          break;\r\n        default:\r\n      }\r\n    }\r\n    assert(false, 61);\r\n  }\r\n\r\n  /**\r\n   * @param {Versions} version Optional IIIF image API version\r\n   * @return {string} Compliance level as it appears in the IIIF image information\r\n   * response.\r\n   */\r\n  getComplianceLevelEntryFromProfile(version) {\r\n    if (this.imageInfo === undefined || this.imageInfo.profile === undefined) {\r\n      return;\r\n    }\r\n    if (version === undefined) {\r\n      version = this.getImageApiVersion();\r\n    }\r\n    switch (version) {\r\n      case Versions.VERSION1:\r\n        if (COMPLIANCE_VERSION1.test(this.imageInfo.profile)) {\r\n          return this.imageInfo.profile;\r\n        }\r\n        break;\r\n      case Versions.VERSION3:\r\n        if (COMPLIANCE_VERSION3.test(this.imageInfo.profile)) {\r\n          return this.imageInfo.profile;\r\n        }\r\n        break;\r\n      case Versions.VERSION2:\r\n        if (\r\n          typeof this.imageInfo.profile === 'string' &&\r\n          COMPLIANCE_VERSION2.test(this.imageInfo.profile)\r\n        ) {\r\n          return this.imageInfo.profile;\r\n        }\r\n        if (\r\n          Array.isArray(this.imageInfo.profile) &&\r\n          this.imageInfo.profile.length > 0 &&\r\n          typeof this.imageInfo.profile[0] === 'string' &&\r\n          COMPLIANCE_VERSION2.test(this.imageInfo.profile[0])\r\n        ) {\r\n          return this.imageInfo.profile[0];\r\n        }\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Versions} version Optional IIIF image API version\r\n   * @return {string} Compliance level, on of 'level0', 'level1' or 'level2' or undefined\r\n   */\r\n  getComplianceLevelFromProfile(version) {\r\n    const complianceLevel = this.getComplianceLevelEntryFromProfile(version);\r\n    if (complianceLevel === undefined) {\r\n      return undefined;\r\n    }\r\n    const level = complianceLevel.match(/level[0-2](?:\\.json)?$/g);\r\n    return Array.isArray(level) ? level[0].replace('.json', '') : undefined;\r\n  }\r\n\r\n  /**\r\n   * @return {SupportedFeatures} Image formats, qualities and region / size calculation\r\n   * methods that are supported by the IIIF service.\r\n   */\r\n  getComplianceLevelSupportedFeatures() {\r\n    if (this.imageInfo === undefined) {\r\n      return;\r\n    }\r\n    const version = this.getImageApiVersion();\r\n    const level = this.getComplianceLevelFromProfile(version);\r\n    if (level === undefined) {\r\n      return IIIF_PROFILE_VALUES['none']['none'];\r\n    }\r\n    return IIIF_PROFILE_VALUES[version][level];\r\n  }\r\n\r\n  /**\r\n   * @param {PreferredOptions} [preferredOptions] Optional options for preferred format and quality.\r\n   * @return {import(\"../source/IIIF.js\").Options} IIIF tile source ready constructor options.\r\n   * @api\r\n   */\r\n  getTileSourceOptions(preferredOptions) {\r\n    const options = preferredOptions || {},\r\n      version = this.getImageApiVersion();\r\n    if (version === undefined) {\r\n      return;\r\n    }\r\n    const imageOptions =\r\n      version === undefined ? undefined : versionFunctions[version](this);\r\n    if (imageOptions === undefined) {\r\n      return;\r\n    }\r\n    return {\r\n      url: imageOptions.url,\r\n      version: version,\r\n      size: [this.imageInfo.width, this.imageInfo.height],\r\n      sizes: imageOptions.sizes,\r\n      format:\r\n        options.format !== undefined &&\r\n        imageOptions.formats.includes(options.format)\r\n          ? options.format\r\n          : imageOptions.preferredFormat !== undefined\r\n          ? imageOptions.preferredFormat\r\n          : 'jpg',\r\n      supports: imageOptions.supports,\r\n      quality:\r\n        options.quality && imageOptions.qualities.includes(options.quality)\r\n          ? options.quality\r\n          : imageOptions.qualities.includes('native')\r\n          ? 'native'\r\n          : 'default',\r\n      resolutions: Array.isArray(imageOptions.resolutions)\r\n        ? imageOptions.resolutions.sort(function (a, b) {\r\n            return b - a;\r\n          })\r\n        : undefined,\r\n      tileSize: imageOptions.tileSize,\r\n    };\r\n  }\r\n}\r\n\r\nexport default IIIFInfo;\r\n"],
  "mappings": "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",
  "names": []
}
